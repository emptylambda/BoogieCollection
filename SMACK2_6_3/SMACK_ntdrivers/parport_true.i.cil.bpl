// generated by SMACK version 2.6.3 for boogie
// via /usr/local/bin/smack -t --verifier boogie /home/user/smack/test/c/ntdrivers/parport_true.i.cil.c -bpl ./parport_true.i.cil.bpl

// Basic types
type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i33 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
// Memory model constants
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;

// Memory maps (104 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: i32;
var $M.4: i32;
var $M.5: [ref] i64;
var $M.6: [ref] i64;
var $M.7: [ref] i64;
var $M.8: [ref] i64;
var $M.9: [ref] ref;
var $M.10: [ref] i64;
var $M.11: i32;
var $M.12: [ref] ref;
var $M.13: [ref] ref;
var $M.14: [ref] ref;
var $M.15: [ref] ref;
var $M.16: [ref] i8;
var $M.17: [ref] i32;
var $M.18: i32;
var $M.19: ref;
var $M.20: i32;
var $M.21: [ref] i32;
var $M.22: i32;
var $M.23: [ref] ref;
var $M.24: [ref] ref;
var $M.25: [ref] i64;
var $M.26: ref;
var $M.27: [ref] ref;
var $M.28: [ref] i64;
var $M.29: i32;
var $M.30: i8;
var $M.31: [ref] i8;
var $M.32: [ref] i8;
var $M.33: [ref] i64;
var $M.34: [ref] i64;
var $M.35: [ref] i64;
var $M.36: [ref] i64;
var $M.37: [ref] i64;
var $M.38: [ref] i64;
var $M.39: [ref] ref;
var $M.40: [ref] ref;
var $M.41: [ref] ref;
var $M.42: [ref] ref;
var $M.43: i32;
var $M.44: i32;
var $M.45: i32;
var $M.46: i32;
var $M.47: i32;
var $M.48: [ref] i8;
var $M.49: [ref] i32;
var $M.50: i32;
var $M.51: [ref] i8;
var $M.52: [ref] i8;
var $M.53: [ref] i8;
var $M.54: i32;
var $M.55: [ref] i8;
var $M.56: i64;
var $M.57: i64;
var $M.58: [ref] i8;
var $M.59: [ref] i64;
var $M.60: [ref] i64;
var $M.61: [ref] ref;
var $M.62: [ref] i64;
var $M.63: [ref] ref;
var $M.64: [ref] i64;
var $M.65: [ref] ref;
var $M.66: [ref] ref;
var $M.67: [ref] i64;
var $M.68: [ref] ref;
var $M.69: [ref] ref;
var $M.70: [ref] ref;
var $M.71: [ref] ref;
var $M.72: [ref] i8;
var $M.73: [ref] i8;
var $M.74: [ref] i64;
var $M.75: [ref] i8;
var $M.76: [ref] ref;
var $M.77: [ref] i8;
var $M.78: [ref] i8;
var $M.79: [ref] ref;
var $M.80: [ref] ref;
var $M.81: [ref] ref;
var $M.82: [ref] i8;
var $M.83: [ref] ref;
var $M.84: [ref] ref;
var $M.85: [ref] ref;
var $M.86: [ref] ref;
var $M.87: [ref] i64;
var $M.88: [ref] ref;
var $M.89: [ref] ref;
var $M.90: [ref] ref;
var $M.91: [ref] ref;
var $M.92: [ref] ref;
var $M.93: [ref] ref;
var $M.94: [ref] ref;
var $M.95: [ref] ref;
var $M.96: [ref] ref;
var $M.97: [ref] ref;
var $M.98: [ref] ref;
var $M.99: [ref] ref;
var $M.100: [ref] ref;
var $M.101: [ref] ref;
var $M.102: i32;
var $M.103: ref;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 240440));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32768)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p, $EXTERNS_BOTTOM) }

// SMT bit-vector/integer conversion
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);

// Integer arithmetic operations
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i33(i1: i33, i2: i33) returns (i33) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i33(i1: i33, i2: i33) returns (i33) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i33(i1: i33, i2: i33) returns (i33) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $idiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $idiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $idiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $idiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $idiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $idiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $idiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $idiv.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "div"} $idiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $idiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $idiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $idiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $idiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $idiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $idiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $idiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $idiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $idiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $sdiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1, i2) }
function {:inline} $sdiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1, i2) }
function {:inline} $sdiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1, i2) }
function {:inline} $sdiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1, i2) }
function {:inline} $sdiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1, i2) }
function {:inline} $sdiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1, i2) }
function {:inline} $sdiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1, i2) }
function {:inline} $sdiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1, i2) }
function {:inline} $sdiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1, i2) }
function {:inline} $sdiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1, i2) }
function {:inline} $sdiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1, i2) }
function {:inline} $sdiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1, i2) }
function {:inline} $sdiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1, i2) }
function {:inline} $sdiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1, i2) }
function {:inline} $sdiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1, i2) }
function {:inline} $sdiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1, i2) }
function {:inline} $sdiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1, i2) }
function {:inline} $sdiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1, i2) }
function {:inline} $udiv.i1(i1: i1, i2: i1) returns (i1) { $idiv.i1(i1, i2) }
function {:inline} $udiv.i5(i1: i5, i2: i5) returns (i5) { $idiv.i5(i1, i2) }
function {:inline} $udiv.i6(i1: i6, i2: i6) returns (i6) { $idiv.i6(i1, i2) }
function {:inline} $udiv.i8(i1: i8, i2: i8) returns (i8) { $idiv.i8(i1, i2) }
function {:inline} $udiv.i16(i1: i16, i2: i16) returns (i16) { $idiv.i16(i1, i2) }
function {:inline} $udiv.i24(i1: i24, i2: i24) returns (i24) { $idiv.i24(i1, i2) }
function {:inline} $udiv.i32(i1: i32, i2: i32) returns (i32) { $idiv.i32(i1, i2) }
function {:inline} $udiv.i33(i1: i33, i2: i33) returns (i33) { $idiv.i33(i1, i2) }
function {:inline} $udiv.i40(i1: i40, i2: i40) returns (i40) { $idiv.i40(i1, i2) }
function {:inline} $udiv.i48(i1: i48, i2: i48) returns (i48) { $idiv.i48(i1, i2) }
function {:inline} $udiv.i56(i1: i56, i2: i56) returns (i56) { $idiv.i56(i1, i2) }
function {:inline} $udiv.i64(i1: i64, i2: i64) returns (i64) { $idiv.i64(i1, i2) }
function {:inline} $udiv.i80(i1: i80, i2: i80) returns (i80) { $idiv.i80(i1, i2) }
function {:inline} $udiv.i88(i1: i88, i2: i88) returns (i88) { $idiv.i88(i1, i2) }
function {:inline} $udiv.i96(i1: i96, i2: i96) returns (i96) { $idiv.i96(i1, i2) }
function {:inline} $udiv.i128(i1: i128, i2: i128) returns (i128) { $idiv.i128(i1, i2) }
function {:inline} $udiv.i160(i1: i160, i2: i160) returns (i160) { $idiv.i160(i1, i2) }
function {:inline} $udiv.i256(i1: i256, i2: i256) returns (i256) { $idiv.i256(i1, i2) }
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i33(i1: i33, i2: i33) returns (i33);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1, i2), 0) && $slt.i1.bool(i1, 0)) then $sub.i1($smod.i1(i1, i2), $smax.i1(i2, $sub.i1(0, i2))) else $smod.i1(i1, i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1, i2), 0) && $slt.i5.bool(i1, 0)) then $sub.i5($smod.i5(i1, i2), $smax.i5(i2, $sub.i5(0, i2))) else $smod.i5(i1, i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1, i2), 0) && $slt.i6.bool(i1, 0)) then $sub.i6($smod.i6(i1, i2), $smax.i6(i2, $sub.i6(0, i2))) else $smod.i6(i1, i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1, i2), 0) && $slt.i8.bool(i1, 0)) then $sub.i8($smod.i8(i1, i2), $smax.i8(i2, $sub.i8(0, i2))) else $smod.i8(i1, i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1, i2), 0) && $slt.i16.bool(i1, 0)) then $sub.i16($smod.i16(i1, i2), $smax.i16(i2, $sub.i16(0, i2))) else $smod.i16(i1, i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1, i2), 0) && $slt.i24.bool(i1, 0)) then $sub.i24($smod.i24(i1, i2), $smax.i24(i2, $sub.i24(0, i2))) else $smod.i24(i1, i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1, i2), 0) && $slt.i32.bool(i1, 0)) then $sub.i32($smod.i32(i1, i2), $smax.i32(i2, $sub.i32(0, i2))) else $smod.i32(i1, i2)) }
function {:inline} $srem.i33(i1: i33, i2: i33) returns (i33) { (if ($ne.i33.bool($smod.i33(i1, i2), 0) && $slt.i33.bool(i1, 0)) then $sub.i33($smod.i33(i1, i2), $smax.i33(i2, $sub.i33(0, i2))) else $smod.i33(i1, i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1, i2), 0) && $slt.i40.bool(i1, 0)) then $sub.i40($smod.i40(i1, i2), $smax.i40(i2, $sub.i40(0, i2))) else $smod.i40(i1, i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1, i2), 0) && $slt.i48.bool(i1, 0)) then $sub.i48($smod.i48(i1, i2), $smax.i48(i2, $sub.i48(0, i2))) else $smod.i48(i1, i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1, i2), 0) && $slt.i56.bool(i1, 0)) then $sub.i56($smod.i56(i1, i2), $smax.i56(i2, $sub.i56(0, i2))) else $smod.i56(i1, i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1, i2), 0) && $slt.i64.bool(i1, 0)) then $sub.i64($smod.i64(i1, i2), $smax.i64(i2, $sub.i64(0, i2))) else $smod.i64(i1, i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1, i2), 0) && $slt.i80.bool(i1, 0)) then $sub.i80($smod.i80(i1, i2), $smax.i80(i2, $sub.i80(0, i2))) else $smod.i80(i1, i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1, i2), 0) && $slt.i88.bool(i1, 0)) then $sub.i88($smod.i88(i1, i2), $smax.i88(i2, $sub.i88(0, i2))) else $smod.i88(i1, i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1, i2), 0) && $slt.i96.bool(i1, 0)) then $sub.i96($smod.i96(i1, i2), $smax.i96(i2, $sub.i96(0, i2))) else $smod.i96(i1, i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1, i2), 0) && $slt.i128.bool(i1, 0)) then $sub.i128($smod.i128(i1, i2), $smax.i128(i2, $sub.i128(0, i2))) else $smod.i128(i1, i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1, i2), 0) && $slt.i160.bool(i1, 0)) then $sub.i160($smod.i160(i1, i2), $smax.i160(i2, $sub.i160(0, i2))) else $smod.i160(i1, i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1, i2), 0) && $slt.i256.bool(i1, 0)) then $sub.i256($smod.i256(i1, i2), $smax.i256(i2, $sub.i256(0, i2))) else $smod.i256(i1, i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1, i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1, i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1, i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1, i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1, i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1, i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1, i2) }
function {:inline} $urem.i33(i1: i33, i2: i33) returns (i33) { $smod.i33(i1, i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1, i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1, i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1, i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1, i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1, i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1, i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1, i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1, i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1, i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1, i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i33(i1: i33, i2: i33) returns (i33);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i33(i1: i33, i2: i33) returns (i33);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i33(i1: i33, i2: i33) returns (i33);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i33(i1: i33, i2: i33) returns (i33);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i33(i1: i33, i2: i33) returns (i33);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i33(i1: i33, i2: i33) returns (i33);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i33(i1: i33, i2: i33) returns (i33);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i33(i: i33) returns (i33);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if $slt.i5.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if $slt.i6.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if $slt.i8.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if $slt.i16.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if $slt.i24.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if $slt.i32.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i33(i1: i33, i2: i33) returns (i33) { (if $slt.i33.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if $slt.i40.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if $slt.i48.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if $slt.i56.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if $slt.i64.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if $slt.i80.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if $slt.i88.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if $slt.i96.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if $slt.i128.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if $slt.i160.bool(i1, i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if $slt.i256.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if $sgt.i5.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if $sgt.i6.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if $sgt.i8.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if $sgt.i16.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if $sgt.i24.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if $sgt.i32.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i33(i1: i33, i2: i33) returns (i33) { (if $sgt.i33.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if $sgt.i40.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if $sgt.i48.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if $sgt.i56.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if $sgt.i64.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if $sgt.i80.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if $sgt.i88.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if $sgt.i96.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if $sgt.i128.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if $sgt.i160.bool(i1, i2) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if $sgt.i256.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if $ult.i5.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if $ult.i6.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if $ult.i8.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if $ult.i16.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if $ult.i24.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if $ult.i32.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i33(i1: i33, i2: i33) returns (i33) { (if $ult.i33.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if $ult.i40.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if $ult.i48.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if $ult.i56.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if $ult.i64.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if $ult.i80.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if $ult.i88.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if $ult.i96.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if $ult.i128.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if $ult.i160.bool(i1, i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if $ult.i256.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if $ugt.i5.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if $ugt.i6.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if $ugt.i8.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if $ugt.i16.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if $ugt.i24.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if $ugt.i32.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i33(i1: i33, i2: i33) returns (i33) { (if $ugt.i33.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if $ugt.i40.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if $ugt.i48.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if $ugt.i56.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if $ugt.i64.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if $ugt.i80.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if $ugt.i88.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if $ugt.i96.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if $ugt.i128.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if $ugt.i160.bool(i1, i2) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if $ugt.i256.bool(i1, i2) then i1 else i2) }
axiom ($and.i1(0, 0) == 0);
axiom ($or.i1(0, 0) == 0);
axiom ($xor.i1(0, 0) == 0);
axiom ($and.i1(0, 1) == 0);
axiom ($or.i1(0, 1) == 1);
axiom ($xor.i1(0, 1) == 1);
axiom ($and.i1(1, 0) == 0);
axiom ($or.i1(1, 0) == 1);
axiom ($xor.i1(1, 0) == 1);
axiom ($and.i1(1, 1) == 1);
axiom ($or.i1(1, 1) == 1);
axiom ($xor.i1(1, 1) == 0);
axiom ($and.i32(32, 16) == 0);
// Integer predicates
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i33(i1: i33, i2: i33) returns (i1) { (if $ule.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $ult.i33(i1: i33, i2: i33) returns (i1) { (if $ult.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i33(i1: i33, i2: i33) returns (i1) { (if $uge.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i33(i1: i33, i2: i33) returns (i1) { (if $ugt.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i33(i1: i33, i2: i33) returns (i1) { (if $sle.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 < i2) }
function {:inline} $slt.i33(i1: i33, i2: i33) returns (i1) { (if $slt.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i33(i1: i33, i2: i33) returns (i1) { (if $sge.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i33(i1: i33, i2: i33) returns (i1) { (if $sgt.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 == i2) }
function {:inline} $eq.i33(i1: i33, i2: i33) returns (i1) { (if $eq.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i33.bool(i1: i33, i2: i33) returns (bool) { (i1 != i2) }
function {:inline} $ne.i33(i1: i33, i2: i33) returns (i1) { (if $ne.i33.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1, i2) then 1 else 0) }
// Integer load/store operations
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i33(M: [ref] i33, p: ref) returns (i33) { M[p] }
function {:inline} $store.i33(M: [ref] i33, p: ref, i: i33) returns ([ref] i33) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
// Conversion between integer types
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i33.i1(i: i33) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i33.i5(i: i33) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i33.i6(i: i33) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i33.i8(i: i33) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i33.i16(i: i33) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i33.i24(i: i33) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i33.i32(i: i33) returns (i32) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i40.i33(i: i40) returns (i33) { i }
function {:inline} $trunc.i48.i33(i: i48) returns (i33) { i }
function {:inline} $trunc.i56.i33(i: i56) returns (i33) { i }
function {:inline} $trunc.i64.i33(i: i64) returns (i33) { i }
function {:inline} $trunc.i80.i33(i: i80) returns (i33) { i }
function {:inline} $trunc.i88.i33(i: i88) returns (i33) { i }
function {:inline} $trunc.i96.i33(i: i96) returns (i33) { i }
function {:inline} $trunc.i128.i33(i: i128) returns (i33) { i }
function {:inline} $trunc.i160.i33(i: i160) returns (i33) { i }
function {:inline} $trunc.i256.i33(i: i256) returns (i33) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $sext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $sext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $sext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $sext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $sext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $sext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $sext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $sext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $sext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i33(i: i1) returns (i33) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i33(i: i5) returns (i33) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i33(i: i6) returns (i33) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i33(i: i8) returns (i33) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i33(i: i16) returns (i33) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i33(i: i24) returns (i33) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i33(i: i32) returns (i33) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i33.i40(i: i33) returns (i40) { i }
function {:inline} $zext.i33.i48(i: i33) returns (i48) { i }
function {:inline} $zext.i33.i56(i: i33) returns (i56) { i }
function {:inline} $zext.i33.i64(i: i33) returns (i64) { i }
function {:inline} $zext.i33.i80(i: i33) returns (i80) { i }
function {:inline} $zext.i33.i88(i: i33) returns (i88) { i }
function {:inline} $zext.i33.i96(i: i33) returns (i96) { i }
function {:inline} $zext.i33.i128(i: i33) returns (i128) { i }
function {:inline} $zext.i33.i160(i: i33) returns (i160) { i }
function {:inline} $zext.i33.i256(i: i33) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i33(p: ref, i: int) returns (i33);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
// Pointer arithmetic operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

// Pointer predicates
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 == p2) }
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 != p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 > p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 >= p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 < p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.ref.bool(p1, p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { (p1 <= p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.ref.bool(p1, p2) then 1 else 0) }

// Pointer load/store operations
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }

// Pointer conversion
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
// Pointer-number conversion
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

function $fp(ipart: int, fpart: int, epart: int) returns (float);
// Floating-point arithmetic operations
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
function $fneg.float(f: float) returns (float);
// Floating-point predicates
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
// Floating-point/integer conversion
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i33(f: float) returns (i33);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i33(f: float) returns (i33);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i33.float(i: i33) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i33.float(i: i33) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
// Floating-point conversion
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
// Floating-point load/store operations
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const myStatus: ref;
axiom (myStatus == $sub.ref(0, 1028));
const {:count 25} PnpIrpName: ref;
axiom (PnpIrpName == $sub.ref(0, 2252));
const .str: ref;
axiom (.str == $sub.ref(0, 3317));
const {:count 41} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 4382));
const {:count 41} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 5447));
const {:count 41} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 6512));
const {:count 41} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 7577));
const {:count 41} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 8642));
const {:count 41} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 9707));
const {:count 41} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 10772));
const {:count 41} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 11837));
const {:count 41} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 12902));
const {:count 41} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 13967));
const {:count 41} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 15032));
const {:count 41} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 16097));
const {:count 41} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 17162));
const {:count 41} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 18227));
const {:count 41} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 19292));
const {:count 41} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 20357));
const {:count 41} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 21422));
const {:count 41} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 22487));
const {:count 41} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 23552));
const {:count 41} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 24617));
const {:count 41} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 25682));
const {:count 41} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 26747));
const {:count 41} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 27812));
const {:count 41} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 28877));
const RegistryPath: ref;
axiom (RegistryPath == $sub.ref(0, 29917));
const PortInfoMutex: ref;
axiom (PortInfoMutex == $sub.ref(0, 30949));
const pended: ref;
axiom (pended == $sub.ref(0, 31977));
const PptDot3Retries: ref;
axiom (PptDot3Retries == $sub.ref(0, 33002));
const Extension_FilterMode: ref;
axiom (Extension_FilterMode == $sub.ref(0, 34030));
const PhysicalZero: ref;
axiom (PhysicalZero == $sub.ref(0, 35070));
const s: ref;
axiom (s == $sub.ref(0, 36098));
const NP: ref;
axiom (NP == $sub.ref(0, 37126));
const SKIP1: ref;
axiom (SKIP1 == $sub.ref(0, 38154));
const compRegistered: ref;
axiom (compRegistered == $sub.ref(0, 39182));
const compFptr: ref;
axiom (compFptr == $sub.ref(0, 40214));
const routine: ref;
axiom (routine == $sub.ref(0, 41242));
const PptWmiAllocFreeCountsGuid: ref;
axiom (PptWmiAllocFreeCountsGuid == $sub.ref(0, 42290));
const PptWmiGuidList: ref;
axiom (PptWmiGuidList == $sub.ref(0, 43338));
const DC: ref;
axiom (DC == $sub.ref(0, 44366));
const UNLOADED: ref;
axiom (UNLOADED == $sub.ref(0, 45394));
const SKIP2: ref;
axiom (SKIP2 == $sub.ref(0, 46422));
const MPR1: ref;
axiom (MPR1 == $sub.ref(0, 47450));
const MPR3: ref;
axiom (MPR3 == $sub.ref(0, 48478));
const IPC: ref;
axiom (IPC == $sub.ref(0, 49506));
const lowerDriverReturn: ref;
axiom (lowerDriverReturn == $sub.ref(0, 50534));
const setEventCalled: ref;
axiom (setEventCalled == $sub.ref(0, 51562));
const customIrp: ref;
axiom (customIrp == $sub.ref(0, 52590));
const pirp: ref;
axiom (pirp == $sub.ref(0, 53622));
const {:count 41} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 54687));
const {:count 8} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 55719));
const {:count 7} ModeQualifier___6: ref;
axiom (ModeQualifier___6 == $sub.ref(0, 56750));
const {:count 3} LegacyZipModeQualifier___11: ref;
axiom (LegacyZipModeQualifier___11 == $sub.ref(0, 57777));
const {:count 7} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 58808));
const errorFn: ref;
axiom (errorFn == $sub.ref(0, 59840));
procedure {:inline 1} errorFn()
{
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2229, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2229, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2231, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2231, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2231, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2232, 5} true;
  assume {:verifier.code 0} true;
  goto $bb1;
}
const llvm.dbg.label: ref;
axiom (llvm.dbg.label == $sub.ref(0, 60872));
procedure {:inline 1} llvm.dbg.label($p0: ref);
const PptDispatchCleanup: ref;
axiom (PptDispatchCleanup == $sub.ref(0, 61904));
procedure {:inline 1} PptDispatchCleanup($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2327, 31} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2327, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2327, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2327, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2329, 20} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2329, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2329, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:2329:37: warning: over-approximating bitwise operation and; */
  $i8 := $and.i64($i7, 4096);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2329, 37} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2329, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2330, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2338, 14} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2339, 10} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p11 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2339, 37} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2339, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2340, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p14 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2340, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2341, 5} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2343, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2334, 7} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2336, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 62936));
procedure {:inline 1} llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const IoAcquireCancelSpinLock: ref;
axiom (IoAcquireCancelSpinLock == $sub.ref(0, 63968));
procedure {:inline 1} IoAcquireCancelSpinLock($p0: ref);
const PptCompleteRequest: ref;
axiom (PptCompleteRequest == $sub.ref(0, 65000));
procedure {:inline 1} PptCompleteRequest($p0: ref, $i1: i8)
{
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6364, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptCompleteRequest:arg:PriorityBoost"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6364, 7} true;
  assume {:verifier.code 0} true;
  call IofCompleteRequest($p0, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6365, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const IofCompleteRequest: ref;
axiom (IofCompleteRequest == $sub.ref(0, 66032));
procedure {:inline 1} IofCompleteRequest($p0: ref, $i1: i8)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10077, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "IofCompleteRequest:arg:PriorityBoost"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10077, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10077, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10077, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i2, $i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10077, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10078, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $M.4;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10078, 9} true;
  assume {:verifier.code 0} true;
  $M.2 := $i5;
  call {:cexpr "s"} boogie_si_record_i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10079, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10080, 9} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10082, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptDebugDumpPnpIrpInfo: ref;
axiom (PptDebugDumpPnpIrpInfo == $sub.ref(0, 67064));
procedure {:inline 1} PptDebugDumpPnpIrpInfo($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2406, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2406, 21} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2406, 26} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2406, 34} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p5 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2407, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2407, 21} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2408, 24} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 68)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2408, 24} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2408, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2408, 38} true;
  assume {:verifier.code 0} true;
  $i11 := $sle.i32($i10, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2408, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2410, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2415, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptAcquireRemoveLock: ref;
axiom (PptAcquireRemoveLock == $sub.ref(0, 68096));
procedure {:inline 1} PptAcquireRemoveLock($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2423, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2423, 16} true;
  assume {:verifier.code 0} true;
  call $i2 := IoAcquireRemoveLockEx($p0, $p1, .str.26, 69, 48);
  call {:cexpr "status"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2426, 5} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const IoAcquireRemoveLockEx: ref;
axiom (IoAcquireRemoveLockEx == $sub.ref(0, 69128));
procedure {:inline 1} IoAcquireRemoveLockEx($p0: ref, $p1: ref, $p2: ref, $i3: i64, $i4: i64)
  returns ($r: i64)
{
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10591, 24} true;
  assume {:verifier.code 1} true;
  call {:cexpr "IoAcquireRemoveLockEx:arg:Line"} boogie_si_record_i64($i3);
  call {:cexpr "IoAcquireRemoveLockEx:arg:RemlockSize"} boogie_si_record_i64($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10591, 24} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10594, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10594, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10595, 7} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10597, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 1073741738);
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10600, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const PptReleaseRemoveLock: ref;
axiom (PptReleaseRemoveLock == $sub.ref(0, 70160));
procedure {:inline 1} PptReleaseRemoveLock($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2432, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2432, 7} true;
  assume {:verifier.code 0} true;
  call IoReleaseRemoveLockEx($p0, $p1, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2433, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const IoReleaseRemoveLockEx: ref;
axiom (IoReleaseRemoveLockEx == $sub.ref(0, 71192));
procedure {:inline 1} IoReleaseRemoveLockEx($p0: ref, $p1: ref, $i2: i64);
const PptReleaseRemoveLockAndWait: ref;
axiom (PptReleaseRemoveLockAndWait == $sub.ref(0, 72224));
procedure {:inline 1} PptReleaseRemoveLockAndWait($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2439, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2439, 7} true;
  assume {:verifier.code 0} true;
  call IoReleaseRemoveLockAndWaitEx($p0, $p1, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2440, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const IoReleaseRemoveLockAndWaitEx: ref;
axiom (IoReleaseRemoveLockAndWaitEx == $sub.ref(0, 73256));
procedure {:inline 1} IoReleaseRemoveLockAndWaitEx($p0: ref, $p1: ref, $i2: i64);
const PptDebugDumpResourceList: ref;
axiom (PptDebugDumpResourceList == $sub.ref(0, 74288));
procedure {:inline 1} PptDebugDumpResourceList($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $i7: i1;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i1;
  var $i24: i64;
  var $p25: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2449, 27} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2449, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2449, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  call {:cexpr "count"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2452, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2454, 7} true;
  assume {:verifier.code 0} true;
  $i5, $p6 := 0, $p4;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2454, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2456, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i64($i5, $i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2456, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2458, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2459, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2461, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p6, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2461, 22} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2461, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2461, 27} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2461, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2503, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2462, 11} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2464, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p6, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2464, 24} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2464, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2464, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2464, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb10, $bb11;
$bb9:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2478, 21} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb10:
  assume ($i15 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2465, 13} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i15 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2467, 26} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p6, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2467, 26} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2467, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2467, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2467, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb13, $bb14;
$bb12:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2481, 21} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb13:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2468, 15} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2470, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p6, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2470, 28} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2470, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2470, 33} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2470, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb16, $bb17;
$bb15:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2484, 21} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb16:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2471, 17} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i23 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2474, 19} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2487, 21} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb19:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2490, 19} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2475, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb21, $bb22;
$bb21:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2475, 26} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb22:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2490, 26} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2498, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i5, 1);
  call {:cexpr "i"} boogie_si_record_i64($i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2499, 17} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p6, $mul.ref(1, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2454, 7} true;
  assume {:verifier.code 0} true;
  $i5, $p6 := $i24, $p25;
  goto $bb1;
}
const PptDebugDumpResourceRequirementsList: ref;
axiom (PptDebugDumpResourceRequirementsList == $sub.ref(0, 75320));
procedure {:inline 1} PptDebugDumpResourceRequirementsList($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2513, 43} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2513, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2513, 43} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  call {:cexpr "listCount"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2516, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1)), $mul.ref(0, 72));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2518, 7} true;
  assume {:verifier.code 0} true;
  $p5, $i6 := $p4, 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2518, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2520, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i64($i6, $i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2520, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2522, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2523, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2526, 11} true;
  assume {:verifier.code 0} true;
  call PptDebugDumpResourceList($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2527, 59} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p9 := $add.ref($add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2528, 59} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2528, 59} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  $p12 := $add.ref($add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref($i11, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2527, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2529, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i6, 1);
  call {:cexpr "i"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2518, 7} true;
  assume {:verifier.code 0} true;
  $p5, $i6 := $p12, $i14;
  goto $bb1;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2534, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptLogError: ref;
axiom (PptLogError == $sub.ref(0, 76352));
procedure {:inline 1} PptLogError($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i64, $i5: i64, $i6: i64, $i7: i8, $i8: i8, $i9: i64, $i10: i64, $i11: i64)
{
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $p25: ref;
  var $p24: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i1;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $i35: i16;
  var $i30: i16;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $i39: i1;
  var $i40: i32;
  var $i41: i32;
  var $i42: i16;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i1;
  var $i48: i32;
  var $i49: i32;
  var $i50: i16;
  var $i51: i16;
  var $i43: i16;
  var $i52: i32;
  var $i53: i64;
  var $i54: i64;
  var $i55: i8;
  var $p56: ref;
  var $p57: ref;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i1;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $i73: i64;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2577, 24} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p12 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p13 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p12);
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p14, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:verifier.code 0} true;
  $M.5 := $store.i64($M.5, $p15, $i2);
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p14, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:verifier.code 0} true;
  $M.6 := $store.i64($M.6, $p16, $i3);
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p13);
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p17, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:verifier.code 0} true;
  $M.7 := $store.i64($M.7, $p18, $i4);
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p17, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:verifier.code 0} true;
  $M.8 := $store.i64($M.8, $p19, $i5);
  assume true;
  assume true;
  call {:cexpr "PptLogError:arg:SequenceNumber"} boogie_si_record_i64($i6);
  call {:cexpr "PptLogError:arg:MajorFunctionCode"} boogie_si_record_i8($i7);
  call {:cexpr "PptLogError:arg:RetryCount"} boogie_si_record_i8($i8);
  call {:cexpr "PptLogError:arg:UniqueErrorValue"} boogie_si_record_i64($i9);
  call {:cexpr "PptLogError:arg:FinalStatus"} boogie_si_record_i64($i10);
  call {:cexpr "PptLogError:arg:SpecificIOStatus"} boogie_si_record_i64($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2577, 24} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2577, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i32($p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2577, 46} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2577, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i22 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2579, 21} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2580, 5} true;
  assume {:verifier.code 0} true;
  $p24 := $p1;
  goto $bb3;
$bb2:
  assume !(($i22 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2581, 21} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p0);
  assume {:verifier.code 0} true;
  $p24 := $p0;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2584, 12} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2584, 30} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p26, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2584, 30} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.5, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2584, 38} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i64($i28, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2584, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2586, 5} true;
  assume {:verifier.code 0} true;
  $i30 := 16;
  goto $bb6;
$bb5:
  assume !(($i29 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2587, 14} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2587, 32} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p31, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2587, 32} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i64($M.6, $p32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2587, 41} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i33, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2587, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2592, 12} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2592, 30} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p36, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2592, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.7, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2592, 38} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i64($i38, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2592, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb10, $bb11;
$bb7:
  assume ($i34 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2589, 7} true;
  assume {:verifier.code 0} true;
  $i35 := 16;
  goto $bb9;
$bb8:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i35 := 0;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i30 := $i35;
  goto $bb6;
$bb10:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2594, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i16.i32($i30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2594, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i40, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2594, 11} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i32.i16($i41);
  call {:cexpr "DumpToAllocate"} boogie_si_record_i16($i42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2595, 5} true;
  assume {:verifier.code 0} true;
  $i43 := $i42;
  goto $bb12;
$bb11:
  assume !(($i39 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2596, 14} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2596, 32} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p44, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2596, 32} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.8, $p45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2596, 41} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i64($i46, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2596, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb13, $bb14;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2605, 40} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i16.i32($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2605, 40} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i32.i64($i52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2604, 68} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64(80, $i53);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2604, 24} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i64.i8($i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2603, 13} true;
  assume {:verifier.code 0} true;
  call $p56 := IoAllocateErrorLogEntry($p24, $i55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2606, 23} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2608, 10} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.ref($p57, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2608, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb16, $bb17;
$bb13:
  assume ($i47 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2598, 13} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i16.i32($i30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2598, 33} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i48, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2598, 13} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i16($i49);
  call {:cexpr "DumpToAllocate"} boogie_si_record_i16($i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2599, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $i50;
  goto $bb15;
$bb14:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  $i51 := $i30;
  goto $bb15;
$bb15:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i43 := $i51;
  goto $bb12;
$bb16:
  assume ($i58 == 1);
  assume {:verifier.code 0} true;
  goto $bb19;
$bb17:
  assume !(($i58 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2609, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2635, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2612, 20} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2612, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p59, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2613, 20} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2613, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p60, $i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2614, 20} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2614, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p61, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2615, 20} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2615, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p62, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2616, 20} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2616, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p63, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2617, 20} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2617, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p64, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2618, 20} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2618, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p65, $i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2619, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i16($i43, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2619, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i66 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2621, 31} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(72, 1));
  $p68 := $add.ref($add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(72, 1)), $mul.ref(0, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2621, 16} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p68);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2621, 41} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2621, 9} true;
  assume {:verifier.code 0} true;
  call $p71 := memcpy($p69, $p70, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2623, 11} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i16.i32($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2623, 11} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i32.i64($i72);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2623, 40} true;
  assume {:verifier.code 0} true;
  $i74 := $ugt.i64($i73, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2623, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb22:
  assume ($i74 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2625, 43} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(72, 1));
  $p76 := $add.ref($add.ref($add.ref($p57, $mul.ref(0, 80)), $mul.ref(72, 1)), $mul.ref(0, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2625, 18} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2625, 53} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2626, 18} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2625, 11} true;
  assume {:verifier.code 0} true;
  call $p80 := memcpy($p78, $p79, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2628, 7} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2630, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2632, 28} true;
  assume {:verifier.code 0} true;
  $p81 := $bitcast.ref.ref($p57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2632, 7} true;
  assume {:verifier.code 0} true;
  call IoWriteErrorLogEntry($p81);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2633, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
}
const IoAllocateErrorLogEntry: ref;
axiom (IoAllocateErrorLogEntry == $sub.ref(0, 77384));
procedure {:inline 1} IoAllocateErrorLogEntry($p0: ref, $i1: i8)
  returns ($r: ref);
const memcpy: ref;
axiom (memcpy == $sub.ref(0, 78416));
procedure {:inline 1} memcpy($p0: ref, $p1: ref, $i2: i32)
  returns ($r: ref);
const IoWriteErrorLogEntry: ref;
axiom (IoWriteErrorLogEntry == $sub.ref(0, 79448));
procedure {:inline 1} IoWriteErrorLogEntry($p0: ref);
const ExAllocatePoolWithTag: ref;
axiom (ExAllocatePoolWithTag == $sub.ref(0, 80480));
procedure {:inline 1} ExAllocatePoolWithTag($i0: i32, $i1: i64, $i2: i64)
  returns ($r: ref)
{
  var $p3: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9607, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ExAllocatePoolWithTag:arg:PoolType"} boogie_si_record_i32($i0);
  call {:cexpr "ExAllocatePoolWithTag:arg:NumberOfBytes"} boogie_si_record_i64($i1);
  call {:cexpr "ExAllocatePoolWithTag:arg:Tag"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9607, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := malloc($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9610, 5} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const memset: ref;
axiom (memset == $sub.ref(0, 81512));
procedure {:inline 1} memset($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref);
const memmove: ref;
axiom (memmove == $sub.ref(0, 82544));
procedure {:inline 1} memmove($p0: ref, $p1: ref, $i2: i32)
  returns ($r: ref);
const PptDispatchCreate: ref;
axiom (PptDispatchCreate == $sub.ref(0, 83576));
procedure {:inline 1} PptDispatchCreate($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i64;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i10: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3876, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3876, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3876, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3876, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3878, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3878, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3878, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:3878:37: warning: over-approximating bitwise operation and; */
  $i7 := $and.i64($i6, 4096);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3878, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3878, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3879, 18} true;
  assume {:verifier.code 0} true;
  call $i9 := PptFailRequest($p1, $sub.i64(0, 1073741738));
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3880, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3904, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3883, 16} true;
  assume {:verifier.code 0} true;
  call $i11 := PptAcquireRemoveLockOrFailIrp($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3884, 18} true;
  assume {:verifier.code 0} true;
  $i12 := $sge.i64($i11, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3884, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i12 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3887, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $i11;
  goto $bb3;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3892, 40} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3892, 7} true;
  assume {:verifier.code 0} true;
  call $i14 := InterlockedIncrement($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3896, 40} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3896, 52} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3896, 7} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p15, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3897, 12} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p18 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3897, 39} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3897, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p19, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3898, 18} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i64.i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3898, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $i20;
  call {:cexpr "myStatus"} boogie_si_record_i32($i20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3899, 12} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p22 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3899, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3900, 7} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3902, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i11;
  goto $bb3;
}
const PptDispatchClose: ref;
axiom (PptDispatchClose == $sub.ref(0, 84608));
procedure {:inline 1} PptDispatchClose($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3911, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3911, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3911, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3911, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3912, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3912, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3912, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:3912:37: warning: over-approximating bitwise operation and; */
  $i7 := $and.i64($i6, 4096);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3912, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3912, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3914, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p10 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3914, 41} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3914, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p11, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3915, 18} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3916, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p13 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3916, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3917, 9} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3919, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3964, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3922, 49} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3922, 61} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3922, 16} true;
  assume {:verifier.code 0} true;
  call $i16 := PptAcquireRemoveLock($p14, $p15);
  call {:cexpr "status"} boogie_si_record_i64($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3923, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $sge.i64($i16, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3923, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i17 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3925, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p19 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3925, 41} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3925, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p20, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3926, 18} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3927, 14} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p22 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3927, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3928, 9} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3930, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3935, 20} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3935, 20} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.0, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3935, 38} true;
  assume {:verifier.code 0} true;
  $i25 := $sgt.i64($i24, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3935, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3937, 48} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3937, 15} true;
  assume {:verifier.code 0} true;
  call $i27 := InterlockedDecrement($p26);
  call {:cexpr "tmp"} boogie_si_record_i64($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3939, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $slt.i64($i27, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3939, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i28 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3941, 44} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3941, 11} true;
  assume {:verifier.code 0} true;
  call $i30 := InterlockedIncrement($p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3943, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3949, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3956, 12} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p32 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3956, 39} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3956, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p33, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3957, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3958, 12} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p35 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3958, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p35, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3959, 7} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3960, 40} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3960, 52} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3960, 7} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p36, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3962, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const PptDispatchInternalDeviceControl: ref;
axiom (PptDispatchInternalDeviceControl == $sub.ref(0, 85640));
procedure {:inline 1} PptDispatchInternalDeviceControl($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i1;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $i15: i1;
  var $i16: i64;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i1;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i1;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i64;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i1;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i64;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $i72: i1;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i64;
  var $i77: i1;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i64;
  var $i82: i1;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i64;
  var $i87: i1;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i64;
  var $i92: i1;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i64;
  var $i97: i1;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $i102: i1;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $i106: i64;
  var $i107: i1;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i64;
  var $i108: i64;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $i123: i64;
  var $i124: i1;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $i130: i64;
  var $i125: i64;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i8;
  var $i145: i1;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $i150: i64;
  var $i151: i1;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $i155: i8;
  var $p156: ref;
  var $i157: i8;
  var $p158: ref;
  var $i159: i64;
  var $i160: i1;
  var $p161: ref;
  var $i162: i32;
  var $i163: i1;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $i174: i8;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p206: ref;
  var $p207: ref;
  var $i208: i64;
  var $i209: i64;
  var $i205: i64;
  var $i146: i64;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $i214: i64;
  var $i215: i1;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $i216: i64;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $i229: i64;
  var $i230: i1;
  var $p232: ref;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $i231: i64;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $i244: i64;
  var $i245: i1;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $i254: i32;
  var $p255: ref;
  var $p256: ref;
  var $i257: i64;
  var $p258: ref;
  var $p259: ref;
  var $i260: i8;
  var $i261: i64;
  var $p262: ref;
  var $p263: ref;
  var $i264: i64;
  var $p265: ref;
  var $p266: ref;
  var $i267: i64;
  var $p268: ref;
  var $p269: ref;
  var $i270: i32;
  var $p271: ref;
  var $i246: i64;
  var $i272: i1;
  var $p274: ref;
  var $p275: ref;
  var $p276: ref;
  var $i277: i64;
  var $i278: i1;
  var $p280: ref;
  var $p281: ref;
  var $p282: ref;
  var $i283: i64;
  var $i284: i1;
  var $p286: ref;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $p290: ref;
  var $p291: ref;
  var $p292: ref;
  var $p293: ref;
  var $p294: ref;
  var $i295: i64;
  var $i296: i1;
  var $p297: ref;
  var $i298: i64;
  var $i299: i64;
  var $i301: i64;
  var $i302: i1;
  var $p303: ref;
  var $i304: i64;
  var $i305: i64;
  var $i300: i64;
  var $i306: i1;
  var $p307: ref;
  var $p308: ref;
  var $i309: i1;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $p315: ref;
  var $p316: ref;
  var $p317: ref;
  var $p318: ref;
  var $p319: ref;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $p324: ref;
  var $p325: ref;
  var $p326: ref;
  var $p327: ref;
  var $p328: ref;
  var $i329: i8;
  var $p330: ref;
  var $p331: ref;
  var $p332: ref;
  var $p333: ref;
  var $p334: ref;
  var $p335: ref;
  var $p336: ref;
  var $p337: ref;
  var $p338: ref;
  var $i339: i64;
  var $i340: i64;
  var $i285: i64;
  var $i279: i64;
  var $p341: ref;
  var $p342: ref;
  var $p343: ref;
  var $i344: i64;
  var $i345: i1;
  var $p347: ref;
  var $p348: ref;
  var $p349: ref;
  var $p350: ref;
  var $p351: ref;
  var $i352: i64;
  var $i353: i1;
  var $p354: ref;
  var $p355: ref;
  var $p356: ref;
  var $p357: ref;
  var $p358: ref;
  var $i359: i8;
  var $i360: i1;
  var $p361: ref;
  var $i362: i64;
  var $i363: i64;
  var $p364: ref;
  var $i365: i64;
  var $i366: i1;
  var $i367: i8;
  var $i368: i64;
  var $i369: i8;
  var $i370: i64;
  var $i371: i8;
  var $i372: i1;
  var $i346: i64;
  var $p373: ref;
  var $p374: ref;
  var $p375: ref;
  var $i376: i64;
  var $i377: i1;
  var $p379: ref;
  var $p380: ref;
  var $p381: ref;
  var $p382: ref;
  var $p383: ref;
  var $i384: i8;
  var $i385: i64;
  var $i378: i64;
  var $p386: ref;
  var $p387: ref;
  var $p388: ref;
  var $i389: i64;
  var $i390: i1;
  var $p392: ref;
  var $p393: ref;
  var $p394: ref;
  var $p395: ref;
  var $p396: ref;
  var $i397: i8;
  var $i398: i64;
  var $i391: i64;
  var $p399: ref;
  var $i400: i64;
  var $p401: ref;
  var $p402: ref;
  var $p403: ref;
  var $p404: ref;
  var $p405: ref;
  var $i406: i64;
  var $i407: i1;
  var $p409: ref;
  var $i410: i8;
  var $i411: i1;
  var $p413: ref;
  var $p414: ref;
  var $p415: ref;
  var $p416: ref;
  var $i417: i64;
  var $i418: i1;
  var $p419: ref;
  var $i420: i32;
  var $i421: i1;
  var $p422: ref;
  var $p423: ref;
  var $p424: ref;
  var $p425: ref;
  var $p426: ref;
  var $p427: ref;
  var $p428: ref;
  var $i429: i8;
  var $i430: i32;
  var $i431: i32;
  var $i432: i8;
  var $p433: ref;
  var $p434: ref;
  var $p435: ref;
  var $p436: ref;
  var $p437: ref;
  var $p438: ref;
  var $p439: ref;
  var $p440: ref;
  var $p441: ref;
  var $p442: ref;
  var $p443: ref;
  var $p444: ref;
  var $p445: ref;
  var $p446: ref;
  var $p447: ref;
  var $p448: ref;
  var $p449: ref;
  var $p450: ref;
  var $p451: ref;
  var $p452: ref;
  var $p453: ref;
  var $p454: ref;
  var $p455: ref;
  var $p456: ref;
  var $p457: ref;
  var $p458: ref;
  var $p459: ref;
  var $p460: ref;
  var $p461: ref;
  var $p462: ref;
  var $i412: i64;
  var $i408: i64;
  var $p463: ref;
  var $p464: ref;
  var $p465: ref;
  var $i466: i64;
  var $i467: i1;
  var $p469: ref;
  var $p470: ref;
  var $p471: ref;
  var $p472: ref;
  var $i473: i64;
  var $i468: i64;
  var $i210: i64;
  var $i273: i64;
  var $i474: i1;
  var $p475: ref;
  var $p476: ref;
  var $p477: ref;
  var $i478: i32;
  var $p479: ref;
  var $p480: ref;
  var $i17: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3116, 31} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3116, 31} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3116, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3116, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3118, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3118, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3118, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.ref($p10, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3118, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3120, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3122, 20} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3122, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i64($M.0, $p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3122, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:3122:37: warning: over-approximating bitwise operation and; */
  $i14 := $and.i64($i13, 4096);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3122, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3122, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i15 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3123, 18} true;
  assume {:verifier.code 0} true;
  call $i16 := PptFailRequest($p1, $sub.i64(0, 1073741738));
  call {:cexpr "tmp"} boogie_si_record_i64($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3124, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $i16;
  goto $bb6;
$bb5:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3749, 1} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3127, 16} true;
  assume {:verifier.code 0} true;
  call $i18 := PptAcquireRemoveLockOrFailIrp($p0, $p1);
  call {:cexpr "Status"} boogie_si_record_i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3128, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $sge.i64($i18, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3128, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i19 == 1);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3131, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $i18;
  goto $bb6;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3134, 18} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3134, 23} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3134, 31} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p21, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p23 := $add.ref($add.ref($add.ref($p21, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3135, 18} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3135, 18} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3136, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p27 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3136, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p27, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3137, 16} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3137, 27} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3137, 43} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p29, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3137, 43} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i64($M.0, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3137, 57} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i64($i31, 1441992);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3137, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i32 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3139, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i32 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3141, 18} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3141, 29} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3141, 45} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p34, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3141, 45} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i64($M.0, $p35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3141, 59} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i64($i36, 1441996);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3141, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb14, $bb15;
$bb13:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3205, 50} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3205, 61} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3206, 48} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p104, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3206, 48} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i64($M.0, $p105);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3206, 66} true;
  assume {:verifier.code 0} true;
  $i107 := $ult.i64($i106, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3205, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb60, $bb61;
$bb14:
  assume ($i37 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3143, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i37 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3145, 20} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3145, 31} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3145, 47} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p39, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3145, 47} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i64($M.0, $p40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3145, 61} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i64($i41, 1441952);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3145, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb17, $bb18;
$bb16:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3239, 50} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3239, 61} true;
  assume {:verifier.code 0} true;
  $p121 := $bitcast.ref.ref($p120);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3240, 48} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($add.ref($p121, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3240, 48} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i64($M.0, $p122);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3240, 66} true;
  assume {:verifier.code 0} true;
  $i124 := $ult.i64($i123, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3239, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb63, $bb64;
$bb17:
  assume ($i42 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3147, 11} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i42 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3149, 22} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3149, 33} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3149, 49} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p44, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3149, 49} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3149, 63} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i64($i46, 1441836);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3149, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb20, $bb21;
$bb19:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3273, 51} true;
  assume {:verifier.code 0} true;
  $p137 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3273, 39} true;
  assume {:verifier.code 0} true;
  call PptFreePort($p137);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3274, 44} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p139 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3274, 71} true;
  assume {:verifier.code 0} true;
  $p140 := $bitcast.ref.ref($p139);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3274, 78} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p140, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3276, 48} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3278, 55} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3278, 67} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3277, 39} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p141, $p142);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3279, 39} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3281, 39} true;
  assume {:verifier.code 0} true;
  $i17 := 0;
  goto $bb6;
$bb20:
  assume ($i47 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3151, 13} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i47 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3153, 24} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3153, 35} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3153, 51} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p49, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3153, 51} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i64($M.0, $p50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3153, 65} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i64($i51, 1441840);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3153, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb23, $bb24;
$bb22:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3284, 39} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3286, 48} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(68, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3286, 48} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i8($M.0, $p143);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3286, 43} true;
  assume {:verifier.code 0} true;
  $i145 := $ne.i8($i144, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3286, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb66, $bb67;
$bb23:
  assume ($i52 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3155, 15} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i52 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3157, 26} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3157, 37} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3157, 53} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p54, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3157, 53} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i64($M.0, $p55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3157, 67} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i64($i56, 1441852);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3157, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb26, $bb27;
$bb25:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3352, 50} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3352, 61} true;
  assume {:verifier.code 0} true;
  $p212 := $bitcast.ref.ref($p211);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3353, 48} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($add.ref($p212, $mul.ref(0, 32)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3353, 48} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i64($M.0, $p213);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3353, 67} true;
  assume {:verifier.code 0} true;
  $i215 := $ult.i64($i214, 64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3352, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb79, $bb80;
$bb26:
  assume ($i57 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3159, 17} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i57 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3161, 28} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3161, 39} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3161, 55} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p59, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3161, 55} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i64($M.0, $p60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3161, 69} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i64($i61, 1441876);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3161, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb29, $bb30;
$bb28:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3369, 39} true;
  assume {:verifier.code 0} true;
  $i210 := 0;
  goto $bb78;
$bb29:
  assume ($i62 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3163, 19} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i62 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3165, 30} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3165, 41} true;
  assume {:verifier.code 0} true;
  $p64 := $bitcast.ref.ref($p63);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3165, 57} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p64, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3165, 57} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i64($M.0, $p65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3165, 71} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i64($i66, 1441860);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3165, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb32, $bb33;
$bb31:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3372, 50} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3372, 61} true;
  assume {:verifier.code 0} true;
  $p227 := $bitcast.ref.ref($p226);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3373, 48} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($add.ref($p227, $mul.ref(0, 32)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3373, 48} true;
  assume {:verifier.code 0} true;
  $i229 := $load.i64($M.0, $p228);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3373, 67} true;
  assume {:verifier.code 0} true;
  $i230 := $ult.i64($i229, 152);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3372, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb82, $bb83;
$bb32:
  assume ($i67 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3167, 21} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i67 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3169, 32} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3169, 43} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p68);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3169, 59} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p69, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3169, 59} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i64($M.0, $p70);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3169, 73} true;
  assume {:verifier.code 0} true;
  $i72 := $eq.i64($i71, 1441844);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3169, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb35, $bb36;
$bb34:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3388, 50} true;
  assume {:verifier.code 0} true;
  $p241 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3388, 61} true;
  assume {:verifier.code 0} true;
  $p242 := $bitcast.ref.ref($p241);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3389, 48} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($add.ref($p242, $mul.ref(0, 32)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3389, 48} true;
  assume {:verifier.code 0} true;
  $i244 := $load.i64($M.0, $p243);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3389, 67} true;
  assume {:verifier.code 0} true;
  $i245 := $ult.i64($i244, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3388, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb85, $bb86;
$bb35:
  assume ($i72 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3171, 23} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i72 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3173, 34} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3173, 45} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3173, 61} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p74, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3173, 61} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i64($M.0, $p75);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3173, 75} true;
  assume {:verifier.code 0} true;
  $i77 := $eq.i64($i76, 1441848);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3173, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb38, $bb39;
$bb37:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3417, 47} true;
  assume {:verifier.code 0} true;
  $i272 := $eq.i64(0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3417, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i272} true;
  goto $bb88, $bb89;
$bb38:
  assume ($i77 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3175, 25} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i77 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3177, 36} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3177, 47} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p78);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3177, 63} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($add.ref($p79, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3177, 63} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i64($M.0, $p80);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3177, 77} true;
  assume {:verifier.code 0} true;
  $i82 := $eq.i64($i81, 1441868);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3177, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb41, $bb42;
$bb40:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3527, 50} true;
  assume {:verifier.code 0} true;
  $p341 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3527, 61} true;
  assume {:verifier.code 0} true;
  $p342 := $bitcast.ref.ref($p341);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3528, 48} true;
  assume {:verifier.code 0} true;
  $p343 := $add.ref($add.ref($p342, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3528, 48} true;
  assume {:verifier.code 0} true;
  $i344 := $load.i64($M.0, $p343);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3528, 66} true;
  assume {:verifier.code 0} true;
  $i345 := $ult.i64($i344, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3527, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i345} true;
  goto $bb110, $bb111;
$bb41:
  assume ($i82 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3179, 27} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i82 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3181, 38} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3181, 49} true;
  assume {:verifier.code 0} true;
  $p84 := $bitcast.ref.ref($p83);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3181, 65} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p84, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3181, 65} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i64($M.0, $p85);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3181, 79} true;
  assume {:verifier.code 0} true;
  $i87 := $eq.i64($i86, 1441872);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3181, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb44, $bb45;
$bb43:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3590, 50} true;
  assume {:verifier.code 0} true;
  $p373 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3590, 61} true;
  assume {:verifier.code 0} true;
  $p374 := $bitcast.ref.ref($p373);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3591, 48} true;
  assume {:verifier.code 0} true;
  $p375 := $add.ref($add.ref($p374, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3591, 48} true;
  assume {:verifier.code 0} true;
  $i376 := $load.i64($M.0, $p375);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3591, 66} true;
  assume {:verifier.code 0} true;
  $i377 := $ult.i64($i376, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3590, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i377} true;
  goto $bb125, $bb126;
$bb44:
  assume ($i87 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3183, 29} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i87 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3185, 40} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3185, 51} true;
  assume {:verifier.code 0} true;
  $p89 := $bitcast.ref.ref($p88);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3186, 38} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p89, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3186, 38} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i64($M.0, $p90);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3186, 52} true;
  assume {:verifier.code 0} true;
  $i92 := $eq.i64($i91, 1441880);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3185, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb47, $bb48;
$bb46:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3606, 50} true;
  assume {:verifier.code 0} true;
  $p386 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3606, 61} true;
  assume {:verifier.code 0} true;
  $p387 := $bitcast.ref.ref($p386);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3607, 48} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($add.ref($p387, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3607, 48} true;
  assume {:verifier.code 0} true;
  $i389 := $load.i64($M.0, $p388);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3607, 66} true;
  assume {:verifier.code 0} true;
  $i390 := $ult.i64($i389, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3606, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i390} true;
  goto $bb128, $bb129;
$bb47:
  assume ($i92 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3188, 31} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i92 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3190, 42} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3190, 53} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3191, 40} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p94, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3191, 40} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i64($M.0, $p95);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3191, 54} true;
  assume {:verifier.code 0} true;
  $i97 := $eq.i64($i96, 1441884);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3190, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb50, $bb51;
$bb49:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3624, 63} true;
  assume {:verifier.code 0} true;
  $p399 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3624, 45} true;
  assume {:verifier.code 0} true;
  call $i400 := PptInitiate1284_3($p399);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3622, 52} true;
  assume {:verifier.code 0} true;
  $p401 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p402 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3623, 68} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p402, $i400);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3627, 39} true;
  assume {:verifier.code 0} true;
  $i210 := 0;
  goto $bb78;
$bb50:
  assume ($i97 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3193, 33} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i97 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3195, 44} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3195, 55} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p98);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3196, 42} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p99, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3196, 42} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i64($M.0, $p100);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3196, 56} true;
  assume {:verifier.code 0} true;
  $i102 := $eq.i64($i101, 1441888);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3195, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb53, $bb54;
$bb52:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3630, 50} true;
  assume {:verifier.code 0} true;
  $p403 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3630, 61} true;
  assume {:verifier.code 0} true;
  $p404 := $bitcast.ref.ref($p403);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3631, 48} true;
  assume {:verifier.code 0} true;
  $p405 := $add.ref($add.ref($p404, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3631, 48} true;
  assume {:verifier.code 0} true;
  $i406 := $load.i64($M.0, $p405);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3631, 66} true;
  assume {:verifier.code 0} true;
  $i407 := $ult.i64($i406, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3630, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i407} true;
  goto $bb131, $bb132;
$bb53:
  assume ($i102 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3198, 35} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i102 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3201, 37} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3699, 50} true;
  assume {:verifier.code 0} true;
  $p463 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3699, 61} true;
  assume {:verifier.code 0} true;
  $p464 := $bitcast.ref.ref($p463);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3700, 48} true;
  assume {:verifier.code 0} true;
  $p465 := $add.ref($add.ref($p464, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3700, 48} true;
  assume {:verifier.code 0} true;
  $i466 := $load.i64($M.0, $p465);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3700, 66} true;
  assume {:verifier.code 0} true;
  $i467 := $ult.i64($i466, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3699, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i467} true;
  goto $bb143, $bb144;
$bb56:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3717, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $sub.i64(0, 1073741811);
  goto $bb78;
$bb57:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3202, 41} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb58, $bb59;
$bb58:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3202, 44} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb59:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3718, 44} true;
  assume {:verifier.code 0} true;
  $i210 := $u0;
  goto $bb78;
$bb60:
  assume ($i107 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3212, 39} true;
  assume {:verifier.code 0} true;
  $i108 := $sub.i64(0, 1073741789);
  goto $bb62;
$bb61:
  assume !(($i107 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3215, 52} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3215, 66} true;
  assume {:verifier.code 0} true;
  $p110 := $bitcast.ref.ref($p109);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3215, 66} true;
  assume {:verifier.code 0} true;
  $p111 := $load.ref($M.0, $p110);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3215, 47} true;
  assume {:verifier.code 0} true;
  $p112 := $bitcast.ref.ref($p111);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3218, 43} true;
  assume {:verifier.code 0} true;
  call PptDumpRemovalRelationsList($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3220, 43} true;
  assume {:verifier.code 0} true;
  call $i113 := PptAddPptRemovalRelation($p8, $p112);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3222, 43} true;
  assume {:verifier.code 0} true;
  call PptDumpRemovalRelationsList($p8);
  assume {:verifier.code 0} true;
  $i108 := 0;
  goto $bb62;
$bb62:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3229, 46} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p115 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3229, 73} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p115);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3229, 80} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p116, $i108);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3231, 52} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i64.i32($i108);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3231, 50} true;
  assume {:verifier.code 0} true;
  $M.1 := $i117;
  call {:cexpr "myStatus"} boogie_si_record_i32($i117);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3233, 57} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3233, 69} true;
  assume {:verifier.code 0} true;
  $p119 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3232, 41} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p118, $p119);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3234, 41} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3236, 39} true;
  assume {:verifier.code 0} true;
  $i17 := $i108;
  goto $bb6;
$bb63:
  assume ($i124 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3246, 39} true;
  assume {:verifier.code 0} true;
  $i125 := $sub.i64(0, 1073741789);
  goto $bb65;
$bb64:
  assume !(($i124 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3249, 52} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3249, 66} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p126);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3249, 66} true;
  assume {:verifier.code 0} true;
  $p128 := $load.ref($M.0, $p127);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3249, 47} true;
  assume {:verifier.code 0} true;
  $p129 := $bitcast.ref.ref($p128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3252, 43} true;
  assume {:verifier.code 0} true;
  call PptDumpRemovalRelationsList($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3254, 43} true;
  assume {:verifier.code 0} true;
  call $i130 := PptRemovePptRemovalRelation($p8, $p129);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3256, 43} true;
  assume {:verifier.code 0} true;
  call PptDumpRemovalRelationsList($p8);
  assume {:verifier.code 0} true;
  $i125 := 0;
  goto $bb65;
$bb65:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3263, 46} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p132 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3263, 73} true;
  assume {:verifier.code 0} true;
  $p133 := $bitcast.ref.ref($p132);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3263, 80} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p133, $i125);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3265, 52} true;
  assume {:verifier.code 0} true;
  $i134 := $trunc.i64.i32($i125);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3265, 50} true;
  assume {:verifier.code 0} true;
  $M.1 := $i134;
  call {:cexpr "myStatus"} boogie_si_record_i32($i134);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3267, 57} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3267, 69} true;
  assume {:verifier.code 0} true;
  $p136 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3266, 41} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p135, $p136);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3268, 41} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3270, 39} true;
  assume {:verifier.code 0} true;
  $i17 := $i125;
  goto $bb6;
$bb66:
  assume ($i145 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3288, 39} true;
  assume {:verifier.code 0} true;
  $i146 := $sub.i64(0, 1073741536);
  goto $bb68;
$bb67:
  assume !(($i145 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3290, 57} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3289, 53} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3289, 59} true;
  assume {:verifier.code 0} true;
  $M.9 := $store.ref($M.9, $p148, $p147);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3291, 56} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3291, 56} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i64($M.0, $p149);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3291, 45} true;
  assume {:verifier.code 0} true;
  $i151 := $ne.i64($i150, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3291, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i151} true;
  goto $bb69, $bb70;
$bb68:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3349, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i146;
  goto $bb78;
$bb69:
  assume ($i151 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3294, 60} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3294, 60} true;
  assume {:verifier.code 0} true;
  $p153 := $load.ref($M.0, $p152);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3296, 49} true;
  assume {:verifier.code 0} true;
  $p154 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3293, 45} true;
  assume {:verifier.code 0} true;
  call $i155 := KeSynchronizeExecution($p153, PptSynchronizedIncrement, $p154);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3298, 41} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i151 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3301, 49} true;
  assume {:verifier.code 0} true;
  $p156 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3300, 45} true;
  assume {:verifier.code 0} true;
  call $i157 := PptSynchronizedIncrement($p156);
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3304, 57} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3304, 57} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i64($M.10, $p158);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3304, 45} true;
  assume {:verifier.code 0} true;
  $i160 := $ne.i64($i159, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3304, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i160} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i160 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3306, 45} true;
  assume {:verifier.code 0} true;
  call $p161 := PptSetCancelRoutine($p1, PptCancelRoutine);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3309, 47} true;
  assume {:verifier.code 0} true;
  $i162 := $M.11;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3309, 54} true;
  assume {:verifier.code 0} true;
  $i163 := $eq.i32($i162, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3309, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb74, $bb75;
$bb73:
  assume !(($i160 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3340, 54} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(840, 1));
  $p207 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(840, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3341, 62} true;
  assume {:verifier.code 0} true;
  $i208 := $load.i64($M.0, $p207);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3341, 62} true;
  assume {:verifier.code 0} true;
  $i209 := $add.i64($i208, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3341, 62} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p207, $i209);
  assume {:verifier.code 0} true;
  $i205 := 0;
  goto $bb77;
$bb74:
  assume ($i163 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3310, 52} true;
  assume {:verifier.code 0} true;
  $M.11 := 1;
  call {:cexpr "pended"} boogie_si_record_i32(1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3311, 43} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i163 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3312, 47} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3318, 58} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3318, 63} true;
  assume {:verifier.code 0} true;
  $p165 := $bitcast.ref.ref($p164);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3319, 58} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($add.ref($p165, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p167 := $add.ref($add.ref($add.ref($p165, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3321, 58} true;
  assume {:verifier.code 0} true;
  $p168 := $bitcast.ref.ref($p167);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3321, 58} true;
  assume {:verifier.code 0} true;
  $p169 := $load.ref($M.0, $p168);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3322, 53} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($add.ref($p169, $mul.ref(0, 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3322, 53} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i8($M.0, $p170);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3318, 47} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i8.i32($i171);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3322, 61} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:3322:61: warning: over-approximating bitwise operation or; */
  $i173 := $or.i32($i172, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3318, 47} true;
  assume {:verifier.code 0} true;
  $i174 := $trunc.i32.i8($i173);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3314, 49} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3314, 54} true;
  assume {:verifier.code 0} true;
  $p176 := $bitcast.ref.ref($p175);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3314, 62} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($add.ref($p176, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p178 := $add.ref($add.ref($add.ref($p176, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3316, 49} true;
  assume {:verifier.code 0} true;
  $p179 := $bitcast.ref.ref($p178);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3316, 49} true;
  assume {:verifier.code 0} true;
  $p180 := $load.ref($M.0, $p179);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3317, 49} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($add.ref($p180, $mul.ref(0, 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3317, 57} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p181, $i174);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3324, 70} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(72, 1));
  $p183 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(72, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3325, 69} true;
  assume {:verifier.code 0} true;
  $p184 := $load.ref($M.0, $p183);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3326, 48} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3326, 53} true;
  assume {:verifier.code 0} true;
  $p186 := $bitcast.ref.ref($p185);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3326, 61} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($add.ref($p186, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p188 := $add.ref($add.ref($add.ref($p186, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p189 := $add.ref($add.ref($add.ref($add.ref($p186, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3327, 64} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p189, $p182);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3328, 48} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3328, 53} true;
  assume {:verifier.code 0} true;
  $p191 := $bitcast.ref.ref($p190);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3328, 61} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($add.ref($p191, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p193 := $add.ref($add.ref($add.ref($p191, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p194 := $add.ref($add.ref($add.ref($add.ref($p191, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3329, 64} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p194, $p184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3331, 53} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3331, 58} true;
  assume {:verifier.code 0} true;
  $p196 := $bitcast.ref.ref($p195);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3332, 53} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($add.ref($p196, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p198 := $add.ref($add.ref($add.ref($p196, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3330, 54} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($add.ref($p184, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3330, 60} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p199, $p198);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3335, 53} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3335, 58} true;
  assume {:verifier.code 0} true;
  $p201 := $bitcast.ref.ref($p200);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3336, 53} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($add.ref($p201, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p203 := $add.ref($add.ref($add.ref($p201, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p204 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(72, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3334, 63} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p204, $p203);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3339, 41} true;
  assume {:verifier.code 0} true;
  $i205 := 259;
  goto $bb77;
$bb77:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i146 := $i205;
  goto $bb68;
$bb78:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb146;
$bb79:
  assume ($i215 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3357, 39} true;
  assume {:verifier.code 0} true;
  $i216 := $sub.i64(0, 1073741789);
  goto $bb81;
$bb80:
  assume !(($i215 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3358, 46} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p218 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3358, 67} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p218, 64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3361, 50} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3361, 64} true;
  assume {:verifier.code 0} true;
  $p220 := $bitcast.ref.ref($p219);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3361, 64} true;
  assume {:verifier.code 0} true;
  $p221 := $load.ref($M.0, $p220);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3361, 45} true;
  assume {:verifier.code 0} true;
  $p222 := $bitcast.ref.ref($p221);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3362, 64} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(96, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3362, 64} true;
  assume {:verifier.code 0} true;
  $p224 := $bitcast.ref.ref($p222);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3362, 64} true;
  assume {:verifier.code 0} true;
  $p225 := $bitcast.ref.ref($p223);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3362, 64} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p224, $p225, 64, false);
  assume {:verifier.code 0} true;
  $i216 := 0;
  goto $bb81;
$bb81:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3365, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i216;
  goto $bb78;
$bb82:
  assume ($i230 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3377, 39} true;
  assume {:verifier.code 0} true;
  $i231 := $sub.i64(0, 1073741789);
  goto $bb84;
$bb83:
  assume !(($i230 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3378, 46} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p233 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3378, 67} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p233, 152);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3381, 50} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3381, 64} true;
  assume {:verifier.code 0} true;
  $p235 := $bitcast.ref.ref($p234);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3381, 64} true;
  assume {:verifier.code 0} true;
  $p236 := $load.ref($M.0, $p235);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3381, 45} true;
  assume {:verifier.code 0} true;
  $p237 := $bitcast.ref.ref($p236);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3382, 63} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(160, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3382, 63} true;
  assume {:verifier.code 0} true;
  $p239 := $bitcast.ref.ref($p237);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3382, 63} true;
  assume {:verifier.code 0} true;
  $p240 := $bitcast.ref.ref($p238);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3382, 63} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p239, $p240, 152, false);
  assume {:verifier.code 0} true;
  $i231 := 0;
  goto $bb84;
$bb84:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3385, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i231;
  goto $bb78;
$bb85:
  assume ($i245 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3393, 39} true;
  assume {:verifier.code 0} true;
  $i246 := $sub.i64(0, 1073741789);
  goto $bb87;
$bb86:
  assume !(($i245 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3394, 46} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p248 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3394, 67} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p248, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3397, 50} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3397, 64} true;
  assume {:verifier.code 0} true;
  $p250 := $bitcast.ref.ref($p249);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3397, 64} true;
  assume {:verifier.code 0} true;
  $p251 := $load.ref($M.0, $p250);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3397, 45} true;
  assume {:verifier.code 0} true;
  $p252 := $bitcast.ref.ref($p251);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3399, 56} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(328, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3399, 56} true;
  assume {:verifier.code 0} true;
  $i254 := $load.i32($M.0, $p253);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3398, 55} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($add.ref($p252, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3398, 69} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p255, $i254);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3401, 56} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(336, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3401, 56} true;
  assume {:verifier.code 0} true;
  $i257 := $load.i64($M.0, $p256);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3400, 55} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($add.ref($p252, $mul.ref(0, 48)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3400, 65} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p258, $i257);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3403, 56} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(345, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3403, 56} true;
  assume {:verifier.code 0} true;
  $i260 := $load.i8($M.0, $p259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3403, 45} true;
  assume {:verifier.code 0} true;
  $i261 := $zext.i8.i64($i260);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3402, 55} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($add.ref($p252, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3402, 70} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p262, $i261);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3405, 56} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(352, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3405, 56} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i64($M.0, $p263);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3404, 55} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($add.ref($p252, $mul.ref(0, 48)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3404, 71} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p265, $i264);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3407, 56} true;
  assume {:verifier.code 0} true;
  $p266 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(360, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3407, 56} true;
  assume {:verifier.code 0} true;
  $i267 := $load.i64($M.0, $p266);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3406, 55} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($add.ref($p252, $mul.ref(0, 48)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3406, 73} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p268, $i267);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3409, 56} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(368, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3409, 56} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i32($M.0, $p269);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3408, 55} true;
  assume {:verifier.code 0} true;
  $p271 := $add.ref($add.ref($p252, $mul.ref(0, 48)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3408, 69} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p271, $i270);
  assume {:verifier.code 0} true;
  $i246 := 0;
  goto $bb87;
$bb87:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3412, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i246;
  goto $bb78;
$bb88:
  assume ($i272 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3421, 41} true;
  assume {:verifier.code 0} true;
  $i273 := $sub.i64(0, 1073741823);
  goto $bb90;
$bb89:
  assume !(($i272 == 1));
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3738, 16} true;
  assume {:verifier.code 0} true;
  $i474 := $ne.i64($i273, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3738, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i474} true;
  goto $bb162, $bb163;
$bb91:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3425, 50} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3425, 61} true;
  assume {:verifier.code 0} true;
  $p275 := $bitcast.ref.ref($p274);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3426, 48} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($add.ref($p275, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3426, 48} true;
  assume {:verifier.code 0} true;
  $i277 := $load.i64($M.0, $p276);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3426, 66} true;
  assume {:verifier.code 0} true;
  $i278 := $ult.i64($i277, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3425, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i278} true;
  goto $bb92, $bb93;
$bb92:
  assume ($i278 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3430, 39} true;
  assume {:verifier.code 0} true;
  $i279 := $sub.i64(0, 1073741789);
  goto $bb94;
$bb93:
  assume !(($i278 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3431, 52} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($add.ref($p25, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3431, 63} true;
  assume {:verifier.code 0} true;
  $p281 := $bitcast.ref.ref($p280);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3432, 50} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($add.ref($p281, $mul.ref(0, 32)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3432, 50} true;
  assume {:verifier.code 0} true;
  $i283 := $load.i64($M.0, $p282);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3432, 69} true;
  assume {:verifier.code 0} true;
  $i284 := $ult.i64($i283, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3431, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i284} true;
  goto $bb95, $bb96;
$bb94:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3524, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i279;
  goto $bb78;
$bb95:
  assume ($i284 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3436, 41} true;
  assume {:verifier.code 0} true;
  $i285 := $sub.i64(0, 1073741789);
  goto $bb97;
$bb96:
  assume !(($i284 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3439, 54} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3439, 68} true;
  assume {:verifier.code 0} true;
  $p287 := $bitcast.ref.ref($p286);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3439, 68} true;
  assume {:verifier.code 0} true;
  $p288 := $load.ref($M.0, $p287);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3439, 49} true;
  assume {:verifier.code 0} true;
  $p289 := $bitcast.ref.ref($p288);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3441, 54} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3441, 68} true;
  assume {:verifier.code 0} true;
  $p291 := $bitcast.ref.ref($p290);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3441, 68} true;
  assume {:verifier.code 0} true;
  $p292 := $load.ref($M.0, $p291);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3441, 49} true;
  assume {:verifier.code 0} true;
  $p293 := $bitcast.ref.ref($p292);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3442, 45} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3445, 58} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3445, 58} true;
  assume {:verifier.code 0} true;
  $i295 := $load.i64($M.0, $p294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3445, 47} true;
  assume {:verifier.code 0} true;
  $i296 := $ne.i64($i295, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3445, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i296} true;
  goto $bb98, $bb99;
$bb97:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i279 := $i285;
  goto $bb94;
$bb98:
  assume ($i296 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3447, 58} true;
  assume {:verifier.code 0} true;
  $p297 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3447, 76} true;
  assume {:verifier.code 0} true;
  $i298 := $load.i64($M.0, $p297);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3447, 76} true;
  assume {:verifier.code 0} true;
  $i299 := $add.i64($i298, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3447, 76} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p297, $i299);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3453, 43} true;
  assume {:verifier.code 0} true;
  $i300 := 0;
  goto $bb100;
$bb99:
  assume !(($i296 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3457, 56} true;
  assume {:verifier.code 0} true;
  call $i301 := PptConnectInterrupt($p8);
  call {:cexpr "Status"} boogie_si_record_i64($i301);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3460, 56} true;
  assume {:verifier.code 0} true;
  $i302 := $sge.i64($i301, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3460, 49} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i302} true;
  goto $bb101, $bb102;
$bb100:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3472, 54} true;
  assume {:verifier.code 0} true;
  $i306 := $sge.i64($i300, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3472, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i306} true;
  goto $bb104, $bb105;
$bb101:
  assume ($i302 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3462, 49} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3464, 60} true;
  assume {:verifier.code 0} true;
  $p303 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3464, 78} true;
  assume {:verifier.code 0} true;
  $i304 := $load.i64($M.0, $p303);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3464, 78} true;
  assume {:verifier.code 0} true;
  $i305 := $add.i64($i304, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3464, 78} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p303, $i305);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3469, 45} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume !(($i302 == 1));
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:verifier.code 0} true;
  $i300 := $i301;
  goto $bb100;
$bb104:
  assume ($i306 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3474, 57} true;
  assume {:verifier.code 0} true;
  call $p307 := ExAllocatePoolWithTag(0, 48, 1349673296);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3477, 62} true;
  assume {:verifier.code 0} true;
  $p308 := $bitcast.ref.ref($p307);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3479, 49} true;
  assume {:verifier.code 0} true;
  $i309 := $ne.ref($p308, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3479, 49} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i309} true;
  goto $bb106, $bb107;
$bb105:
  assume !(($i306 == 1));
  assume {:verifier.code 0} true;
  $i340 := $i300;
  goto $bb109;
$bb106:
  assume ($i309 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3483, 59} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($add.ref($p289, $mul.ref(0, 32)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3483, 59} true;
  assume {:verifier.code 0} true;
  $p311 := $load.ref($M.0, $p310);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3481, 63} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($add.ref($p308, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3481, 78} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p312, $p311);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3486, 59} true;
  assume {:verifier.code 0} true;
  $p313 := $add.ref($add.ref($p289, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3486, 59} true;
  assume {:verifier.code 0} true;
  $p314 := $load.ref($M.0, $p313);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3484, 63} true;
  assume {:verifier.code 0} true;
  $p315 := $add.ref($add.ref($p308, $mul.ref(0, 48)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3484, 78} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p315, $p314);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3490, 59} true;
  assume {:verifier.code 0} true;
  $p316 := $add.ref($add.ref($p289, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3490, 59} true;
  assume {:verifier.code 0} true;
  $p317 := $load.ref($M.0, $p316);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3488, 55} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($add.ref($p308, $mul.ref(0, 48)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3488, 80} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p318, $p317);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3493, 59} true;
  assume {:verifier.code 0} true;
  $p319 := $add.ref($add.ref($p289, $mul.ref(0, 32)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3493, 59} true;
  assume {:verifier.code 0} true;
  $p320 := $load.ref($M.0, $p319);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3491, 63} true;
  assume {:verifier.code 0} true;
  $p321 := $add.ref($add.ref($p308, $mul.ref(0, 48)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3491, 76} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p321, $p320);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3495, 65} true;
  assume {:verifier.code 0} true;
  $p322 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(400, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3494, 61} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($add.ref($p4, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3494, 66} true;
  assume {:verifier.code 0} true;
  $M.12 := $store.ref($M.12, $p323, $p322);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3497, 68} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($add.ref($p308, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3496, 61} true;
  assume {:verifier.code 0} true;
  $p325 := $add.ref($add.ref($p4, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3496, 70} true;
  assume {:verifier.code 0} true;
  $M.13 := $store.ref($M.13, $p325, $p307);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3499, 64} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3499, 64} true;
  assume {:verifier.code 0} true;
  $p327 := $load.ref($M.0, $p326);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3501, 53} true;
  assume {:verifier.code 0} true;
  $p328 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3498, 49} true;
  assume {:verifier.code 0} true;
  call $i329 := KeSynchronizeExecution($p327, PptSynchronizedQueue, $p328);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3503, 64} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3503, 64} true;
  assume {:verifier.code 0} true;
  $p331 := $load.ref($M.0, $p330);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3502, 64} true;
  assume {:verifier.code 0} true;
  $p332 := $add.ref($add.ref($p293, $mul.ref(0, 32)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3502, 80} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p332, $p331);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3505, 55} true;
  assume {:verifier.code 0} true;
  $p333 := $add.ref($add.ref($p293, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3505, 87} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p333, PptTryAllocatePortAtInterruptLevel);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3508, 55} true;
  assume {:verifier.code 0} true;
  $p334 := $add.ref($add.ref($p293, $mul.ref(0, 32)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3508, 82} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p334, PptFreePortFromInterruptLevel);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3511, 53} true;
  assume {:verifier.code 0} true;
  $p335 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3510, 64} true;
  assume {:verifier.code 0} true;
  $p336 := $add.ref($add.ref($p293, $mul.ref(0, 32)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3510, 72} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p336, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3512, 54} true;
  assume {:verifier.code 0} true;
  $p337 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p338 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3513, 66} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p338, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3517, 45} true;
  assume {:verifier.code 0} true;
  $i339 := 0;
  goto $bb108;
$bb107:
  assume !(($i309 == 1));
  assume {:verifier.code 0} true;
  $i339 := $sub.i64(0, 1073741670);
  goto $bb108;
$bb108:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3520, 43} true;
  assume {:verifier.code 0} true;
  $i340 := $i339;
  goto $bb109;
$bb109:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i285 := $i340;
  goto $bb97;
$bb110:
  assume ($i345 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3532, 39} true;
  assume {:verifier.code 0} true;
  $i346 := $sub.i64(0, 1073741789);
  goto $bb112;
$bb111:
  assume !(($i345 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3535, 52} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3535, 66} true;
  assume {:verifier.code 0} true;
  $p348 := $bitcast.ref.ref($p347);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3535, 66} true;
  assume {:verifier.code 0} true;
  $p349 := $load.ref($M.0, $p348);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3535, 47} true;
  assume {:verifier.code 0} true;
  $p350 := $bitcast.ref.ref($p349);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3536, 43} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3538, 56} true;
  assume {:verifier.code 0} true;
  $p351 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3538, 56} true;
  assume {:verifier.code 0} true;
  $i352 := $load.i64($M.0, $p351);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3538, 45} true;
  assume {:verifier.code 0} true;
  $i353 := $ne.i64($i352, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3538, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i353} true;
  goto $bb113, $bb114;
$bb112:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3587, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i346;
  goto $bb78;
$bb113:
  assume ($i353 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3542, 63} true;
  assume {:verifier.code 0} true;
  $p354 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3542, 73} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.ref($M.14, $p354, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3544, 63} true;
  assume {:verifier.code 0} true;
  $p355 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3544, 71} true;
  assume {:verifier.code 0} true;
  $M.15 := $store.ref($M.15, $p355, $p349);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3546, 60} true;
  assume {:verifier.code 0} true;
  $p356 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3546, 60} true;
  assume {:verifier.code 0} true;
  $p357 := $load.ref($M.0, $p356);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3548, 49} true;
  assume {:verifier.code 0} true;
  $p358 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3545, 55} true;
  assume {:verifier.code 0} true;
  call $i359 := KeSynchronizeExecution($p357, PptSynchronizedDisconnect, $p358);
  call {:cexpr "tmp___1"} boogie_si_record_i8($i359);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3550, 47} true;
  assume {:verifier.code 0} true;
  $i360 := $ne.i8($i359, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3550, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i360} true;
  goto $bb115, $bb116;
$bb114:
  assume !(($i353 == 1));
  assume {:verifier.code 0} true;
  $i370, $i371 := $sub.i64(0, 1073741811), 0;
  goto $bb121;
$bb115:
  assume ($i360 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3553, 47} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3555, 58} true;
  assume {:verifier.code 0} true;
  $p361 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3555, 76} true;
  assume {:verifier.code 0} true;
  $i362 := $load.i64($M.0, $p361);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3555, 76} true;
  assume {:verifier.code 0} true;
  $i363 := $sub.i64($i362, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3555, 76} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p361, $i363);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3558, 60} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3558, 60} true;
  assume {:verifier.code 0} true;
  $i365 := $load.i64($M.0, $p364);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3558, 78} true;
  assume {:verifier.code 0} true;
  $i366 := $eq.i64($i365, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3558, 49} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i366} true;
  goto $bb117, $bb118;
$bb116:
  assume !(($i360 == 1));
  assume {:verifier.code 0} true;
  $i368, $i369 := $sub.i64(0, 1073741811), 0;
  goto $bb120;
$bb117:
  assume ($i366 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3561, 45} true;
  assume {:verifier.code 0} true;
  $i367 := 1;
  goto $bb119;
$bb118:
  assume !(($i366 == 1));
  assume {:verifier.code 0} true;
  $i367 := 0;
  goto $bb119;
$bb119:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3568, 43} true;
  assume {:verifier.code 0} true;
  $i368, $i369 := 0, $i367;
  goto $bb120;
$bb120:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3572, 41} true;
  assume {:verifier.code 0} true;
  $i370, $i371 := $i368, $i369;
  goto $bb121;
$bb121:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3580, 45} true;
  assume {:verifier.code 0} true;
  $i372 := $ne.i8($i371, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3580, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i372} true;
  goto $bb122, $bb123;
$bb122:
  assume ($i372 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3582, 45} true;
  assume {:verifier.code 0} true;
  call PptDisconnectInterrupt($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3584, 41} true;
  assume {:verifier.code 0} true;
  goto $bb124;
$bb123:
  assume !(($i372 == 1));
  assume {:verifier.code 0} true;
  goto $bb124;
$bb124:
  assume {:verifier.code 0} true;
  $i346 := $i370;
  goto $bb112;
$bb125:
  assume ($i377 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3594, 39} true;
  assume {:verifier.code 0} true;
  $i378 := $sub.i64(0, 1073741789);
  goto $bb127;
$bb126:
  assume !(($i377 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3599, 54} true;
  assume {:verifier.code 0} true;
  $p379 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3599, 68} true;
  assume {:verifier.code 0} true;
  $p380 := $bitcast.ref.ref($p379);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3599, 68} true;
  assume {:verifier.code 0} true;
  $p381 := $load.ref($M.0, $p380);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3598, 48} true;
  assume {:verifier.code 0} true;
  $p382 := $bitcast.ref.ref($p381);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3600, 53} true;
  assume {:verifier.code 0} true;
  $p383 := $add.ref($add.ref($p382, $mul.ref(0, 2)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3600, 53} true;
  assume {:verifier.code 0} true;
  $i384 := $load.i8($M.0, $p383);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3596, 52} true;
  assume {:verifier.code 0} true;
  call $i385 := PptSetChipMode($p8, $i384);
  call {:cexpr "Status"} boogie_si_record_i64($i385);
  assume {:verifier.code 0} true;
  $i378 := $i385;
  goto $bb127;
$bb127:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3603, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i378;
  goto $bb78;
$bb128:
  assume ($i390 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3610, 39} true;
  assume {:verifier.code 0} true;
  $i391 := $sub.i64(0, 1073741789);
  goto $bb130;
$bb129:
  assume !(($i390 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3615, 54} true;
  assume {:verifier.code 0} true;
  $p392 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3615, 68} true;
  assume {:verifier.code 0} true;
  $p393 := $bitcast.ref.ref($p392);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3615, 68} true;
  assume {:verifier.code 0} true;
  $p394 := $load.ref($M.0, $p393);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3614, 48} true;
  assume {:verifier.code 0} true;
  $p395 := $bitcast.ref.ref($p394);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3616, 53} true;
  assume {:verifier.code 0} true;
  $p396 := $add.ref($add.ref($p395, $mul.ref(0, 2)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3616, 53} true;
  assume {:verifier.code 0} true;
  $i397 := $load.i8($M.0, $p396);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3612, 52} true;
  assume {:verifier.code 0} true;
  call $i398 := PptClearChipMode($p8, $i397);
  call {:cexpr "Status"} boogie_si_record_i64($i398);
  assume {:verifier.code 0} true;
  $i391 := $i398;
  goto $bb130;
$bb130:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3619, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i391;
  goto $bb78;
$bb131:
  assume ($i407 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3637, 39} true;
  assume {:verifier.code 0} true;
  $i408 := $sub.i64(0, 1073741789);
  goto $bb133;
$bb132:
  assume !(($i407 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3638, 50} true;
  assume {:verifier.code 0} true;
  $p409 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(68, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3638, 50} true;
  assume {:verifier.code 0} true;
  $i410 := $load.i8($M.0, $p409);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3638, 45} true;
  assume {:verifier.code 0} true;
  $i411 := $ne.i8($i410, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3638, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i411} true;
  goto $bb134, $bb135;
$bb133:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3696, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i408;
  goto $bb78;
$bb134:
  assume ($i411 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3640, 41} true;
  assume {:verifier.code 0} true;
  $i412 := $sub.i64(0, 1073741536);
  goto $bb136;
$bb135:
  assume !(($i411 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3643, 49} true;
  assume {:verifier.code 0} true;
  $p413 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3643, 65} true;
  assume {:verifier.code 0} true;
  $p414 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3644, 65} true;
  assume {:verifier.code 0} true;
  $p415 := $bitcast.ref.ref($p414);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3644, 65} true;
  assume {:verifier.code 0} true;
  $p416 := $load.ref($M.0, $p415);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3642, 54} true;
  assume {:verifier.code 0} true;
  call $i417 := PptTrySelectDevice($p413, $p416);
  call {:cexpr "Status"} boogie_si_record_i64($i417);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3645, 45} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3648, 54} true;
  assume {:verifier.code 0} true;
  $i418 := $eq.i64($i417, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3648, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i418} true;
  goto $bb137, $bb138;
$bb136:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i408 := $i412;
  goto $bb133;
$bb137:
  assume ($i418 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3650, 47} true;
  assume {:verifier.code 0} true;
  call $p419 := PptSetCancelRoutine($p1, PptCancelRoutine);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3653, 49} true;
  assume {:verifier.code 0} true;
  $i420 := $M.11;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3653, 56} true;
  assume {:verifier.code 0} true;
  $i421 := $eq.i32($i420, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3653, 49} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i421} true;
  goto $bb139, $bb140;
$bb138:
  assume !(($i418 == 1));
  assume {:verifier.code 0} true;
  goto $bb142;
$bb139:
  assume ($i421 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3654, 54} true;
  assume {:verifier.code 0} true;
  $M.11 := 1;
  call {:cexpr "pended"} boogie_si_record_i32(1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3655, 45} true;
  assume {:verifier.code 0} true;
  goto $bb141;
$bb140:
  assume !(($i421 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3656, 49} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb141;
$bb141:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3663, 60} true;
  assume {:verifier.code 0} true;
  $p422 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3663, 65} true;
  assume {:verifier.code 0} true;
  $p423 := $bitcast.ref.ref($p422);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3664, 60} true;
  assume {:verifier.code 0} true;
  $p424 := $add.ref($add.ref($p423, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p425 := $add.ref($add.ref($add.ref($p423, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3666, 60} true;
  assume {:verifier.code 0} true;
  $p426 := $bitcast.ref.ref($p425);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3666, 60} true;
  assume {:verifier.code 0} true;
  $p427 := $load.ref($M.0, $p426);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3667, 55} true;
  assume {:verifier.code 0} true;
  $p428 := $add.ref($add.ref($p427, $mul.ref(0, 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3667, 55} true;
  assume {:verifier.code 0} true;
  $i429 := $load.i8($M.0, $p428);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3663, 49} true;
  assume {:verifier.code 0} true;
  $i430 := $zext.i8.i32($i429);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3667, 63} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:3667:63: warning: over-approximating bitwise operation or; */
  $i431 := $or.i32($i430, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3663, 49} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i32.i8($i431);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3658, 51} true;
  assume {:verifier.code 0} true;
  $p433 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3658, 56} true;
  assume {:verifier.code 0} true;
  $p434 := $bitcast.ref.ref($p433);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3659, 51} true;
  assume {:verifier.code 0} true;
  $p435 := $add.ref($add.ref($p434, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p436 := $add.ref($add.ref($add.ref($p434, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3661, 51} true;
  assume {:verifier.code 0} true;
  $p437 := $bitcast.ref.ref($p436);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3661, 51} true;
  assume {:verifier.code 0} true;
  $p438 := $load.ref($M.0, $p437);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3662, 51} true;
  assume {:verifier.code 0} true;
  $p439 := $add.ref($add.ref($p438, $mul.ref(0, 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3662, 59} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p439, $i432);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3670, 61} true;
  assume {:verifier.code 0} true;
  $p440 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(72, 1));
  $p441 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(72, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3672, 67} true;
  assume {:verifier.code 0} true;
  $p442 := $load.ref($M.0, $p441);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3673, 50} true;
  assume {:verifier.code 0} true;
  $p443 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3673, 55} true;
  assume {:verifier.code 0} true;
  $p444 := $bitcast.ref.ref($p443);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3673, 63} true;
  assume {:verifier.code 0} true;
  $p445 := $add.ref($add.ref($p444, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p446 := $add.ref($add.ref($add.ref($p444, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p447 := $add.ref($add.ref($add.ref($add.ref($p444, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3674, 66} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p447, $p440);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3676, 50} true;
  assume {:verifier.code 0} true;
  $p448 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3676, 55} true;
  assume {:verifier.code 0} true;
  $p449 := $bitcast.ref.ref($p448);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3676, 63} true;
  assume {:verifier.code 0} true;
  $p450 := $add.ref($add.ref($p449, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p451 := $add.ref($add.ref($add.ref($p449, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p452 := $add.ref($add.ref($add.ref($add.ref($p449, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3677, 66} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p452, $p442);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3680, 55} true;
  assume {:verifier.code 0} true;
  $p453 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3680, 60} true;
  assume {:verifier.code 0} true;
  $p454 := $bitcast.ref.ref($p453);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3681, 55} true;
  assume {:verifier.code 0} true;
  $p455 := $add.ref($add.ref($p454, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p456 := $add.ref($add.ref($add.ref($p454, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3679, 60} true;
  assume {:verifier.code 0} true;
  $p457 := $add.ref($add.ref($p442, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3679, 66} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p457, $p456);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3684, 55} true;
  assume {:verifier.code 0} true;
  $p458 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3684, 60} true;
  assume {:verifier.code 0} true;
  $p459 := $bitcast.ref.ref($p458);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3685, 55} true;
  assume {:verifier.code 0} true;
  $p460 := $add.ref($add.ref($p459, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p461 := $add.ref($add.ref($add.ref($p459, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p462 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(72, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3683, 69} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p462, $p461);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3688, 43} true;
  assume {:verifier.code 0} true;
  goto $bb142;
$bb142:
  assume {:verifier.code 0} true;
  $i412 := $i417;
  goto $bb136;
$bb143:
  assume ($i467 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3706, 39} true;
  assume {:verifier.code 0} true;
  $i468 := $sub.i64(0, 1073741789);
  goto $bb145;
$bb144:
  assume !(($i467 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3709, 47} true;
  assume {:verifier.code 0} true;
  $p469 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3710, 52} true;
  assume {:verifier.code 0} true;
  $p470 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3710, 66} true;
  assume {:verifier.code 0} true;
  $p471 := $bitcast.ref.ref($p470);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3710, 66} true;
  assume {:verifier.code 0} true;
  $p472 := $load.ref($M.0, $p471);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3708, 52} true;
  assume {:verifier.code 0} true;
  call $i473 := PptDeselectDevice($p469, $p472);
  call {:cexpr "Status"} boogie_si_record_i64($i473);
  assume {:verifier.code 0} true;
  $i468 := $i473;
  goto $bb145;
$bb145:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3713, 39} true;
  assume {:verifier.code 0} true;
  $i210 := $i468;
  goto $bb78;
$bb146:
  assume {:verifier.code 0} true;
  goto $bb147;
$bb147:
  assume {:verifier.code 0} true;
  goto $bb148;
$bb148:
  assume {:verifier.code 0} true;
  goto $bb149;
$bb149:
  assume {:verifier.code 0} true;
  goto $bb150;
$bb150:
  assume {:verifier.code 0} true;
  goto $bb151;
$bb151:
  assume {:verifier.code 0} true;
  goto $bb152;
$bb152:
  assume {:verifier.code 0} true;
  goto $bb153;
$bb153:
  assume {:verifier.code 0} true;
  goto $bb154;
$bb154:
  assume {:verifier.code 0} true;
  goto $bb155;
$bb155:
  assume {:verifier.code 0} true;
  goto $bb156;
$bb156:
  assume {:verifier.code 0} true;
  goto $bb157;
$bb157:
  assume {:verifier.code 0} true;
  goto $bb158;
$bb158:
  assume {:verifier.code 0} true;
  goto $bb159;
$bb159:
  assume {:verifier.code 0} true;
  goto $bb160;
$bb160:
  assume {:verifier.code 0} true;
  goto $bb161;
$bb161:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3138, 32} true;
  assume {:verifier.code 0} true;
  $i273 := $i210;
  goto $bb90;
$bb162:
  assume ($i474 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3740, 14} true;
  assume {:verifier.code 0} true;
  $p475 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p476 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3740, 41} true;
  assume {:verifier.code 0} true;
  $p477 := $bitcast.ref.ref($p476);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3740, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p477, $i273);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3741, 20} true;
  assume {:verifier.code 0} true;
  $i478 := $trunc.i64.i32($i273);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3741, 18} true;
  assume {:verifier.code 0} true;
  $M.1 := $i478;
  call {:cexpr "myStatus"} boogie_si_record_i32($i478);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3742, 42} true;
  assume {:verifier.code 0} true;
  $p479 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3742, 54} true;
  assume {:verifier.code 0} true;
  $p480 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3742, 9} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p479, $p480);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3743, 9} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3745, 5} true;
  assume {:verifier.code 0} true;
  goto $bb164;
$bb163:
  assume !(($i474 == 1));
  assume {:verifier.code 0} true;
  goto $bb164;
$bb164:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3747, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $i273;
  goto $bb6;
}
const PptDispatchPnp: ref;
axiom (PptDispatchPnp == $sub.ref(0, 86672));
procedure {:inline 1} PptDispatchPnp($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i8;
  var $i13: i32;
  var $i14: i1;
  var $i15: i64;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i64;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $i36: i64;
  var $i37: i64;
  var $i38: i64;
  var $i28: i64;
  var $i16: i64;
  var $i39: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6440, 24} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6440, 24} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6447, 7} true;
  assume {:verifier.code 0} true;
  call PptDebugDumpPnpIrpInfo($p0, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6448, 16} true;
  assume {:verifier.code 0} true;
  call $i3 := PptAcquireRemoveLockOrFailIrp($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6450, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $sge.i64($i3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6450, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6451, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6451, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6451, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p8 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6452, 23} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6452, 23} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6453, 33} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p10, $mul.ref(0, 68)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6453, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  call {:cexpr "minorFunction"} boogie_si_record_i8($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6454, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6454, 30} true;
  assume {:verifier.code 0} true;
  $i14 := $sgt.i32($i13, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6454, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i39 := $i3;
  goto $bb52;
$bb3:
  assume ($i14 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6456, 20} true;
  assume {:verifier.code 0} true;
  call $i15 := PptPnpUnhandledIrp($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6458, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb5;
$bb4:
  assume !(($i14 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6459, 28} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6459, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6569, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $i16;
  goto $bb52;
$bb6:
  assume ($i17 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6460, 11} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i17 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6462, 30} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i2, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6462, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb9, $bb10;
$bb8:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6494, 42} true;
  assume {:verifier.code 0} true;
  call $i27 := PptPnpUnhandledIrp($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6496, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i27;
  goto $bb40;
$bb9:
  assume ($i18 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6463, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i18 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6465, 32} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i2, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6465, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb12, $bb13;
$bb11:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6499, 42} true;
  assume {:verifier.code 0} true;
  call $i29 := PptPnpStartDevice($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6501, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i29;
  goto $bb40;
$bb12:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6466, 15} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6468, 34} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i2, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6468, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb15, $bb16;
$bb14:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6504, 42} true;
  assume {:verifier.code 0} true;
  call $i30 := PptPnpFilterResourceRequirements($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6507, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i30;
  goto $bb40;
$bb15:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6469, 17} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i20 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6471, 36} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i2, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6471, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb18, $bb19;
$bb17:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6510, 42} true;
  assume {:verifier.code 0} true;
  call $i31 := PptPnpQueryDeviceRelations($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6513, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i31;
  goto $bb40;
$bb18:
  assume ($i21 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6472, 19} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i21 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6474, 38} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i2, 5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6474, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb21, $bb22;
$bb20:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6517, 37} true;
  assume {:verifier.code 0} true;
  call $i32 := PptPnpQueryStopDevice($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6519, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i32;
  goto $bb40;
$bb21:
  assume ($i22 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6475, 21} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i22 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6477, 40} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i2, 6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6477, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb24, $bb25;
$bb23:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6523, 37} true;
  assume {:verifier.code 0} true;
  call $i33 := PptPnpCancelStopDevice($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6525, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i33;
  goto $bb40;
$bb24:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6478, 23} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i23 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6480, 42} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i2, 7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6480, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb27, $bb28;
$bb26:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6528, 42} true;
  assume {:verifier.code 0} true;
  call $i34 := PptPnpStopDevice($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6530, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i34;
  goto $bb40;
$bb27:
  assume ($i24 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6481, 25} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i24 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6483, 44} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i2, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6483, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb30, $bb31;
$bb29:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6534, 37} true;
  assume {:verifier.code 0} true;
  call $i35 := PptPnpQueryRemoveDevice($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6536, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i35;
  goto $bb40;
$bb30:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6484, 27} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i25 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6486, 46} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i2, 9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6486, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb33, $bb34;
$bb32:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6540, 37} true;
  assume {:verifier.code 0} true;
  call $i36 := PptPnpCancelRemoveDevice($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6542, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i36;
  goto $bb40;
$bb33:
  assume ($i26 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6487, 29} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i26 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6490, 31} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6545, 42} true;
  assume {:verifier.code 0} true;
  call $i37 := PptPnpRemoveDevice($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6547, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i37;
  goto $bb40;
$bb36:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6551, 37} true;
  assume {:verifier.code 0} true;
  call $i38 := PptPnpSurpriseRemoval($p0, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6553, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $i38;
  goto $bb40;
$bb37:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6491, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb38, $bb39;
$bb38:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6491, 38} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb39:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6554, 38} true;
  assume {:verifier.code 0} true;
  $i28 := $u0;
  goto $bb40;
$bb40:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:verifier.code 0} true;
  $i16 := $i28;
  goto $bb5;
$bb52:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6571, 5} true;
  assume {:verifier.code 0} true;
  $r := $i39;
  $exn := false;
  return;
}
const PptDispatchPower: ref;
axiom (PptDispatchPower == $sub.ref(0, 87704));
procedure {:inline 1} PptDispatchPower($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i1;
  var $i39: i1;
  var $i40: i1;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i65: i1;
  var $i66: i8;
  var $i58: i8;
  var $p68: ref;
  var $i69: i32;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i64;
  var $p82: ref;
  var $i83: i32;
  var $p84: ref;
  var $p86: ref;
  var $i87: i32;
  var $p88: ref;
  var $i89: i32;
  var $i90: i1;
  var $i91: i8;
  var $i85: i8;
  var $i67: i8;
  var $i38: i8;
  var $i92: i64;
  var $i93: i8;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i1;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i116: i1;
  var $i117: i32;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i1;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $i135: i8;
  var $i136: i32;
  var $i137: i32;
  var $i138: i8;
  var $p139: ref;
  var $p140: ref;
  var $i141: i8;
  var $i142: i32;
  var $i143: i32;
  var $i144: i8;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $i148: i64;
  var $p150: ref;
  var $p151: ref;
  var $i152: i64;
  var $i149: i64;
  var $i115: i64;
  var $p153: ref;
  var $p154: ref;
  var $i20: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7752, 34} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7752, 34} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7752, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7752, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7753, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7753, 30} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7753, 38} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p8, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p10 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7754, 24} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7754, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7755, 46} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7755, 58} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7755, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := PptAcquireRemoveLock($p13, $p14);
  call {:cexpr "tmp"} boogie_si_record_i64($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7758, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $sge.i64($i15, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7758, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i16 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7761, 15} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p18 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7761, 42} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7761, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p19, $i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7762, 9} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7764, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $i15;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7907, 1} true;
  assume {:verifier.code 0} true;
  $r := $i20;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7767, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p12, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7767, 39} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7767, 45} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p22, $mul.ref(0, 20)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7767, 45} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  call {:cexpr "powerType"} boogie_si_record_i32($i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7768, 29} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p12, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7768, 40} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7768, 46} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p26, $mul.ref(0, 20)), $mul.ref(12, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7768, 46} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7768, 46} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7768, 46} true;
  assume {:verifier.code 0} true;
  call $M.16 := $memcpy.i8($M.16, $M.0, $p28, $p29, 4, false);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7769, 20} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p12, $mul.ref(0, 68)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7769, 20} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7769, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7769, 34} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7769, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i33 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7770, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i33 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7772, 22} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p12, $mul.ref(0, 68)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7772, 22} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7772, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7772, 36} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7772, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb8, $bb9;
$bb7:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7780, 13} true;
  assume {:verifier.code 0} true;
  $i38 := 0;
  goto $bb15;
$bb8:
  assume ($i37 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7773, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i37 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7776, 11} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7783, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i24, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7783, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb16, $bb17;
$bb11:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7846, 11} true;
  assume {:verifier.code 0} true;
  $i92, $i93 := $sub.i64(0, 1073741637), 0;
  goto $bb49;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7777, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb13, $bb14;
$bb13:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7777, 18} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb14:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7846, 18} true;
  assume {:verifier.code 0} true;
  $i38 := $u1;
  goto $bb15;
$bb15:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7751, 14} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  $i92, $i93 := 0, $i38;
  goto $bb49;
$bb16:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7784, 15} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i39 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7786, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i24, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7786, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb19, $bb20;
$bb18:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7791, 39} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7791, 39} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7792, 39} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7792, 39} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.16, $p43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7791, 51} true;
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i42, $i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7791, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb24, $bb25;
$bb19:
  assume ($i40 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7787, 17} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i40 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7789, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb22, $bb23;
$bb21:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7818, 39} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(596, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7818, 39} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7819, 39} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7819, 39} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.16, $p70);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7818, 51} true;
  assume {:verifier.code 0} true;
  $i72 := $slt.i32($i69, $i71);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7818, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb37, $bb38;
$bb22:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7789, 24} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb23:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7838, 24} true;
  assume {:verifier.code 0} true;
  $i67 := 0;
  goto $bb36;
$bb24:
  assume ($i45 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7794, 50} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7794, 50} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7794, 23} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p2, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7794, 23} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.16, $p48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7794, 23} true;
  assume {:verifier.code 0} true;
  call $i50 := PoSetPowerState($p47, $i24, $i49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7794, 23} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p3, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7794, 23} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.i32($M.17, $p51, $i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7797, 46} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7797, 46} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7797, 27} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i32(1, $i53);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7797, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb26, $bb27;
$bb25:
  assume !(($i45 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7803, 41} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7803, 41} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.16, $p59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7804, 41} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7804, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7803, 53} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i60, $i62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7803, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb30, $bb31;
$bb26:
  assume ($i54 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7799, 21} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7801, 57} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7801, 57} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.16, $p55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7801, 32} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7801, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p57, $i56);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7802, 19} true;
  assume {:verifier.code 0} true;
  $i58 := 0;
  goto $bb29;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7816, 19} true;
  assume {:verifier.code 0} true;
  $i67 := $i58;
  goto $bb36;
$bb30:
  assume ($i63 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7807, 33} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $add.ref($add.ref($i2p.i64.ref(4292804608), $mul.ref(0, 856)), $mul.ref(816, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7807, 57} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i64, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7806, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  $i66 := 0;
  goto $bb35;
$bb32:
  assume ($i65 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7809, 27} true;
  assume {:verifier.code 0} true;
  call InitNEC_98($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7811, 23} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7813, 21} true;
  assume {:verifier.code 0} true;
  $i66 := 1;
  goto $bb35;
$bb35:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i58 := $i66;
  goto $bb29;
$bb36:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7751, 14} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb37:
  assume ($i72 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7820, 46} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(596, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7820, 46} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7820, 27} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32(1, $i74);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7820, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb39, $bb40;
$bb38:
  assume !(($i72 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7831, 41} true;
  assume {:verifier.code 0} true;
  $p86 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7831, 41} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.16, $p86);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7832, 41} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(596, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7832, 41} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p88);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7831, 53} true;
  assume {:verifier.code 0} true;
  $i90 := $slt.i32($i87, $i89);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7831, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb43, $bb44;
$bb39:
  assume ($i75 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7822, 21} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7825, 34} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7825, 46} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i32($M.16, $p76, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7826, 52} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7826, 52} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7826, 23} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p2, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7826, 23} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.16, $p79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7826, 23} true;
  assume {:verifier.code 0} true;
  call $i81 := PoRequestPowerIrp($p78, 2, $i80, $0.ref, $0.ref, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7828, 59} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7828, 59} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.16, $p82);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7828, 34} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(596, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7828, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p84, $i83);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7830, 19} true;
  assume {:verifier.code 0} true;
  $i85 := 0;
  goto $bb42;
$bb42:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7837, 19} true;
  assume {:verifier.code 0} true;
  $i67 := $i85;
  goto $bb36;
$bb43:
  assume ($i90 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7834, 21} true;
  assume {:verifier.code 0} true;
  $i91 := 1;
  goto $bb45;
$bb44:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  $i91 := 0;
  goto $bb45;
$bb45:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i85 := $i91;
  goto $bb42;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7843, 13} true;
  assume {:verifier.code 0} true;
  $i38 := $i67;
  goto $bb15;
$bb49:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7751, 14} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7853, 21} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7853, 26} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p94);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7853, 34} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p95, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p97 := $add.ref($add.ref($add.ref($p95, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7854, 20} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p97);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7854, 20} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.0, $p98);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7855, 25} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7855, 30} true;
  assume {:verifier.code 0} true;
  $p101 := $bitcast.ref.ref($p100);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7855, 38} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p101, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p103 := $add.ref($add.ref($add.ref($p101, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7856, 24} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7856, 24} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7856, 45} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p105, $mul.ref($sub.ref(0, 1), 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7858, 14} true;
  assume {:verifier.code 0} true;
  $p107 := $bitcast.ref.ref($p106);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7858, 25} true;
  assume {:verifier.code 0} true;
  $p108 := $bitcast.ref.ref($p99);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7858, 7} true;
  assume {:verifier.code 0} true;
  call $p109 := memcpy($p107, $p108, $p2i.ref.i32($add.ref($add.ref($0.ref, $mul.ref(0, 68)), $mul.ref(52, 1))));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7860, 18} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p105, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7860, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p110, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7862, 18} true;
  assume {:verifier.code 0} true;
  $i111 := $sge.i64($i92, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7862, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i111 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7869, 11} true;
  assume {:verifier.code 0} true;
  $i116 := $ne.i8($i93, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7869, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb55, $bb56;
$bb53:
  assume !(($i111 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7864, 15} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p113 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7864, 42} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p113);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7864, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p114, $i92);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7866, 9} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7868, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $i92;
  goto $bb54;
$bb54:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7904, 40} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7904, 52} true;
  assume {:verifier.code 0} true;
  $p154 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7904, 7} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p153, $p154);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7905, 5} true;
  assume {:verifier.code 0} true;
  $i20 := $i115;
  goto $bb3;
$bb55:
  assume ($i116 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7870, 13} true;
  assume {:verifier.code 0} true;
  $i117 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7870, 18} true;
  assume {:verifier.code 0} true;
  $i118 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7870, 15} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.i32($i117, $i118);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7870, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb57, $bb58;
$bb56:
  assume !(($i116 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7900, 44} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7900, 44} true;
  assume {:verifier.code 0} true;
  $p151 := $load.ref($M.0, $p150);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7900, 20} true;
  assume {:verifier.code 0} true;
  call $i152 := PoCallDriver($p151, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i152);
  assume {:verifier.code 0} true;
  $i149 := $i152;
  goto $bb63;
$bb57:
  assume ($i119 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7872, 13} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7874, 9} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i119 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7875, 15} true;
  assume {:verifier.code 0} true;
  $i120 := $M.18;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7875, 30} true;
  assume {:verifier.code 0} true;
  $i121 := $ne.i32($i120, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7875, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb60, $bb61;
$bb59:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7886, 29} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7886, 34} true;
  assume {:verifier.code 0} true;
  $p123 := $bitcast.ref.ref($p122);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7886, 42} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($add.ref($p123, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p125 := $add.ref($add.ref($add.ref($p123, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7887, 28} true;
  assume {:verifier.code 0} true;
  $p126 := $bitcast.ref.ref($p125);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7887, 28} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7887, 49} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, $mul.ref($sub.ref(0, 1), 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7889, 22} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(52, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7889, 40} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p129, PptPowerComplete);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7890, 32} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7890, 22} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(60, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7890, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p131, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7891, 22} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7891, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p132, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7892, 22} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7892, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p133, 64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7893, 48} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7893, 48} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i8($M.0, $p134);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7893, 32} true;
  assume {:verifier.code 0} true;
  $i136 := $zext.i8.i32($i135);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7893, 56} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7893:56: warning: over-approximating bitwise operation or; */
  $i137 := $or.i32($i136, 128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7893, 32} true;
  assume {:verifier.code 0} true;
  $i138 := $trunc.i32.i8($i137);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7893, 22} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7893, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p139, $i138);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7894, 48} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7894, 48} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i8($M.0, $p140);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7894, 32} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i8.i32($i141);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7894, 56} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7894:56: warning: over-approximating bitwise operation or; */
  $i143 := $or.i32($i142, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7894, 32} true;
  assume {:verifier.code 0} true;
  $i144 := $trunc.i32.i8($i143);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7894, 22} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($add.ref($p127, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7894, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p145, $i144);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7895, 44} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7895, 44} true;
  assume {:verifier.code 0} true;
  $p147 := $load.ref($M.0, $p146);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7895, 20} true;
  assume {:verifier.code 0} true;
  call $i148 := PoCallDriver($p147, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i148);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7897, 7} true;
  assume {:verifier.code 0} true;
  $i149 := $i148;
  goto $bb63;
$bb60:
  assume ($i121 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7877, 15} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7879, 11} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i121 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7880, 28} true;
  assume {:verifier.code 0} true;
  $M.18 := 1;
  call {:cexpr "compRegistered"} boogie_si_record_i32(1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7881, 22} true;
  assume {:verifier.code 0} true;
  $M.19 := PptPowerComplete;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7882, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := 1;
  call {:cexpr "routine"} boogie_si_record_i32(1);
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:verifier.code 0} true;
  goto $bb59;
$bb63:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i115 := $i149;
  goto $bb54;
}
const PptDispatchSystemControl: ref;
axiom (PptDispatchSystemControl == $sub.ref(0, 88736));
procedure {:inline 1} PptDispatchSystemControl($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $p22: ref;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
  var $i26: i8;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i8;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i17: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9211, 59} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9211, 59} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9211, 59} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9211, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9212, 43} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(776, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9212, 16} true;
  assume {:verifier.code 0} true;
  call $i7 := WmiSystemControl($p6, $p0, $p1, $p2);
  call {:cexpr "status"} boogie_si_record_i64($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9215, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.21, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9215, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9215, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9216, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9218, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.21, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9218, 23} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9218, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9231, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $M.4;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9231, 19} true;
  assume {:verifier.code 0} true;
  $M.2 := $i16;
  call {:cexpr "s"} boogie_si_record_i32($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9232, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $i7;
  goto $bb17;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9219, 9} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9221, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.21, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9221, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9221, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9235, 17} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9237, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $i7;
  goto $bb17;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9222, 11} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i13 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9224, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.21, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9224, 27} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9224, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb10, $bb11;
$bb9:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9237, 17} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb10:
  assume ($i15 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9225, 13} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i15 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9228, 15} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9240, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9240, 26} true;
  assume {:verifier.code 0} true;
  $i19 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9240, 23} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i18, $i19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9240, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb18, $bb19;
$bb13:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9253, 21} true;
  assume {:verifier.code 0} true;
  $i38 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9253, 26} true;
  assume {:verifier.code 0} true;
  $i39 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9253, 23} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i38, $i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9253, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb21, $bb22;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9229, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb15, $bb16;
$bb15:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9229, 22} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb16:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9265, 22} true;
  assume {:verifier.code 0} true;
  $i17 := $u0;
  goto $bb17;
$bb17:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb18:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9241, 23} true;
  assume {:verifier.code 0} true;
  $i21 := $M.22;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9241, 21} true;
  assume {:verifier.code 0} true;
  $M.2 := $i21;
  call {:cexpr "s"} boogie_si_record_i32($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9242, 17} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i20 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9243, 21} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9246, 59} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9246, 59} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9246, 49} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i8.i32($i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9246, 75} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i24, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9246, 42} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9246, 24} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9246, 40} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, $i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9247, 24} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9247, 29} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9247, 37} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p29, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p31 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9248, 24} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9248, 45} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9248, 45} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, $mul.ref(1, 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9248, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9249, 51} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9249, 51} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9249, 28} true;
  assume {:verifier.code 0} true;
  call $i37 := IofCallDriver($p36, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9251, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $i37;
  goto $bb17;
$bb21:
  assume ($i40 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9254, 23} true;
  assume {:verifier.code 0} true;
  $i41 := $M.22;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9254, 21} true;
  assume {:verifier.code 0} true;
  $M.2 := $i41;
  call {:cexpr "s"} boogie_si_record_i32($i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9255, 17} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i40 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9256, 21} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9259, 59} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9259, 59} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9259, 49} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i8.i32($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9259, 75} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i32($i44, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9259, 42} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i8($i45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9259, 24} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9259, 40} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p47, $i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9260, 24} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9260, 29} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9260, 37} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p49, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p51 := $add.ref($add.ref($add.ref($p49, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9261, 24} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9261, 45} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9261, 45} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, $mul.ref(1, 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9261, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p52, $p54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9262, 51} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9262, 51} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9262, 28} true;
  assume {:verifier.code 0} true;
  call $i57 := IofCallDriver($p56, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9264, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $i57;
  goto $bb17;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9273, 5} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
}
const PptUnload: ref;
axiom (PptUnload == $sub.ref(0, 89768));
procedure {:inline 1} PptUnload($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2713, 35} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2713, 35} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2713, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.23, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2715, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2715, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2717, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.ref($p3, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2717, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2719, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2720, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2722, 36} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p3, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2722, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.24, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2722, 21} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2723, 24} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2723, 24} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2723, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2723, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2762, 9} true;
  assume {:verifier.code 0} true;
  $p36 := $M.26;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2762, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.ref($p36, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2762, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb16, $bb17;
$bb7:
  assume ($i10 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2725, 13} true;
  assume {:verifier.code 0} true;
  call PptDisconnectInterrupt($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2727, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2730, 11} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2730, 21} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2732, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(400, 1));
  $p12 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(400, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2732, 52} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2732, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i32($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2733, 46} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(400, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2733, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i32($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2732, 58} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i14, $i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2732, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i17 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2736, 15} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb13:
  assume !(($i17 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2735, 13} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2740, 39} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(400, 1));
  $p19 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(400, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2740, 47} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2740, 55} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p20, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2740, 55} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2741, 39} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(400, 1));
  $p24 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(400, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2741, 47} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2741, 55} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p25, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2741, 55} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2742, 26} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p27, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2742, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, $p22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2743, 26} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p22, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2743, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p29, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2730, 11} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb15:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2755, 17} true;
  assume {:verifier.code 0} true;
  call $p30 := IoGetConfigurationInformation();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2756, 16} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p30, $mul.ref(0, 80)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2756, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.25, $p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2756, 30} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i64($i32, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2756, 30} true;
  assume {:verifier.code 0} true;
  $M.25 := $store.i64($M.25, $p31, $i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2757, 41} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2757, 41} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.23, $p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2715, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $p35;
  goto $bb1;
$bb16:
  assume ($i37 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2765, 23} true;
  assume {:verifier.code 0} true;
  $M.26 := $0.ref;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2767, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2771, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptDisconnectInterrupt: ref;
axiom (PptDisconnectInterrupt == $sub.ref(0, 90800));
procedure {:inline 1} PptDisconnectInterrupt($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8470, 40} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8470, 40} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8470, 40} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8470, 7} true;
  assume {:verifier.code 0} true;
  call IoDisconnectInterrupt($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8471, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const IoGetConfigurationInformation: ref;
axiom (IoGetConfigurationInformation == $sub.ref(0, 91832));
procedure {:inline 1} IoGetConfigurationInformation()
  returns ($r: ref)
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9871, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9871, 13} true;
  assume {:verifier.code 0} true;
  call $p0 := malloc(80);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9872, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9872, 5} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const malloc: ref;
axiom (malloc == $sub.ref(0, 92864));
procedure {:inline 1} malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const IoDisconnectInterrupt: ref;
axiom (IoDisconnectInterrupt == $sub.ref(0, 93896));
procedure {:inline 1} IoDisconnectInterrupt($p0: ref);
const PptFreePort: ref;
axiom (PptFreePort == $sub.ref(0, 94928));
procedure {:inline 1} PptFreePort($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i8;
  var $p13: ref;
  var $i14: i8;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $i23: i1;
  var $p24: ref;
  var $i25: i64;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8737, 23} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8737, 23} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8739, 45} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8739, 19} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8739, 25} true;
  assume {:verifier.code 0} true;
  $M.27 := $store.ref($M.27, $p5, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8740, 7} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8742, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8742, 26} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8742, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8742, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8744, 49} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8744, 49} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8745, 59} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8744, 9} true;
  assume {:verifier.code 0} true;
  call $i12 := KeSynchronizeExecution($p10, PptSynchronizedDecrement, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8747, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8748, 34} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8748, 9} true;
  assume {:verifier.code 0} true;
  call $i14 := PptSynchronizedDecrement($p13);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8752, 24} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(840, 1));
  $p16 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(840, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8752, 57} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8752, 57} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8752, 57} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p16, $i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8756, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8756, 17} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8758, 14} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i8(0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8758, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8765, 11} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8759, 27} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8759, 27} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.28, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8759, 36} true;
  assume {:verifier.code 0} true;
  $i22 := $sge.i64($i21, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8759, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i22 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8761, 11} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i22 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8762, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8764, 9} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8770, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i8(0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8770, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb13, $bb14;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8756, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb13:
  assume ($i23 == 1);
  assume {:verifier.code 0} true;
  goto $bb18;
$bb14:
  assume !(($i23 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8772, 9} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8773, 46} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8773, 46} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i64($M.0, $p24);
  call {:cexpr "InterruptRefCount"} boogie_si_record_i64($i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8776, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i64($i25, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8776, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i26 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8778, 51} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8778, 51} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8779, 61} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8778, 11} true;
  assume {:verifier.code 0} true;
  call $i30 := KeSynchronizeExecution($p28, PptTraversePortCheckList, $p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8781, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8783, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8785, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptSetChipMode: ref;
axiom (PptSetChipMode == $sub.ref(0, 95960));
procedure {:inline 1} PptSetChipMode($p0: ref, $i1: i8)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i8;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $i29: i64;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $i37: i64;
  var $i38: i1;
  var $i39: i64;
  var $i40: i32;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $i47: i1;
  var $i48: i64;
  var $i19: i64;
  var $i30: i64;
  var $i49: i1;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $i9: i64;
  var $i28: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5387, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptSetChipMode:arg:ChipMode"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5387, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5387, 45} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5387:45: warning: over-approximating bitwise operation and; */
  $i3 := $and.i32($i2, 4294967264);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5387, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i8($i3);
  call {:cexpr "EcrMode"} boogie_si_record_i8($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5389, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p6 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(136, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5389, 28} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5389, 40} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5389, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5393, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 1073741436);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5446, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i9;
  goto $bb12;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5396, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $M.29;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5396, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5396, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5398, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p13 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5398, 41} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5399, 24} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p16 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5399, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  call $i18 := devirtbounce($p14, $p17, $i1);
  call {:cexpr "Status"} boogie_si_record_i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5401, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $i18;
  goto $bb7;
$bb6:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5403, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5403, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 96);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5403, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5396, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $i19;
  goto $bb14;
$bb8:
  assume ($i21 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5404, 25} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p23 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5404, 33} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.0, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5404, 54} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5404:54: warning: over-approximating bitwise operation and; */
  $i25 := $and.i64($i24, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5404, 61} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5404:61: warning: over-approximating bitwise operation xor; */
  $i26 := $xor.i64($i25, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5404, 61} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5404, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb10:
  assume ($i27 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5407, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i64(0, 1073741810);
  goto $bb12;
$bb11:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5448, 1} true;
  assume {:verifier.code 0} true;
  $r := $i28;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5410, 20} true;
  assume {:verifier.code 0} true;
  call $i29 := PptEcrSetMode($p0, $i1);
  call {:cexpr "Status"} boogie_si_record_i64($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5411, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $i29;
  goto $bb14;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5438, 16} true;
  assume {:verifier.code 0} true;
  $i49 := $sge.i64($i30, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5438, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb28, $bb29;
$bb15:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5414, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i8.i32($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5414, 24} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, 128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5414, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i32 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5415, 25} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p34 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5415, 33} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5415, 54} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5415:54: warning: over-approximating bitwise operation and; */
  $i36 := $and.i64($i35, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5415, 61} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5415:61: warning: over-approximating bitwise operation xor; */
  $i37 := $xor.i64($i36, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5415, 61} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i64($i37, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5415, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb18, $bb19;
$bb17:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb18:
  assume ($i38 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5418, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i64(0, 1073741810);
  goto $bb12;
$bb19:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5421, 20} true;
  assume {:verifier.code 0} true;
  call $i39 := PptEcrSetMode($p0, $i1);
  call {:cexpr "Status"} boogie_si_record_i64($i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5422, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $i39;
  goto $bb14;
$bb21:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5425, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5425, 24} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i40, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5425, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i41 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5426, 25} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p43 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5426, 33} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5426, 54} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5426:54: warning: over-approximating bitwise operation and; */
  $i45 := $and.i64($i44, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5426, 61} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5426:61: warning: over-approximating bitwise operation xor; */
  $i46 := $xor.i64($i45, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5426, 61} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i64($i46, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5426, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb24, $bb25;
$bb23:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb24:
  assume ($i47 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5429, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i64(0, 1073741810);
  goto $bb12;
$bb25:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5432, 20} true;
  assume {:verifier.code 0} true;
  call $i48 := PptSetByteMode($p0, $i1);
  call {:cexpr "Status"} boogie_si_record_i64($i48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5433, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $i48;
  goto $bb14;
$bb27:
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb7;
$bb28:
  assume ($i49 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5441, 40} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i64($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5441, 18} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p52 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(136, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5441, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p52, $i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5442, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5438, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $i30;
  goto $bb3;
}
const PptClearChipMode: ref;
axiom (PptClearChipMode == $sub.ref(0, 96992));
procedure {:inline 1} PptClearChipMode($p0: ref, $i1: i8)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i20: i1;
  var $i21: i64;
  var $i23: i1;
  var $i24: i64;
  var $i25: i1;
  var $i26: i64;
  var $i19: i64;
  var $i22: i64;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $i9: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5455, 15} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptClearChipMode:arg:ChipMode"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5455, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5455, 29} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5455:29: warning: over-approximating bitwise operation and; */
  $i3 := $and.i32($i2, 4294967264);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5455, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  call {:cexpr "EcrMode"} boogie_si_record_i64($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5457, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p6 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(136, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5457, 39} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5457, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i4, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5457, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5461, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 1073741436);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5501, 5} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5464, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $M.29;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5464, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5464, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5466, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p13 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5466, 41} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5467, 24} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p16 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5467, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  call $i18 := devirtbounce($p14, $p17, $i1);
  call {:cexpr "Status"} boogie_si_record_i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5469, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $i18;
  goto $bb7;
$bb6:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5471, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i64($i4, 96);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5471, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5464, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i19;
  goto $bb10;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5473, 20} true;
  assume {:verifier.code 0} true;
  call $i21 := PptEcrClearMode($p0);
  call {:cexpr "Status"} boogie_si_record_i64($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5475, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i21;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5494, 16} true;
  assume {:verifier.code 0} true;
  $i27 := $sge.i64($i22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5494, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb18, $bb19;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5478, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i4, 128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5478, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5480, 20} true;
  assume {:verifier.code 0} true;
  call $i24 := PptEcrClearMode($p0);
  call {:cexpr "Status"} boogie_si_record_i64($i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5482, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i24;
  goto $bb10;
$bb13:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5485, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i4, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5485, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5487, 20} true;
  assume {:verifier.code 0} true;
  call $i26 := PptClearByteMode($p0);
  call {:cexpr "Status"} boogie_si_record_i64($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5489, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i26;
  goto $bb10;
$bb16:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  $i19 := $sub.i64(0, 1073741823);
  goto $bb7;
$bb18:
  assume ($i27 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5497, 18} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p29 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(136, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5497, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p29, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5498, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5494, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $i22;
  goto $bb3;
}
const PptTrySelectDevice: ref;
axiom (PptTrySelectDevice == $sub.ref(0, 98024));
procedure {:inline 1} PptTrySelectDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $i9: i1;
  var $i10: i64;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i64;
  var $p17: ref;
  var $i18: i8;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i1;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $i37: i64;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $i42: i8;
  var $i43: i8;
  var $i44: i32;
  var $i45: i8;
  var $i46: i32;
  var $i47: i1;
  var $i48: i1;
  var $i49: i32;
  var $i50: i32;
  var $i51: i8;
  var $i52: i8;
  var $i53: i32;
  var $i54: i32;
  var $i55: i8;
  var $i56: i1;
  var $i57: i64;
  var $i58: i64;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i8;
  var $p69: ref;
  var $i70: i8;
  var $p71: ref;
  var $i72: i64;
  var $i73: i1;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $i82: i1;
  var $i83: i64;
  var $p84: ref;
  var $p85: ref;
  var $i86: i64;
  var $i87: i1;
  var $i88: i8;
  var $i89: i8;
  var $i90: i32;
  var $i91: i8;
  var $i92: i32;
  var $i93: i1;
  var $i94: i1;
  var $i95: i32;
  var $i96: i32;
  var $i97: i8;
  var $i98: i8;
  var $i99: i32;
  var $i100: i32;
  var $i101: i8;
  var $i102: i1;
  var $i103: i64;
  var $i104: i64;
  var $i74: i64;
  var $i59: i64;
  var $i28: i64;
  var $i11: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4048, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4048, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4049, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4052, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4052, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4052, 31} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4052:31: warning: over-approximating bitwise operation and; */
  $i8 := $and.i64($i7, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4052, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4052, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4054, 15} true;
  assume {:verifier.code 0} true;
  call $i10 := PptTrySelectLegacyZip($p0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4056, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i10;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4058, 25} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4058, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4058, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4058, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4058, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4186, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume ($i15 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4060, 17} true;
  assume {:verifier.code 0} true;
  call $i16 := PptTrySelectLegacyZip($p0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4062, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $i16;
  goto $bb3;
$bb5:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4066, 25} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4066, 25} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  call {:cexpr "DeviceID"} boogie_si_record_i8($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4067, 20} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4067, 20} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4067, 33} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4067:33: warning: over-approximating bitwise operation and; */
  $i21 := $and.i64($i20, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4067, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4067, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i22 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4075, 12} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb9:
  assume !(($i22 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4068, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4068, 40} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p25 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4068, 48} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.0, $p25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4068, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $ugt.i64($i23, $i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4068, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i27 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4072, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i27 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4073, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4075, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i64(0, 1073741811);
  goto $bb14;
$bb13:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4077, 20} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4077, 20} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i64($M.0, $p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4077, 33} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4077:33: warning: over-approximating bitwise operation and; */
  $i31 := $and.i64($i30, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4077, 33} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i64($i31, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4077, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb15, $bb16;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4184, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $i28;
  goto $bb3;
$bb15:
  assume ($i32 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4078, 24} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4078, 24} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i64($M.0, $p33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4078, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4078:37: warning: over-approximating bitwise operation and; */
  $i35 := $and.i64($i34, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4078, 37} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i64($i35, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4078, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb17, $bb18;
$bb16:
  assume !(($i32 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4120, 11} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4121, 43} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4121, 23} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4121, 29} true;
  assume {:verifier.code 0} true;
  $M.9 := $store.ref($M.9, $p61, $p60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4123, 24} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4123, 24} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i64($M.0, $p62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4123, 13} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i64($i63, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4123, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb37, $bb38;
$bb17:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4113, 16} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb18:
  assume !(($i36 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4079, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4079, 44} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p39 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4079, 52} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i64($M.0, $p39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4079, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $ult.i64($i37, $i40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4079, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i41 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4082, 15} true;
  assume {:verifier.code 0} true;
  $i42, $i43 := 0, 0;
  goto $bb21;
$bb20:
  assume !(($i41 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4111, 13} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb21:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4082, 25} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4084, 21} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4084, 35} true;
  assume {:verifier.code 0} true;
  $i45 := $M.30;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4084, 30} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i32($i45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4084, 28} true;
  assume {:verifier.code 0} true;
  $i47 := $slt.i32($i44, $i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4084, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i47 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4085, 24} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i8($i42, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4085, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i47 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4091, 19} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb25:
  assume ($i48 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4088, 21} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb26:
  assume !(($i48 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4087, 19} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4090, 17} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4102, 17} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i8($i42, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4102, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb30, $bb31;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4095, 56} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4095, 54} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4095:54: warning: over-approximating bitwise operation or; */
  $i50 := $or.i32(224, $i49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4095, 34} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i8($i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4094, 29} true;
  assume {:verifier.code 0} true;
  call $i52 := PptSend1284_3Command($p4, $i51);
  call {:cexpr "success"} boogie_si_record_i8($i52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4096, 19} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4097, 31} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i8.i32($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4097, 38} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i53, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4097, 23} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  call {:cexpr "i"} boogie_si_record_i8($i55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4082, 15} true;
  assume {:verifier.code 0} true;
  $i42, $i43 := $i52, $i55;
  goto $bb21;
$bb30:
  assume ($i56 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4106, 13} true;
  assume {:verifier.code 0} true;
  $i57 := 0;
  goto $bb32;
$bb31:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  $i57 := $sub.i64(0, 1073741823);
  goto $bb32;
$bb32:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4110, 11} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4113, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $i57;
  goto $bb35;
$bb34:
  assume true;
  assume {:verifier.code 0} true;
  $i58 := 0;
  goto $bb35;
$bb35:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4118, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $i58;
  goto $bb36;
$bb36:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i28 := $i59;
  goto $bb14;
$bb37:
  assume ($i64 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4125, 47} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4125, 47} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4126, 63} true;
  assume {:verifier.code 0} true;
  $p67 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4125, 13} true;
  assume {:verifier.code 0} true;
  call $i68 := KeSynchronizeExecution($p66, PptSynchronizedIncrement, $p67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4128, 9} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i64 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4129, 38} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4129, 13} true;
  assume {:verifier.code 0} true;
  call $i70 := PptSynchronizedIncrement($p69);
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4131, 25} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4131, 25} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i64($M.10, $p71);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4131, 13} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i64($i72, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4131, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i73 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4136, 9} true;
  assume {:verifier.code 0} true;
  $i74 := 259;
  goto $bb42;
$bb41:
  assume !(($i73 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4140, 22} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(840, 1));
  $p76 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(840, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4140, 59} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i64($M.0, $p76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4140, 59} true;
  assume {:verifier.code 0} true;
  $i78 := $add.i64($i77, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4140, 59} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p76, $i78);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4141, 26} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4141, 26} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i64($M.0, $p79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4141, 39} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4141:39: warning: over-approximating bitwise operation and; */
  $i81 := $and.i64($i80, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4141, 39} true;
  assume {:verifier.code 0} true;
  $i82 := $ne.i64($i81, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4141, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb43, $bb44;
$bb42:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i59 := $i74;
  goto $bb36;
$bb43:
  assume ($i82 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4176, 18} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb44:
  assume !(($i82 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4142, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.i8.i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4142, 46} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p85 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4142, 54} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i64($M.0, $p85);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4142, 33} true;
  assume {:verifier.code 0} true;
  $i87 := $ult.i64($i83, $i86);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4142, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i87 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4145, 17} true;
  assume {:verifier.code 0} true;
  $i88, $i89 := 0, 0;
  goto $bb47;
$bb46:
  assume !(($i87 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4174, 15} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb47:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4145, 27} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4147, 23} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4147, 37} true;
  assume {:verifier.code 0} true;
  $i91 := $M.30;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4147, 32} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i8.i32($i91);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4147, 30} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i90, $i92);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4147, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i93 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4148, 26} true;
  assume {:verifier.code 0} true;
  $i94 := $ne.i8($i88, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4148, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb51, $bb52;
$bb50:
  assume !(($i93 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4154, 21} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb51:
  assume ($i94 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4151, 23} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb52:
  assume !(($i94 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4150, 21} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4153, 19} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4165, 19} true;
  assume {:verifier.code 0} true;
  $i102 := $ne.i8($i88, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4165, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb56, $bb57;
$bb55:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4158, 58} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i8.i32($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4158, 56} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4158:56: warning: over-approximating bitwise operation or; */
  $i96 := $or.i32(224, $i95);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4158, 36} true;
  assume {:verifier.code 0} true;
  $i97 := $trunc.i32.i8($i96);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4157, 31} true;
  assume {:verifier.code 0} true;
  call $i98 := PptSend1284_3Command($p4, $i97);
  call {:cexpr "success"} boogie_si_record_i8($i98);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4159, 21} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4160, 33} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i8.i32($i89);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4160, 40} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i32($i99, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4160, 25} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i32.i8($i100);
  call {:cexpr "i"} boogie_si_record_i8($i101);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4145, 17} true;
  assume {:verifier.code 0} true;
  $i88, $i89 := $i98, $i101;
  goto $bb47;
$bb56:
  assume ($i102 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4169, 15} true;
  assume {:verifier.code 0} true;
  $i103 := 0;
  goto $bb58;
$bb57:
  assume !(($i102 == 1));
  assume {:verifier.code 0} true;
  $i103 := $sub.i64(0, 1073741823);
  goto $bb58;
$bb58:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4173, 13} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4176, 11} true;
  assume {:verifier.code 0} true;
  $i104 := $i103;
  goto $bb61;
$bb60:
  assume true;
  assume {:verifier.code 0} true;
  $i104 := 0;
  goto $bb61;
$bb61:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i74 := $i104;
  goto $bb42;
}
const PptDeselectDevice: ref;
axiom (PptDeselectDevice == $sub.ref(0, 99056));
procedure {:inline 1} PptDeselectDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $i8: i64;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i1;
  var $i14: i64;
  var $p15: ref;
  var $i16: i8;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $i30: i1;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $i36: i8;
  var $i37: i8;
  var $i38: i32;
  var $i39: i8;
  var $i40: i32;
  var $i41: i1;
  var $i42: i1;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i8;
  var $i47: i1;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $i53: i64;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $i54: i64;
  var $i26: i64;
  var $i9: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4198, 17} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4198, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4199, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4202, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4202, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.0, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4202, 31} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4202:31: warning: over-approximating bitwise operation and; */
  $i6 := $and.i64($i5, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4202, 31} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4202, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4204, 15} true;
  assume {:verifier.code 0} true;
  call $i8 := PptDeselectLegacyZip($p0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4206, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $i8;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4208, 25} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4208, 25} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4208, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4208, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4208, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4281, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4210, 17} true;
  assume {:verifier.code 0} true;
  call $i14 := PptDeselectLegacyZip($p0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4212, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $i14;
  goto $bb3;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4216, 25} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4216, 25} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  call {:cexpr "DeviceID"} boogie_si_record_i8($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4217, 20} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4217, 20} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4217, 33} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4217:33: warning: over-approximating bitwise operation and; */
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4217, 33} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64($i19, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4217, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4225, 12} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb9:
  assume !(($i20 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4218, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i64($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4218, 40} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p23 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4218, 48} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.0, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4218, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $ugt.i64($i21, $i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4218, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4222, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i25 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4223, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4225, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i64(0, 1073741811);
  goto $bb14;
$bb13:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4227, 22} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4227, 22} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4227, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4227:35: warning: over-approximating bitwise operation and; */
  $i29 := $and.i64($i28, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4227, 35} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i29, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4227, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb15, $bb16;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4279, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i26;
  goto $bb3;
$bb15:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4267, 14} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb16:
  assume !(($i30 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4228, 13} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i8.i64($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4228, 42} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p33 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4228, 50} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i64($M.0, $p33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4228, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $ult.i64($i31, $i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4228, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i35 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4231, 13} true;
  assume {:verifier.code 0} true;
  $i36, $i37 := 0, 0;
  goto $bb19;
$bb18:
  assume !(($i35 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4265, 11} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4231, 23} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4233, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4233, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $M.30;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4233, 28} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4233, 26} true;
  assume {:verifier.code 0} true;
  $i41 := $slt.i32($i38, $i40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4233, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i41 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4234, 22} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i8($i36, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4234, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb23, $bb24;
$bb22:
  assume !(($i41 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4240, 17} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb23:
  assume ($i42 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4237, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb24:
  assume !(($i42 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4236, 17} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4239, 15} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4250, 15} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i8($i36, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4250, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb28, $bb29;
$bb27:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4243, 27} true;
  assume {:verifier.code 0} true;
  call $i43 := PptSend1284_3Command($p2, 48);
  call {:cexpr "success"} boogie_si_record_i8($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4244, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4245, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4245, 36} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i32($i44, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4245, 21} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i8($i45);
  call {:cexpr "i"} boogie_si_record_i8($i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4231, 13} true;
  assume {:verifier.code 0} true;
  $i36, $i37 := $i43, $i46;
  goto $bb19;
$bb28:
  assume ($i47 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4253, 28} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4253, 28} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i64($M.0, $p48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4253, 41} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4253:41: warning: over-approximating bitwise operation and; */
  $i50 := $and.i64($i49, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4253, 41} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i64($i50, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4253, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb30, $bb31;
$bb29:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  $i53 := $sub.i64(0, 1073741823);
  goto $bb33;
$bb30:
  assume ($i51 == 1);
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i51 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4255, 29} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4255, 17} true;
  assume {:verifier.code 0} true;
  call PptFreePort($p52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4257, 13} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4260, 11} true;
  assume {:verifier.code 0} true;
  $i53 := 0;
  goto $bb33;
$bb33:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4264, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4267, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $i53;
  goto $bb36;
$bb35:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4270, 24} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4270, 24} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i64($M.0, $p55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4270, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4270:37: warning: over-approximating bitwise operation and; */
  $i57 := $and.i64($i56, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4270, 37} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i64($i57, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4270, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb37, $bb38;
$bb36:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i26 := $i54;
  goto $bb14;
$bb37:
  assume ($i58 == 1);
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i58 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4272, 25} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4272, 13} true;
  assume {:verifier.code 0} true;
  call PptFreePort($p59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4274, 9} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:verifier.code 0} true;
  $i54 := 0;
  goto $bb36;
}
const PptDeselectLegacyZip: ref;
axiom (PptDeselectLegacyZip == $sub.ref(0, 100088));
procedure {:inline 1} PptDeselectLegacyZip($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8074, 13} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8074, 13} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_long"} boogie_si_record_i64($i2);
  call {:cexpr "i"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8080, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8081, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p5 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8081, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8082, 15} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8084, 48} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref(LegacyZipModeQualifier___11, $mul.ref(0, 3)), $mul.ref($i2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8084, 48} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.31, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8084, 7} true;
  assume {:verifier.code 0} true;
  call PptLegacyZipClockPrtModeByte($p6, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8085, 7} true;
  assume {:verifier.code 0} true;
  call PptLegacyZipClockPrtModeByte($p6, 15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8087, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p7, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8087, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8087, 33} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:8087:33: warning: over-approximating bitwise operation and; */
  $i12 := $and.i64($i11, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8087, 33} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8087, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8089, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8089, 9} true;
  assume {:verifier.code 0} true;
  call PptFreePort($p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8091, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8093, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const PptSend1284_3Command: ref;
axiom (PptSend1284_3Command == $sub.ref(0, 101120));
procedure {:inline 1} PptSend1284_3Command($p0: ref, $i1: i8)
  returns ($r: i8)
{
  var $i2: i8;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i8;
  var $i16: i32;
  var $i17: i32;
  var $i18: i8;
  var $i19: i32;
  var $i20: i32;
  var $i21: i8;
  var $i22: i64;
  var $p23: ref;
  var $i24: i8;
  var $p25: ref;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $p31: ref;
  var $i32: i8;
  var $i33: i32;
  var $i30: i32;
  var $i34: i1;
  var $i35: i8;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i41: i32;
  var $i45: i1;
  var $i46: i8;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $p53: ref;
  var $i54: i8;
  var $i55: i32;
  var $i52: i32;
  var $i56: i1;
  var $i57: i32;
  var $i58: i32;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i32;
  var $i64: i1;
  var $i65: i32;
  var $i66: i1;
  var $i67: i8;
  var $i68: i32;
  var $i69: i32;
  var $i70: i1;
  var $i71: i8;
  var $i72: i1;
  var $i74: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i1;
  var $i78: i8;
  var $i79: i1;
  var $i73: i8;
  var $i80: i32;
  var $i81: i32;
  var $i82: i8;
  var $i83: i8;
  var $i84: i8;
  var $i85: i8;
  var $i86: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4712, 13} true;
  assume {:verifier.code 1} true;
  call {:cexpr "PptSend1284_3Command:arg:Command"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4712, 13} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_char();
  call {:cexpr "smack:ext:__VERIFIER_nondet_char"} boogie_si_record_i8($i2);
  call {:cexpr "i"} boogie_si_record_i8($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4736, 36} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4736, 45} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4737, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4738, 34} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p5, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4739, 28} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4739, 41} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4739:41: warning: over-approximating bitwise operation and; */
  $i9 := $and.i32($i8, 248);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4739, 12} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  call {:cexpr "test"} boogie_si_record_i8($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4741, 15} true;
  assume {:verifier.code 0} true;
  call $i11 := READ_PORT_UCHAR($p7);
  call {:cexpr "value"} boogie_si_record_i8($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4742, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4742, 46} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4742:46: warning: over-approximating bitwise operation and; */
  $i13 := $and.i32($i12, 4294967287);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4742, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4742:52: warning: over-approximating bitwise operation or; */
  $i14 := $or.i32($i13, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4742, 18} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i8($i14);
  call {:cexpr "newvalue"} boogie_si_record_i8($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4743, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4743, 48} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4743:48: warning: over-approximating bitwise operation and; */
  $i17 := $and.i32($i16, 4294967263);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4743, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i17);
  call {:cexpr "newvalue"} boogie_si_record_i8($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4744, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4745, 56} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4745, 70} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4745:70: warning: over-approximating bitwise operation and; */
  $i20 := $and.i32($i19, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4745, 40} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4745, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4746, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4747, 37} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4747, 37} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref($i22, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4747, 37} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i8($M.32, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4747, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4748, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4749, 46} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4749, 18} true;
  assume {:verifier.code 0} true;
  call $i26 := READ_PORT_UCHAR($p25);
  call {:cexpr "tmp___15"} boogie_si_record_i8($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4751, 10} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i32($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4751, 24} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4751:24: warning: over-approximating bitwise operation and; */
  $i28 := $and.i32($i27, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4751, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4751, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4753, 5} true;
  assume {:verifier.code 0} true;
  $i30 := 1;
  goto $bb3;
$bb2:
  assume !(($i29 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4755, 42} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4755, 20} true;
  assume {:verifier.code 0} true;
  call $i32 := CheckPort($p31, $sub.i8(0, 72), $sub.i8(0, 72), 5);
  call {:cexpr "tmp___14"} boogie_si_record_i8($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4756, 20} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  call {:cexpr "tmp___13"} boogie_si_record_i32($i33);
  assume {:verifier.code 0} true;
  $i30 := $i33;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4759, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i30, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4759, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i34 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4761, 39} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(4, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4761, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4762, 9} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4763, 48} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4763, 20} true;
  assume {:verifier.code 0} true;
  call $i37 := READ_PORT_UCHAR($p36);
  call {:cexpr "tmp___10"} boogie_si_record_i8($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4765, 12} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4765, 26} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4765:26: warning: over-approximating bitwise operation and; */
  $i39 := $and.i32($i38, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4765, 33} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i39, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4765, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i86 := 0;
  goto $bb44;
$bb6:
  assume ($i40 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4767, 7} true;
  assume {:verifier.code 0} true;
  $i41 := 1;
  goto $bb8;
$bb7:
  assume !(($i40 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4769, 43} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4769, 21} true;
  assume {:verifier.code 0} true;
  call $i43 := CheckPort($p42, $sub.i8(0, 72), 24, 5);
  call {:cexpr "tmp___9"} boogie_si_record_i8($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4770, 21} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  call {:cexpr "tmp___8"} boogie_si_record_i32($i44);
  assume {:verifier.code 0} true;
  $i41 := $i44;
  goto $bb8;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4773, 11} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i41, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4773, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i45 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4775, 41} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(5, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4775, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4776, 11} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4777, 49} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4777, 21} true;
  assume {:verifier.code 0} true;
  call $i48 := READ_PORT_UCHAR($p47);
  call {:cexpr "tmp___5"} boogie_si_record_i8($i48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4779, 14} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4779, 27} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4779:27: warning: over-approximating bitwise operation and; */
  $i50 := $and.i32($i49, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4779, 33} true;
  assume {:verifier.code 0} true;
  $i51 := $eq.i32($i50, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4779, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  $i85 := 0;
  goto $bb43;
$bb11:
  assume ($i51 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4781, 9} true;
  assume {:verifier.code 0} true;
  $i52 := 1;
  goto $bb13;
$bb12:
  assume !(($i51 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4783, 45} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4783, 23} true;
  assume {:verifier.code 0} true;
  call $i54 := CheckPort($p53, 48, 48, 5);
  call {:cexpr "tmp___4"} boogie_si_record_i8($i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4784, 23} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i32($i54);
  call {:cexpr "tmp___3"} boogie_si_record_i32($i55);
  assume {:verifier.code 0} true;
  $i52 := $i55;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4787, 13} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i32($i52, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4787, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i56 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4789, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4790, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4791, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4793, 46} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4793, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4793:60: warning: over-approximating bitwise operation and; */
  $i58 := $and.i32($i57, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4793, 30} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4792, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4795, 46} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4795, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4795:60: warning: over-approximating bitwise operation or; */
  $i61 := $or.i32($i60, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4795, 30} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i8($i61);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4794, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4796, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4798, 15} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4798, 20} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i32($i63, 224);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4798, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  $i84 := 0;
  goto $bb42;
$bb16:
  assume ($i64 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4799, 13} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i64 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4801, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i8.i32($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4801, 22} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i65, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4801, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb19, $bb20;
$bb18:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4808, 30} true;
  assume {:verifier.code 0} true;
  call $i67 := READ_PORT_UCHAR($p6);
  call {:cexpr "tmp"} boogie_si_record_i8($i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4809, 24} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4809, 33} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4809:33: warning: over-approximating bitwise operation and; */
  $i69 := $and.i32($i68, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4809, 38} true;
  assume {:verifier.code 0} true;
  $i70 := $eq.i32($i69, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4809, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb26, $bb27;
$bb19:
  assume ($i66 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4802, 15} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i66 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4805, 17} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4822, 29} true;
  assume {:verifier.code 0} true;
  call $i74 := READ_PORT_UCHAR($p6);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i74);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4824, 24} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i74);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4824, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4824:37: warning: over-approximating bitwise operation and; */
  $i76 := $and.i32($i75, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4824, 42} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4824, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb33, $bb34;
$bb22:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4837, 21} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4840, 19} true;
  assume {:verifier.code 0} true;
  $i73 := 1;
  goto $bb32;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4806, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb24, $bb25;
$bb24:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4806, 24} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb25:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4841, 24} true;
  assume {:verifier.code 0} true;
  $i73 := $u1;
  goto $bb32;
$bb26:
  assume ($i70 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4812, 19} true;
  assume {:verifier.code 0} true;
  $i71 := 1;
  goto $bb28;
$bb27:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  $i71 := 0;
  goto $bb28;
$bb28:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4814, 24} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i8($i71, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4814, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i72 == 1);
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i72 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4817, 19} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4819, 19} true;
  assume {:verifier.code 0} true;
  $i73 := $i71;
  goto $bb32;
$bb32:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb33:
  assume ($i77 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4827, 19} true;
  assume {:verifier.code 0} true;
  $i78 := 1;
  goto $bb35;
$bb34:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  $i78 := 0;
  goto $bb35;
$bb35:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4829, 24} true;
  assume {:verifier.code 0} true;
  $i79 := $ne.i8($i78, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4829, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i79 == 1);
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i79 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4832, 19} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4834, 19} true;
  assume {:verifier.code 0} true;
  $i73 := $i78;
  goto $bb32;
$bb39:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4849, 46} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i32($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4849, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4849:60: warning: over-approximating bitwise operation and; */
  $i81 := $and.i32($i80, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4849, 30} true;
  assume {:verifier.code 0} true;
  $i82 := $trunc.i32.i8($i81);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4848, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i82);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4850, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4851, 43} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(6, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4851, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i83);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4853, 9} true;
  assume {:verifier.code 0} true;
  $i84 := $i73;
  goto $bb42;
$bb42:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4855, 7} true;
  assume {:verifier.code 0} true;
  $i85 := $i84;
  goto $bb43;
$bb43:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4857, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $i85;
  goto $bb44;
$bb44:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4859, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4860, 5} true;
  assume {:verifier.code 0} true;
  $r := $i86;
  $exn := false;
  return;
}
const KeStallExecutionProcessor: ref;
axiom (KeStallExecutionProcessor == $sub.ref(0, 102152));
procedure {:inline 1} KeStallExecutionProcessor($i0: i64);
const READ_PORT_UCHAR: ref;
axiom (READ_PORT_UCHAR == $sub.ref(0, 103184));
procedure {:inline 1} READ_PORT_UCHAR($p0: ref)
  returns ($r: i8);
const WRITE_PORT_UCHAR: ref;
axiom (WRITE_PORT_UCHAR == $sub.ref(0, 104216));
procedure {:inline 1} WRITE_PORT_UCHAR($p0: ref, $i1: i8);
const CheckPort: ref;
axiom (CheckPort == $sub.ref(0, 105248));
procedure {:inline 1} CheckPort($p0: ref, $i1: i8, $i2: i8, $i3: i16)
  returns ($r: i8)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $i13: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8842, 13} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  call {:cexpr "CheckPort:arg:bMask"} boogie_si_record_i8($i1);
  call {:cexpr "CheckPort:arg:bValue"} boogie_si_record_i8($i2);
  call {:cexpr "CheckPort:arg:usTimeDelay"} boogie_si_record_i16($i3);
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8842, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := READ_PORT_UCHAR($p0);
  call {:cexpr "dsr"} boogie_si_record_i8($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8843, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8843, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8843, 19} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:8843:19: warning: over-approximating bitwise operation and; */
  $i10 := $and.i32($i8, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8843, 36} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8843, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i10, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8843, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8844, 7} true;
  assume {:verifier.code 0} true;
  $i13 := 1;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8875, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8848, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := KeQueryTimeIncrement();
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8849, 32} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8849, 49} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i32($i15, 10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8849, 55} true;
  assume {:verifier.code 0} true;
  $i17 := $mul.i32($i16, 10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8849, 23} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8849, 61} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, $i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8849, 12} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8849, 21} true;
  assume {:verifier.code 0} true;
  $M.33 := $store.i64($M.33, $p20, $i19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8850, 7} true;
  assume {:verifier.code 0} true;
  call KeQueryTickCount($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8853, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8853, 17} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8856, 11} true;
  assume {:verifier.code 0} true;
  call KeQueryTickCount($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8857, 17} true;
  assume {:verifier.code 0} true;
  call $i21 := READ_PORT_UCHAR($p0);
  call {:cexpr "dsr"} boogie_si_record_i8($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8859, 14} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8859, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8859, 23} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:8859:23: warning: over-approximating bitwise operation and; */
  $i24 := $and.i32($i22, $i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8859, 40} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8859, 37} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i24, $i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8859, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i26 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8860, 11} true;
  assume {:verifier.code 0} true;
  $i13 := 1;
  goto $bb3;
$bb8:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8863, 21} true;
  assume {:verifier.code 0} true;
  call $i27 := KeQueryTimeIncrement();
  call {:cexpr "tmp___0"} boogie_si_record_i64($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 18} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 18} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i64($M.34, $p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 35} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i64($M.35, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 27} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i64($i29, $i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 45} true;
  assume {:verifier.code 0} true;
  $i33 := $mul.i64($i32, $i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8865, 18} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8865, 18} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.33, $p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 65} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i64($i33, $i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8864, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8866, 11} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8873, 5} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb3;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8853, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb14:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8871, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
}
const KeQueryTimeIncrement: ref;
axiom (KeQueryTimeIncrement == $sub.ref(0, 106280));
procedure {:inline 1} KeQueryTimeIncrement()
  returns ($r: i64);
const KeQueryTickCount: ref;
axiom (KeQueryTickCount == $sub.ref(0, 107312));
procedure {:inline 1} KeQueryTickCount($p0: ref);
const PptLegacyZipClockPrtModeByte: ref;
axiom (PptLegacyZipClockPrtModeByte == $sub.ref(0, 108344));
procedure {:inline 1} PptLegacyZipClockPrtModeByte($p0: ref, $i1: i8)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7954, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptLegacyZipClockPrtModeByte:arg:ModeByte"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7954, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p0, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7955, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7955, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p2, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7956, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7956, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p3, 14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7957, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7957, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7958, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7958, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7959, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7959, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7961, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptTrySelectLegacyZip: ref;
axiom (PptTrySelectLegacyZip == $sub.ref(0, 109376));
procedure {:inline 1} PptTrySelectLegacyZip($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i8;
  var $p22: ref;
  var $i23: i8;
  var $p24: ref;
  var $i25: i64;
  var $i26: i1;
  var $i27: i64;
  var $i28: i64;
  var $i29: i1;
  var $i30: i1;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $i34: i1;
  var $i35: i8;
  var $i36: i1;
  var $p37: ref;
  var $i38: i8;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $i44: i1;
  var $p45: ref;
  var $i46: i8;
  var $i47: i1;
  var $p48: ref;
  var $i50: i64;
  var $i49: i64;
  var $i51: i64;
  var $i52: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8008, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8008, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8009, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8011, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p7 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8011, 38} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8013, 20} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8013, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8013, 33} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:8013:33: warning: over-approximating bitwise operation and; */
  $i11 := $and.i64($i10, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8013, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8013, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:verifier.code 0} true;
  $i28 := 0;
  goto $bb9;
$bb2:
  assume !(($i12 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8015, 9} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8016, 41} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8016, 21} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8016, 27} true;
  assume {:verifier.code 0} true;
  $M.9 := $store.ref($M.9, $p14, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8018, 22} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8018, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8018, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i16, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8018, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i17 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8020, 45} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8020, 45} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8021, 61} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8020, 11} true;
  assume {:verifier.code 0} true;
  call $i21 := KeSynchronizeExecution($p19, PptSynchronizedIncrement, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8023, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i17 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8024, 36} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8024, 11} true;
  assume {:verifier.code 0} true;
  call $i23 := PptSynchronizedIncrement($p22);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8026, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8026, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i64($M.10, $p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8026, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i64($i25, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8026, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i26 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8028, 7} true;
  assume {:verifier.code 0} true;
  $i27 := 259;
  goto $bb8;
$bb7:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb8;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8032, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i27;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8034, 16} true;
  assume {:verifier.code 0} true;
  $i29 := $sge.i64($i28, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8034, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8035, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i28, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8035, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  $i52 := $i28;
  goto $bb30;
$bb12:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8036, 22} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8036, 22} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.0, $p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8036, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:8036:35: warning: over-approximating bitwise operation and; */
  $i33 := $and.i64($i32, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8036, 35} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i33, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8036, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  $i51 := $i28;
  goto $bb29;
$bb14:
  assume ($i34 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8038, 13} true;
  assume {:verifier.code 0} true;
  call PptLegacyZipSetDiskMode($p8, $sub.i8(0, 49));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8040, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i34 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8041, 13} true;
  assume {:verifier.code 0} true;
  call PptLegacyZipSetDiskMode($p8, $sub.i8(0, 113));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8043, 17} true;
  assume {:verifier.code 0} true;
  call $i35 := PptLegacyZipCheckDevice($p8);
  call {:cexpr "tmp"} boogie_si_record_i8($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8044, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i8($i35, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8044, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8047, 27} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(856, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8047, 27} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i8($M.0, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8047, 16} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i8($i38, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8047, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i36 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8062, 13} true;
  assume {:verifier.code 0} true;
  call $i50 := PptDeselectLegacyZip($p0, $p1);
  assume {:verifier.code 0} true;
  $i49 := $sub.i64(0, 1073741823);
  goto $bb28;
$bb19:
  assume ($i39 == 1);
  assume {:verifier.code 0} true;
  goto $bb27;
$bb20:
  assume !(($i39 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8048, 28} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p41 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8048, 36} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i64($M.0, $p41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8048, 57} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:8048:57: warning: over-approximating bitwise operation and; */
  $i43 := $and.i64($i42, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8048, 57} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i64($i43, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8048, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i44 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8049, 31} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(498, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8049, 31} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8049, 20} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i8($i46, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8049, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb23, $bb24;
$bb22:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb23:
  assume ($i47 == 1);
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i47 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8051, 19} true;
  assume {:verifier.code 0} true;
  call PptDetectEppPort($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8053, 15} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8055, 13} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8057, 24} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(856, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8057, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p48, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8058, 11} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8060, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $i28;
  goto $bb28;
$bb28:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8066, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $i49;
  goto $bb29;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8010, 12} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8068, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $i51;
  goto $bb30;
$bb30:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8010, 12} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8070, 5} true;
  assume {:verifier.code 0} true;
  $r := $i52;
  $exn := false;
  return;
}
const PptSynchronizedIncrement: ref;
axiom (PptSynchronizedIncrement == $sub.ref(0, 110408));
procedure {:inline 1} PptSynchronizedIncrement($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8477, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8477, 8} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8477, 60} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8477, 60} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.9, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8477, 67} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8477, 67} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8477, 67} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p3, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8479, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8479, 64} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8479, 64} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.9, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8479, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8478, 6} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8478, 58} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p10, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8478, 67} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.i64($M.10, $p11, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8480, 5} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $exn := false;
  return;
}
const KeSynchronizeExecution: ref;
axiom (KeSynchronizeExecution == $sub.ref(0, 111440));
procedure {:inline 1} KeSynchronizeExecution($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i8);
const PptLegacyZipSetDiskMode: ref;
axiom (PptLegacyZipSetDiskMode == $sub.ref(0, 112472));
procedure {:inline 1} PptLegacyZipSetDiskMode($p0: ref, $i1: i8)
{
  var $i2: i64;
  var $p3: ref;
  var $i4: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7965, 13} true;
  assume {:verifier.code 1} true;
  call {:cexpr "PptLegacyZipSetDiskMode:arg:Mode"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7965, 13} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_long"} boogie_si_record_i64($i2);
  call {:cexpr "i"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7969, 49} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref(LegacyZipModeQualifier___11, $mul.ref(0, 3)), $mul.ref($i2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7969, 49} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.31, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7969, 7} true;
  assume {:verifier.code 0} true;
  call PptLegacyZipClockDiskModeByte($p0, $i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7970, 7} true;
  assume {:verifier.code 0} true;
  call PptLegacyZipClockDiskModeByte($p0, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7972, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptLegacyZipCheckDevice: ref;
axiom (PptLegacyZipCheckDevice == $sub.ref(0, 113504));
procedure {:inline 1} PptLegacyZipCheckDevice($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i13: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7981, 35} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7981, 35} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7981, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p1, 6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7982, 44} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7982, 17} true;
  assume {:verifier.code 0} true;
  call $i3 := READ_PORT_UCHAR($p2);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7984, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7984, 23} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7984:23: warning: over-approximating bitwise operation and; */
  $i5 := $and.i32($i4, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7984, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7984, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7986, 37} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7986, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7987, 42} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7987, 15} true;
  assume {:verifier.code 0} true;
  call $i9 := READ_PORT_UCHAR($p8);
  call {:cexpr "tmp"} boogie_si_record_i8($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7989, 12} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7989, 21} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7989:21: warning: over-approximating bitwise operation and; */
  $i11 := $and.i32($i10, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7989, 26} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7989, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i12 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7990, 9} true;
  assume {:verifier.code 0} true;
  $i13 := 1;
  goto $bb5;
$bb4:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7997, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7993, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7995, 5} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb5;
}
const PptDetectEppPort: ref;
axiom (PptDetectEppPort == $sub.ref(0, 114536));
procedure {:inline 1} PptDetectEppPort($p0: ref)
{
  var $i1: i8;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $i30: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5204, 13} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5204, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_char();
  call {:cexpr "smack:ext:__VERIFIER_nondet_char"} boogie_si_record_i8($i1);
  call {:cexpr "i"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5217, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5217, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5218, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5218, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := READ_PORT_UCHAR($p5);
  call {:cexpr "dcr"} boogie_si_record_i8($i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5219, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p8 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5219, 47} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5219, 47} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5219:47: warning: over-approximating bitwise operation or; */
  $i10 := $or.i64($i9, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5219, 47} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p8, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5222, 7} true;
  assume {:verifier.code 0} true;
  call $i11 := PptEcrSetMode($p0, $sub.i8(0, 108));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5223, 35} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5223, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p12, 38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5224, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5225, 35} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5225, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p13, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5226, 35} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p4, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5226, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p14, 6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5227, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5228, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := READ_PORT_UCHAR($p4);
  call {:cexpr "tmp"} boogie_si_record_i8($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5230, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5230, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5230, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i16, $i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5230, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5231, 18} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p20 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5231, 47} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5231, 47} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5231:47: warning: over-approximating bitwise operation and; */
  $i22 := $and.i64($i21, 4294967293);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5231, 47} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p20, $i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5232, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5235, 7} true;
  assume {:verifier.code 0} true;
  call $i23 := PptEcrClearMode($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5236, 35} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p4, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5236, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p24, $i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5237, 18} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(856, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5237, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p25, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5239, 20} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p27 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5239, 28} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5239, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5239:49: warning: over-approximating bitwise operation and; */
  $i29 := $and.i64($i28, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5239, 49} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i29, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5239, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5242, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5245, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptEcrSetMode: ref;
axiom (PptEcrSetMode == $sub.ref(0, 115568));
procedure {:inline 1} PptEcrSetMode($p0: ref, $i1: i8)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $i11: i32;
  var $i12: i32;
  var $i13: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5512, 27} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptEcrSetMode:arg:ChipMode"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5512, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5512, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5512, 49} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5514, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := READ_PORT_UCHAR($p5);
  call {:cexpr "ecr"} boogie_si_record_i8($i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5515, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(500, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5515, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, $i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5516, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5516, 22} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5516:22: warning: over-approximating bitwise operation and; */
  $i9 := $and.i32($i8, 31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5516, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  call {:cexpr "ecr"} boogie_si_record_i8($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5517, 50} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5517, 59} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5517:59: warning: over-approximating bitwise operation or; */
  $i12 := $or.i32($i11, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5517, 34} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5517, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5518, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5521, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const PptEcrClearMode: ref;
axiom (PptEcrClearMode == $sub.ref(0, 116600));
procedure {:inline 1} PptEcrClearMode($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $i2: i8;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5589, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5589, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(500, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5589, 24} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  call {:cexpr "ecr"} boogie_si_record_i8($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5590, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(500, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5590, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5591, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p5 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5591, 37} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5591, 51} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5592, 50} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5592, 59} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5592:59: warning: over-approximating bitwise operation and; */
  $i9 := $and.i32($i8, 31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5592, 34} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5592, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5593, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5595, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const PptLegacyZipClockDiskModeByte: ref;
axiom (PptLegacyZipClockDiskModeByte == $sub.ref(0, 117632));
procedure {:inline 1} PptLegacyZipClockDiskModeByte($p0: ref, $i1: i8)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7941, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptLegacyZipClockDiskModeByte:arg:ModeByte"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7941, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p0, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7942, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p2, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7943, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7943, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p3, 6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7944, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7944, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7945, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7945, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7947, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptClearByteMode: ref;
axiom (PptClearByteMode == $sub.ref(0, 118664));
procedure {:inline 1} PptClearByteMode($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $i5: i1;
  var $i6: i64;
  var $i7: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5543, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5543, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5543, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5543, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5543:49: warning: over-approximating bitwise operation and; */
  $i4 := $and.i64($i3, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5543, 49} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5543, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5545, 18} true;
  assume {:verifier.code 0} true;
  call $i6 := PptEcrClearMode($p0);
  call {:cexpr "Status"} boogie_si_record_i64($i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5547, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5549, 5} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const PptSetByteMode: ref;
axiom (PptSetByteMode == $sub.ref(0, 119696));
procedure {:inline 1} PptSetByteMode($p0: ref, $i1: i8)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $i7: i64;
  var $i8: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5528, 20} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptSetByteMode:arg:ChipMode"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5528, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5528, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5528, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5528:49: warning: over-approximating bitwise operation and; */
  $i5 := $and.i64($i4, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5528, 49} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5528, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5530, 18} true;
  assume {:verifier.code 0} true;
  call $i7 := PptEcrSetMode($p0, $i1);
  call {:cexpr "Status"} boogie_si_record_i64($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5532, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5534, 16} true;
  assume {:verifier.code 0} true;
  call $i8 := PptCheckByteMode($p0);
  call {:cexpr "Status"} boogie_si_record_i64($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5535, 5} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const PptCheckByteMode: ref;
axiom (PptCheckByteMode == $sub.ref(0, 120728));
procedure {:inline 1} PptCheckByteMode($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i8;
  var $i10: i8;
  var $i11: i32;
  var $i12: i1;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $p17: ref;
  var $i16: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5560, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5560, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5560, 40} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5561, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5561, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := READ_PORT_UCHAR($p4);
  call {:cexpr "dcr"} boogie_si_record_i8($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5562, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5562, 56} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5562, 65} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5562:65: warning: over-approximating bitwise operation or; */
  $i8 := $or.i32($i7, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5562, 40} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5562, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5563, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p3, 85);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5564, 17} true;
  assume {:verifier.code 0} true;
  call $i10 := READ_PORT_UCHAR($p3);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5566, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5566, 22} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 85);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5566, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5568, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p3, $sub.i8(0, 86));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5569, 15} true;
  assume {:verifier.code 0} true;
  call $i13 := READ_PORT_UCHAR($p3);
  call {:cexpr "tmp"} boogie_si_record_i8($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5571, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5571, 20} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 170);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5571, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i15 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5572, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $sub.i64(0, 1073741823);
  goto $bb5;
$bb4:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5580, 1} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5575, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5577, 35} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p3, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5577, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p17, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5578, 5} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb5;
}
const PptTryAllocatePortAtInterruptLevel: ref;
axiom (PptTryAllocatePortAtInterruptLevel == $sub.ref(0, 121760));
procedure {:inline 1} PptTryAllocatePortAtInterruptLevel($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $i12: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8607, 10} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8607, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8607, 48} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8607, 48} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.36, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8607, 63} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, $sub.i64(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8607, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8608, 8} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8608, 46} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8608, 61} true;
  assume {:verifier.code 0} true;
  $M.36 := $store.i64($M.36, $p6, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8609, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8610, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(840, 1));
  $p9 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(840, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8610, 50} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.37, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8610, 50} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8610, 50} true;
  assume {:verifier.code 0} true;
  $M.37 := $store.i64($M.37, $p9, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8611, 7} true;
  assume {:verifier.code 0} true;
  $i12 := 1;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8613, 7} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8616, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const PptSynchronizedDecrement: ref;
axiom (PptSynchronizedDecrement == $sub.ref(0, 122792));
procedure {:inline 1} PptSynchronizedDecrement($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8486, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8486, 8} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8486, 60} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8486, 60} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.27, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8486, 67} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8486, 67} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64($i4, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8486, 67} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p3, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8488, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8488, 64} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8488, 64} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.27, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8488, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8487, 6} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8487, 58} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p10, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8487, 67} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.i64($M.28, $p11, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8489, 5} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $exn := false;
  return;
}
const PptTraversePortCheckList: ref;
axiom (PptTraversePortCheckList == $sub.ref(0, 123824));
procedure {:inline 1} PptTraversePortCheckList($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i5: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8698, 23} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8698, 23} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8699, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8699, 26} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.38, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8699, 41} true;
  assume {:verifier.code 0} true;
  $i4 := $sge.i64($i3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8699, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8700, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8728, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8703, 32} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 872)), $mul.ref(400, 1));
  $p7 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 872)), $mul.ref(400, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8703, 40} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.39, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8705, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  goto $bb5;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8705, 17} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8707, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i32($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8708, 46} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1, $mul.ref(0, 872)), $mul.ref(400, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8708, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i32($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8707, 35} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i10, $i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8707, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8710, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i13 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8711, 11} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8713, 41} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8713, 57} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8713, 22} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8716, 25} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p16, $mul.ref(0, 48)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8716, 25} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.40, $p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8716, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.ref($p18, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8716, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb11, $bb12;
$bb10:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8726, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb3;
$bb11:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8718, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p16, $mul.ref(0, 48)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8718, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.40, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8718, 67} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p16, $mul.ref(0, 48)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8718, 67} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.41, $p22);
  call devirtbounce.1($p21, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8720, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8722, 28} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p9, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8722, 28} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.42, $p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8705, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $p25;
  goto $bb5;
}
const WmiSystemControl: ref;
axiom (WmiSystemControl == $sub.ref(0, 124856));
procedure {:inline 1} WmiSystemControl($p0: ref, $p1: ref, $p2: ref, $p3: ref)
  returns ($r: i64)
{
  var $i4: i32;
  var $i5: i1;
  var $i6: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10567, 24} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10567, 24} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10570, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10570, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10571, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10574, 9} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10577, 11} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb8;
$bb4:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10579, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i64(0, 1073741823);
  goto $bb8;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10575, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb6, $bb7;
$bb6:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10575, 16} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10580, 16} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10586, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb9:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  $i6 := $u0;
  goto $bb8;
}
const IofCallDriver: ref;
axiom (IofCallDriver == $sub.ref(0, 125888));
procedure {:inline 1} IofCallDriver($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i64;
  var $i10: i32;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $i11: i32;
  var $i18: i64;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i64;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9994, 24} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9994, 24} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9997, 20} true;
  assume {:verifier.code 1} true;
  call $p3 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10002, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $M.18;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10002, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10002, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10003, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $M.20;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10003, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10003, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10005, 62} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10005, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := PptSynchCompletionRoutine($p0, $p1, $p8);
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10006, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i64.i32($i9);
  call {:cexpr "compRetStatus"} boogie_si_record_i32($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10008, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i10;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10009, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $M.20;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10009, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10009, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10017, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10017, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i64($i18, $sub.i64(0, 1073741802));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10017, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb9, $bb10;
$bb6:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10011, 59} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10011, 23} true;
  assume {:verifier.code 0} true;
  call $i15 := PptPowerComplete($p0, $p1, $p14);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10012, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  call {:cexpr "compRetStatus"} boogie_si_record_i32($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10014, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $i16;
  goto $bb8;
$bb7:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i17 := $u2;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i11 := $i17;
  goto $bb5;
$bb9:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10019, 11} true;
  assume {:verifier.code 0} true;
  call stubMoreProcessingRequired();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10021, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10023, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10025, 24} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10025, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10026, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i20 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10028, 26} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i2, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10028, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb16, $bb17;
$bb15:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10036, 13} true;
  assume {:verifier.code 0} true;
  $i22 := 0;
  goto $bb23;
$bb16:
  assume ($i21 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10029, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i21 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10032, 11} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10039, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $sub.i64(0, 1073741823);
  goto $bb23;
$bb19:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10042, 13} true;
  assume {:verifier.code 0} true;
  $i22 := 259;
  goto $bb23;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10033, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb21, $bb22;
$bb21:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10033, 18} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb22:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10043, 18} true;
  assume {:verifier.code 0} true;
  $i22 := $u0;
  goto $bb23;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10049, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10049, 14} true;
  assume {:verifier.code 0} true;
  $i24 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10049, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i23, $i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10049, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10050, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $M.43;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10050, 9} true;
  assume {:verifier.code 0} true;
  $M.2 := $i26;
  call {:cexpr "s"} boogie_si_record_i32($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10051, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10051, 25} true;
  assume {:verifier.code 0} true;
  $M.44 := $i27;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10052, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i25 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10053, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10053, 16} true;
  assume {:verifier.code 0} true;
  $i29 := $M.45;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10053, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i28, $i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10053, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb30, $bb31;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10070, 5} true;
  assume {:verifier.code 0} true;
  $r := $i22;
  $exn := false;
  return;
$bb30:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10054, 24} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i64($i22, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10054, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i30 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10062, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10062, 18} true;
  assume {:verifier.code 0} true;
  $i37 := $M.22;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10062, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i36, $i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10062, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb36, $bb37;
$bb32:
  assume ($i31 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10055, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $M.46;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10055, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $i32;
  call {:cexpr "s"} boogie_si_record_i32($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10056, 31} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10056, 29} true;
  assume {:verifier.code 0} true;
  $M.44 := $i33;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10057, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i31 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10058, 15} true;
  assume {:verifier.code 0} true;
  $i34 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10058, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $i34;
  call {:cexpr "s"} boogie_si_record_i32($i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10059, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10059, 29} true;
  assume {:verifier.code 0} true;
  $M.44 := $i35;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i35);
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10061, 7} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb36:
  assume ($i38 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10063, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $M.47;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10063, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $i39;
  call {:cexpr "s"} boogie_si_record_i32($i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10064, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10064, 29} true;
  assume {:verifier.code 0} true;
  $M.44 := $i40;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i38 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10066, 13} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  goto $bb35;
}
const PptSynchCompletionRoutine: ref;
axiom (PptSynchCompletionRoutine == $sub.ref(0, 126920));
procedure {:inline 1} PptSynchCompletionRoutine($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $i3: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8330, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8330, 7} true;
  assume {:verifier.code 0} true;
  call $i3 := KeSetEvent($p2, 0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8331, 5} true;
  assume {:verifier.code 0} true;
  $r := $sub.i64(0, 1073741802);
  $exn := false;
  return;
}
const PptPowerComplete: ref;
axiom (PptPowerComplete == $sub.ref(0, 127952));
procedure {:inline 1} PptPowerComplete($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $i60: i32;
  var $i61: i1;
  var $p62: ref;
  var $i63: i32;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $i70: i64;
  var $p71: ref;
  var $i72: i32;
  var $p73: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7639, 23} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7639, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7639, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7639, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p8 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7640, 22} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7640, 22} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7641, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p10, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7641, 39} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7641, 45} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p12, $mul.ref(0, 20)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7641, 45} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  call {:cexpr "powerType"} boogie_si_record_i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7642, 29} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p10, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7642, 40} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7642, 46} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p16, $mul.ref(0, 20)), $mul.ref(12, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7642, 46} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7642, 46} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7642, 46} true;
  assume {:verifier.code 0} true;
  call $M.48 := $memcpy.i8($M.48, $M.0, $p18, $p19, 4, false);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7643, 20} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p10, $mul.ref(0, 68)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7643, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7643, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7643, 34} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7643, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7644, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i23 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7646, 22} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p10, $mul.ref(0, 68)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7646, 22} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7646, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7646, 36} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7646, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7653, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7647, 9} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i27 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7650, 11} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7656, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i14, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7656, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb12, $bb13;
$bb7:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7711, 11} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7651, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb9, $bb10;
$bb9:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7651, 18} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb10:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7711, 18} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb12:
  assume ($i28 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7657, 15} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i28 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7659, 29} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7659, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb15, $bb16;
$bb14:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7664, 39} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7664, 39} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7665, 39} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7665, 39} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.48, $p32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7664, 51} true;
  assume {:verifier.code 0} true;
  $i34 := $slt.i32($i31, $i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7664, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb20, $bb21;
$bb15:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7660, 17} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i29 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7662, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb18, $bb19;
$bb17:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7684, 39} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(596, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7684, 39} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7685, 39} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7685, 39} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.48, $p54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7684, 51} true;
  assume {:verifier.code 0} true;
  $i56 := $slt.i32($i53, $i55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7684, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb30, $bb31;
$bb18:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7662, 24} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb19:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7704, 24} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb20:
  assume ($i34 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7667, 19} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i34 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7668, 41} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7668, 41} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.48, $p35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7669, 41} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7669, 41} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7668, 53} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i36, $i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7668, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb23, $bb24;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7682, 19} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb23:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7671, 52} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7671, 52} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7671, 25} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p3, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7671, 25} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.48, $p42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7671, 25} true;
  assume {:verifier.code 0} true;
  call $i44 := PoSetPowerState($p41, $i14, $i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7671, 25} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p4, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7671, 25} true;
  assume {:verifier.code 0} true;
  $M.49 := $store.i32($M.49, $p45, $i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7674, 48} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7674, 48} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7674, 29} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i32(1, $i47);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7674, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb25:
  assume ($i48 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7676, 23} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7678, 59} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7678, 59} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.48, $p49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7678, 34} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(592, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7678, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p51, $i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7679, 21} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb29:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb30:
  assume ($i56 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7687, 19} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i56 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7688, 41} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7688, 41} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.48, $p57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7689, 41} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(596, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7689, 41} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7688, 53} true;
  assume {:verifier.code 0} true;
  $i61 := $slt.i32($i58, $i60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7688, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb33, $bb34;
$bb32:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7703, 19} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb33:
  assume ($i61 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7690, 48} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7690, 48} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.48, $p62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7690, 29} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i32(1, $i63);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7690, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb35, $bb36;
$bb34:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb35:
  assume ($i64 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7692, 38} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7692, 50} true;
  assume {:verifier.code 0} true;
  $M.48 := $store.i32($M.48, $p65, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7693, 56} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7693, 56} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7693, 27} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p3, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7693, 27} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.48, $p68);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7693, 27} true;
  assume {:verifier.code 0} true;
  call $i70 := PoRequestPowerIrp($p67, 2, $i69, $0.ref, $0.ref, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7697, 23} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7699, 59} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7699, 59} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.48, $p71);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7699, 34} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(596, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7699, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, $i72);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7700, 21} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  goto $bb32;
$bb39:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7709, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7719, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const stubMoreProcessingRequired: ref;
axiom (stubMoreProcessingRequired == $sub.ref(0, 128984));
procedure {:inline 1} stubMoreProcessingRequired()
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9984, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9984, 9} true;
  assume {:verifier.code 0} true;
  $i0 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9984, 14} true;
  assume {:verifier.code 0} true;
  $i1 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9984, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i0, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9984, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9985, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $M.45;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9985, 9} true;
  assume {:verifier.code 0} true;
  $M.2 := $i3;
  call {:cexpr "s"} boogie_si_record_i32($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9986, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9987, 9} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9989, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 130016));
procedure {:inline 1} llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i1);
const PoSetPowerState: ref;
axiom (PoSetPowerState == $sub.ref(0, 131048));
procedure {:inline 1} PoSetPowerState($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32);
const PoRequestPowerIrp: ref;
axiom (PoRequestPowerIrp == $sub.ref(0, 132080));
procedure {:inline 1} PoRequestPowerIrp($p0: ref, $i1: i8, $i2: i32, $p3: ref, $p4: ref, $p5: ref)
  returns ($r: i64);
const KeSetEvent: ref;
axiom (KeSetEvent == $sub.ref(0, 133112));
procedure {:inline 1} KeSetEvent($p0: ref, $i1: i64, $i2: i8)
  returns ($r: i64)
{
  var $i3: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10144, 12} true;
  assume {:verifier.code 1} true;
  call {:cexpr "KeSetEvent:arg:Increment"} boogie_si_record_i64($i1);
  call {:cexpr "KeSetEvent:arg:Wait"} boogie_si_record_i8($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10144, 12} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_long"} boogie_si_record_i64($i3);
  call {:cexpr "l"} boogie_si_record_i64($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10147, 20} true;
  assume {:verifier.code 0} true;
  $M.50 := 1;
  call {:cexpr "setEventCalled"} boogie_si_record_i32(1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10148, 5} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const InitNEC_98: ref;
axiom (InitNEC_98 == $sub.ref(0, 134144));
procedure {:inline 1} InitNEC_98($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7727, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7727, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7727, 40} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7728, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, $mul.ref(9, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7728, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7729, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, $mul.ref(14, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7729, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7730, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7730, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7732, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PoCallDriver: ref;
axiom (PoCallDriver == $sub.ref(0, 135176));
procedure {:inline 1} PoCallDriver($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i64;
  var $i10: i32;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $i11: i32;
  var $i18: i64;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i64;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10298, 24} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10298, 24} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10301, 20} true;
  assume {:verifier.code 1} true;
  call $p3 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10306, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $M.18;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10306, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10306, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10307, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $M.20;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10307, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10307, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10309, 62} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10309, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := PptSynchCompletionRoutine($p0, $p1, $p8);
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10310, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i64.i32($i9);
  call {:cexpr "compRetStatus"} boogie_si_record_i32($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10312, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i10;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10313, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $M.20;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10313, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10313, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10321, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10321, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i64($i18, $sub.i64(0, 1073741802));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10321, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb9, $bb10;
$bb6:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10315, 59} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10315, 23} true;
  assume {:verifier.code 0} true;
  call $i15 := PptPowerComplete($p0, $p1, $p14);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10316, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  call {:cexpr "compRetStatus"} boogie_si_record_i32($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10318, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $i16;
  goto $bb8;
$bb7:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i17 := $u2;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i11 := $i17;
  goto $bb5;
$bb9:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10323, 11} true;
  assume {:verifier.code 0} true;
  call stubMoreProcessingRequired();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10325, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10327, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10329, 24} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10329, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10330, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i20 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10332, 26} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i2, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10332, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb16, $bb17;
$bb15:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10340, 13} true;
  assume {:verifier.code 0} true;
  $i22 := 0;
  goto $bb23;
$bb16:
  assume ($i21 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10333, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i21 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10336, 11} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10343, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $sub.i64(0, 1073741823);
  goto $bb23;
$bb19:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10346, 13} true;
  assume {:verifier.code 0} true;
  $i22 := 259;
  goto $bb23;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10337, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb21, $bb22;
$bb21:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10337, 18} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb22:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10347, 18} true;
  assume {:verifier.code 0} true;
  $i22 := $u0;
  goto $bb23;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10353, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10353, 14} true;
  assume {:verifier.code 0} true;
  $i24 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10353, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i23, $i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10353, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10354, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $M.43;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10354, 9} true;
  assume {:verifier.code 0} true;
  $M.2 := $i26;
  call {:cexpr "s"} boogie_si_record_i32($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10355, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10355, 25} true;
  assume {:verifier.code 0} true;
  $M.44 := $i27;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10356, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i25 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10357, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10357, 16} true;
  assume {:verifier.code 0} true;
  $i29 := $M.45;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10357, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i28, $i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10357, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb30, $bb31;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10374, 5} true;
  assume {:verifier.code 0} true;
  $r := $i22;
  $exn := false;
  return;
$bb30:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10358, 23} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i64($i22, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10358, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i30 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10366, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10366, 18} true;
  assume {:verifier.code 0} true;
  $i37 := $M.22;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10366, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i36, $i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10366, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb36, $bb37;
$bb32:
  assume ($i31 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10359, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $M.46;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10359, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $i32;
  call {:cexpr "s"} boogie_si_record_i32($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10360, 31} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10360, 29} true;
  assume {:verifier.code 0} true;
  $M.44 := $i33;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10361, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i31 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10362, 15} true;
  assume {:verifier.code 0} true;
  $i34 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10362, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $i34;
  call {:cexpr "s"} boogie_si_record_i32($i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10363, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10363, 29} true;
  assume {:verifier.code 0} true;
  $M.44 := $i35;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i35);
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10365, 7} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb36:
  assume ($i38 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10367, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $M.47;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10367, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $i39;
  call {:cexpr "s"} boogie_si_record_i32($i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10368, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10368, 29} true;
  assume {:verifier.code 0} true;
  $M.44 := $i40;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10369, 9} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i38 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10370, 13} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  goto $bb35;
}
const PptAcquireRemoveLockOrFailIrp: ref;
axiom (PptAcquireRemoveLockOrFailIrp == $sub.ref(0, 136208));
procedure {:inline 1} PptAcquireRemoveLockOrFailIrp($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $i9: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8284, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8284, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8284, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8284, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8285, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8286, 47} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8286, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := IoAcquireRemoveLockEx($p5, $p6, .str.27, 33, 48);
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8290, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $sge.i64($i7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8290, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8292, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := PptFailRequest($p1, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8294, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8296, 5} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const PptPnpUnhandledIrp: ref;
axiom (PptPnpUnhandledIrp == $sub.ref(0, 137240));
procedure {:inline 1} PptPnpUnhandledIrp($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7599, 25} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7599, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7599, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7599, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7598, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p4, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7601, 5} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const PptPnpStartDevice: ref;
axiom (PptPnpStartDevice == $sub.ref(0, 138272));
procedure {:inline 1} PptPnpStartDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i10: i1;
  var $i12: i64;
  var $i13: i1;
  var $i14: i8;
  var $i15: i8;
  var $i16: i8;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $i31: i64;
  var $i11: i64;
  var $i32: i1;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6583, 33} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6583, 33} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6583, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6583, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6584, 17} true;
  assume {:verifier.code 0} true;
  $M.51 := $store.i8($M.51, $p2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6585, 16} true;
  assume {:verifier.code 0} true;
  $M.52 := $store.i8($M.52, $p3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6586, 16} true;
  assume {:verifier.code 0} true;
  $M.53 := $store.i8($M.53, $p4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6587, 16} true;
  assume {:verifier.code 0} true;
  call $i8 := PptPnpBounceAndCatchPnpIrp($p7, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6589, 18} true;
  assume {:verifier.code 0} true;
  $i9 := $sge.i64($i8, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6589, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb2:
  assume !(($i9 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6590, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i8, $sub.i64(0, 1073741637));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6590, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6591, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $i8;
  goto $bb5;
$bb4:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6633, 16} true;
  assume {:verifier.code 0} true;
  $i32 := $sge.i64($i11, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6633, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb23, $bb24;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6594, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6597, 16} true;
  assume {:verifier.code 0} true;
  call $i12 := PptPnpStartScanCmResourceList($p7, $p1, $p2, $p3, $p4);
  call {:cexpr "status"} boogie_si_record_i64($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6600, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $sge.i64($i12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6600, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i13 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6601, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i12;
  goto $bb5;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6605, 59} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.51, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6605, 70} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.52, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6606, 45} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.53, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6605, 16} true;
  assume {:verifier.code 0} true;
  call $i17 := PptPnpStartValidateResources($p0, $i14, $i15, $i16);
  call {:cexpr "status"} boogie_si_record_i64($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6608, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $sge.i64($i17, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6608, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i18 == 1);
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i18 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6609, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i17;
  goto $bb5;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6613, 68} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6613, 50} true;
  assume {:verifier.code 0} true;
  call $i20 := PptInitiate1284_3($p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6613, 18} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p22 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6613, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p22, $i20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6614, 16} true;
  assume {:verifier.code 0} true;
  call $i23 := PptDetectChipFilter($p7);
  call {:cexpr "status"} boogie_si_record_i64($i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6616, 18} true;
  assume {:verifier.code 0} true;
  $i24 := $sge.i64($i23, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6616, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i24 == 1);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i24 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6618, 9} true;
  assume {:verifier.code 0} true;
  call $i25 := PptDetectPortType($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6620, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6622, 16} true;
  assume {:verifier.code 0} true;
  call $i26 := PptWmiInitWmi($p0);
  call {:cexpr "status"} boogie_si_record_i64($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6623, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $sge.i64($i26, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6623, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i27 == 1);
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i27 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6624, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i26;
  goto $bb5;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6627, 54} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(576, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6627, 16} true;
  assume {:verifier.code 0} true;
  call $i29 := IoSetDeviceInterfaceState($p28, 1);
  call {:cexpr "status"} boogie_si_record_i64($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6628, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $sge.i64($i29, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6628, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  $i31 := $i29;
  goto $bb22;
$bb21:
  assume !(($i30 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6630, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i64(0, 1073741637);
  goto $bb22;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6628, 23} true;
  assume {:verifier.code 0} true;
  $i11 := $i31;
  goto $bb5;
$bb23:
  assume ($i32 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6637, 20} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6637, 37} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i64($M.0, $p33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6637, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:6637:37: warning: over-approximating bitwise operation or; */
  $i35 := $or.i64($i34, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6637, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p33, $i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6641, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6644, 12} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p37 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6644, 39} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6644, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p38, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6645, 18} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i64.i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6645, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $i39;
  call {:cexpr "myStatus"} boogie_si_record_i32($i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6646, 12} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p41 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6646, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p41, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6647, 7} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6648, 40} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6648, 52} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6648, 7} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p42, $p43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6650, 5} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const PptPnpFilterResourceRequirements: ref;
axiom (PptPnpFilterResourceRequirements == $sub.ref(0, 139304));
procedure {:inline 1} PptPnpFilterResourceRequirements($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p24: ref;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $i32: i8;
  var $i33: i1;
  var $i34: i8;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6929, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6929, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6929, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6929, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6931, 16} true;
  assume {:verifier.code 0} true;
  call $i5 := PptPnpBounceAndCatchPnpIrp($p4, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6933, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $sge.i64($i5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6933, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6934, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i5, $sub.i64(0, 1073741637));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6934, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6935, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7014, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p37 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7014, 37} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7014, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p38, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7015, 16} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i64.i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7015, 14} true;
  assume {:verifier.code 0} true;
  $M.1 := $i39;
  call {:cexpr "myStatus"} boogie_si_record_i32($i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7016, 5} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7017, 38} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7017, 50} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7017, 5} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p40, $p41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7019, 5} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6938, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6940, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p9 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6940, 23} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6940, 35} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6940, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6941, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6941, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6941, 36} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p13, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p15 := $add.ref($add.ref($add.ref($p13, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6942, 23} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6942, 23} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6943, 43} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p17, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6943, 54} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6944, 38} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p19, $mul.ref(0, 8)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6944, 38} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6945, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i32($p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6945, 49} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6945, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6951, 57} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p26 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6951, 66} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6951, 66} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:verifier.code 0} true;
  $p24 := $p28;
  goto $bb13;
$bb10:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6946, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb11:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6949, 5} true;
  assume {:verifier.code 0} true;
  $p24 := $p21;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6953, 13} true;
  assume {:verifier.code 0} true;
  call PptDebugDumpResourceRequirementsList($p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6954, 30} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i64(1, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6954, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6955, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i29 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6957, 32} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64(1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6957, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb17, $bb18;
$bb16:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6968, 23} true;
  assume {:verifier.code 0} true;
  call $i32 := PptPnpFilterExistsNonIrqResourceList($p24);
  call {:cexpr "tmp"} boogie_si_record_i8($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6971, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i8($i32, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6971, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb27, $bb28;
$bb17:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6958, 9} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i30 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6960, 34} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i64(1, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6960, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb20, $bb21;
$bb19:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6987, 27} true;
  assume {:verifier.code 0} true;
  call $i34 := PptPnpFilterExistsNonIrqResourceList($p24);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6990, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i8($i34, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6990, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb31, $bb32;
$bb20:
  assume ($i31 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6961, 11} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i31 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6964, 13} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7003, 15} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb23:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7006, 13} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb24:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6965, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb25, $bb26;
$bb25:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6965, 20} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb26:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7006, 20} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb27:
  assume ($i33 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6973, 19} true;
  assume {:verifier.code 0} true;
  call PptPnpFilterRemoveIrqResourceLists($p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6975, 15} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i33 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6977, 19} true;
  assume {:verifier.code 0} true;
  call PptPnpFilterNukeIrqResourceDescriptorsFromAllLists($p24);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6982, 17} true;
  assume {:verifier.code 0} true;
  call PptDebugDumpResourceRequirementsList($p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6984, 15} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb31:
  assume ($i35 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6992, 19} true;
  assume {:verifier.code 0} true;
  call PptPnpFilterRemoveIrqResourceLists($p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6995, 19} true;
  assume {:verifier.code 0} true;
  call PptDebugDumpResourceRequirementsList($p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6997, 15} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7000, 15} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6954, 33} true;
  assume {:verifier.code 0} true;
  goto $bb5;
}
const PptPnpQueryDeviceRelations: ref;
axiom (PptPnpQueryDeviceRelations == $sub.ref(0, 140336));
procedure {:inline 1} PptPnpQueryDeviceRelations($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7237, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7237, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7237, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7237, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7238, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7238, 23} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7238, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p8 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7239, 18} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7239, 18} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7240, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p10, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7240, 30} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7240, 51} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p12, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7240, 51} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  call {:cexpr "type"} boogie_si_record_i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7241, 14} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7241, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7242, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i15 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7244, 16} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7244, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7260, 24} true;
  assume {:verifier.code 0} true;
  call PptDumpRemovalRelationsList($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7261, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p21 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7261, 37} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7261, 23} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7261, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb20, $bb21;
$bb4:
  assume ($i16 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7245, 9} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i16 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7247, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i14, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7247, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7282, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb7:
  assume ($i17 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7248, 11} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i17 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7250, 20} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i14, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7250, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb9:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7285, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7251, 13} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i18 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7253, 22} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i14, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7253, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb13, $bb14;
$bb12:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7288, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb13:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7254, 15} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7257, 17} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7291, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb16:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7294, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb17:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7258, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb18, $bb19;
$bb18:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7258, 24} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb19:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7295, 24} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb20:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7264, 19} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i23 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7266, 42} true;
  assume {:verifier.code 0} true;
  call $p24 := PptPnpBuildRemovalRelations($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7268, 25} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.ref($p24, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7268, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb23, $bb24;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7279, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb23:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7271, 28} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p27 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7271, 55} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7271, 62} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p28, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7272, 32} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7274, 27} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7273, 28} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p31 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7273, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p31, $i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7275, 21} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb26:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7306, 25} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7306, 25} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7306, 11} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7305, 13} true;
  assume {:verifier.code 0} true;
  call $i35 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p34, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7308, 5} true;
  assume {:verifier.code 0} true;
  $r := $i35;
  $exn := false;
  return;
}
const PptPnpQueryStopDevice: ref;
axiom (PptPnpQueryStopDevice == $sub.ref(0, 141368));
procedure {:inline 1} PptPnpQueryStopDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $i11: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7319, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7319, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7319, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7319, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7321, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7321, 32} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  call {:cexpr "handlesOpen"} boogie_si_record_i64($i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7324, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $sgt.i64($i6, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7324, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7327, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := PptFailRequest($p1, $sub.i64(0, 2147483631));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7328, 42} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7328, 54} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7328, 9} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p9, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7330, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 2147483631);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7332, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p13 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7332, 41} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7332, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7333, 18} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7334, 18} true;
  assume {:verifier.code 0} true;
  call $i15 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p4, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7337, 20} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7337, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7337, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7337:37: warning: over-approximating bitwise operation or; */
  $i18 := $or.i64($i17, 65552);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7337, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p16, $i18);
  assume {:verifier.code 0} true;
  $i11 := $i15;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7342, 5} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const PptPnpCancelStopDevice: ref;
axiom (PptPnpCancelStopDevice == $sub.ref(0, 142400));
procedure {:inline 1} PptPnpCancelStopDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7351, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7351, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7351, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7351, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7354, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7354:37: warning: over-approximating bitwise operation and; */
  $i7 := $and.i64($i6, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7354, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7354, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7355, 18} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7355, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7355, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7355:35: warning: over-approximating bitwise operation and; */
  $i11 := $and.i64($i10, 4294901743);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7355, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p9, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7356, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7360, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p13 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7360, 39} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7360, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7361, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7362, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p4, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7364, 5} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
}
const PptPnpStopDevice: ref;
axiom (PptPnpStopDevice == $sub.ref(0, 143432));
procedure {:inline 1} PptPnpStopDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7373, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7373, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7373, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7373, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7375, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7375, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7375, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7375:35: warning: over-approximating bitwise operation or; */
  $i7 := $or.i64($i6, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7375, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7376, 18} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7376, 35} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7376, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7376:35: warning: over-approximating bitwise operation and; */
  $i10 := $and.i64($i9, 4294967278);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7376, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p8, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7378, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p12 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7378, 39} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7378, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7379, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7380, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p4, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7382, 5} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const PptPnpQueryRemoveDevice: ref;
axiom (PptPnpQueryRemoveDevice == $sub.ref(0, 144464));
procedure {:inline 1} PptPnpQueryRemoveDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7390, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7390, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7390, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7390, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7393, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7393, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7393, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7393:35: warning: over-approximating bitwise operation or; */
  $i7 := $or.i64($i6, 65792);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7393, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7395, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p9 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7395, 39} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7395, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p10, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7396, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7397, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p4, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7399, 5} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const PptPnpCancelRemoveDevice: ref;
axiom (PptPnpCancelRemoveDevice == $sub.ref(0, 145496));
procedure {:inline 1} PptPnpCancelRemoveDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7408, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7408, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7408, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7408, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7411, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7411, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7411, 37} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7411:37: warning: over-approximating bitwise operation and; */
  $i7 := $and.i64($i6, 256);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7411, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7411, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7412, 18} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7412, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7412, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7412:35: warning: over-approximating bitwise operation and; */
  $i11 := $and.i64($i10, 4294901503);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7412, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p9, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7413, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7417, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p13 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7417, 39} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7417, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7418, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7419, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p4, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7421, 5} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
}
const PptPnpRemoveDevice: ref;
axiom (PptPnpRemoveDevice == $sub.ref(0, 146528));
procedure {:inline 1} PptPnpRemoveDevice($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i8;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7430, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7430, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7430, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7430, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7432, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7432, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7432, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7432:35: warning: over-approximating bitwise operation or; */
  $i7 := $or.i64($i6, 512);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7432, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7434, 7} true;
  assume {:verifier.code 0} true;
  call $i8 := IoWMIRegistrationControl($p0, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7435, 45} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(576, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7435, 7} true;
  assume {:verifier.code 0} true;
  call $i10 := IoSetDeviceInterfaceState($p9, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7436, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p12 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7436, 39} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7436, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7437, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7439, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7439, 14} true;
  assume {:verifier.code 0} true;
  $i15 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7439, 11} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i14, $i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7439, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7440, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $M.22;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7440, 9} true;
  assume {:verifier.code 0} true;
  $M.2 := $i17;
  call {:cexpr "s"} boogie_si_record_i32($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7441, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i16 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7442, 9} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7445, 47} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7445, 47} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7445, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i8.i32($i19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7445, 63} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i20, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7445, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i8($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7445, 12} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7445, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p23, $i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7446, 12} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7446, 17} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7446, 25} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p25, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p27 := $add.ref($add.ref($add.ref($p25, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7447, 12} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7447, 33} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7447, 33} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, $mul.ref(1, 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7447, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7448, 41} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7448, 41} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7448, 16} true;
  assume {:verifier.code 0} true;
  call $i33 := IofCallDriver($p32, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7449, 47} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7449, 59} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7449, 7} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLockAndWait($p34, $p35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7450, 7} true;
  assume {:verifier.code 0} true;
  call PptCleanRemovalRelationsList($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7454, 20} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p37 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(144, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7454, 28} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7454, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.ref($p38, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7454, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7457, 20} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p41 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(144, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7457, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7459, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7465, 5} true;
  assume {:verifier.code 0} true;
  $r := $i33;
  $exn := false;
  return;
}
const PptPnpSurpriseRemoval: ref;
axiom (PptPnpSurpriseRemoval == $sub.ref(0, 147560));
procedure {:inline 1} PptPnpSurpriseRemoval($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7475, 33} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7475, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7475, 33} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7475, 19} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7477, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7477, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7477, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7477:35: warning: over-approximating bitwise operation or; */
  $i8 := $or.i64($i7, 4096);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7477, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p6, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7479, 7} true;
  assume {:verifier.code 0} true;
  call IoAcquireCancelSpinLock($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7481, 45} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(576, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7481, 7} true;
  assume {:verifier.code 0} true;
  call $i10 := IoSetDeviceInterfaceState($p9, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7482, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p12 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7482, 39} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7482, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7483, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7484, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p5, $p1);
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7486, 5} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const IoSetDeviceInterfaceState: ref;
axiom (IoSetDeviceInterfaceState == $sub.ref(0, 148592));
procedure {:inline 1} IoSetDeviceInterfaceState($p0: ref, $i1: i8)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9956, 24} true;
  assume {:verifier.code 1} true;
  call {:cexpr "IoSetDeviceInterfaceState:arg:Enable"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9956, 24} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9959, 24} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9959, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9960, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9963, 9} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9966, 11} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb8;
$bb4:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9968, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sub.i64(0, 1073741823);
  goto $bb8;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9964, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb6, $bb7;
$bb6:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9964, 16} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9969, 16} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9975, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb9:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  $i4 := $u0;
  goto $bb8;
}
const PptPnpPassThroughPnpIrpAndReleaseRemoveLock: ref;
axiom (PptPnpPassThroughPnpIrpAndReleaseRemoveLock == $sub.ref(0, 149624));
procedure {:inline 1} PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7578, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7578, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7578, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7578, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i2, $i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7578, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7579, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $M.22;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7579, 9} true;
  assume {:verifier.code 0} true;
  $M.2 := $i5;
  call {:cexpr "s"} boogie_si_record_i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7580, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7581, 9} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7584, 47} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7584, 47} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7584, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i8.i32($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7584, 63} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i8, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7584, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7584, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(67, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7584, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7585, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7585, 17} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7585, 25} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p13, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p15 := $add.ref($add.ref($add.ref($p13, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7586, 12} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7586, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7586, 33} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, $mul.ref(1, 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7586, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, $p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7587, 41} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7587, 41} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7587, 16} true;
  assume {:verifier.code 0} true;
  call $i21 := IofCallDriver($p20, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7588, 40} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7588, 52} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7588, 7} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p22, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7590, 5} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
}
const IoWMIRegistrationControl: ref;
axiom (IoWMIRegistrationControl == $sub.ref(0, 150656));
procedure {:inline 1} IoWMIRegistrationControl($p0: ref, $i1: i64)
  returns ($r: i64);
const PptCleanRemovalRelationsList: ref;
axiom (PptCleanRemovalRelationsList == $sub.ref(0, 151688));
procedure {:inline 1} PptCleanRemovalRelationsList($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2811, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2811, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2817, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2817, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2819, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2819, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i32($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2819, 48} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i32($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2819, 45} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i4, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2819, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2822, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume !(($i6 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2821, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  $p7 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2825, 32} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2825, 40} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p8, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2825, 40} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  $p11 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2826, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2826, 40} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p12, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2826, 40} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2827, 20} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p14, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2827, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2828, 20} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p10, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2828, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, $p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2817, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2843, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptFailRequest: ref;
axiom (PptFailRequest == $sub.ref(0, 152720));
procedure {:inline 1} PptFailRequest($p0: ref, $i1: i64)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8268, 12} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptFailRequest:arg:Status"} boogie_si_record_i64($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8268, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8268, 39} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8268, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8269, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8269, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $i5;
  call {:cexpr "myStatus"} boogie_si_record_i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8270, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p7 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8270, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8271, 7} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8273, 5} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const PptDumpRemovalRelationsList: ref;
axiom (PptDumpRemovalRelationsList == $sub.ref(0, 153752));
procedure {:inline 1} PptDumpRemovalRelationsList($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $i8: i8;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i38: i8;
  var $i49: i1;
  var $p50: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3018, 28} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3018, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3026, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3026, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i32($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3026, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i32($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3026, 39} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i4, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3026, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3031, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3082, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3036, 7} true;
  assume {:verifier.code 0} true;
  $p7, $i8 := $0.ref, 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3020, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3036, 17} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3038, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i8($i8, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3038, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i9 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3041, 11} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb8:
  assume !(($i9 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3040, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $p10 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3043, 35} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  $p12 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3044, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3044, 40} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p13, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3044, 40} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  $p16 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3045, 32} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3045, 40} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p17, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3045, 40} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3046, 20} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p19, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3046, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p20, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3047, 20} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p15, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3047, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p21, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3049, 24} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3049, 46} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3048, 16} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3052, 13} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i32($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3052, 45} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i32($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3052, 42} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i25, $i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3052, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb11, $bb12;
$bb10:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3080, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume ($i27 == 1);
  $p28 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3054, 41} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3055, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p31 := $add.ref($add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3055, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p31, $p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3056, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p33 := $add.ref($add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3056, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p33, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3057, 41} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3057, 26} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p29, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3057, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p35, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3058, 40} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p37 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3058, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p37, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3061, 9} true;
  assume {:verifier.code 0} true;
  $i38 := 1;
  goto $bb13;
$bb12:
  assume !(($i27 == 1));
  $p39 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3064, 45} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3065, 17} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p42 := $add.ref($add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3065, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p42, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3066, 17} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p44 := $add.ref($add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3066, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, $p40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3067, 41} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3067, 26} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p40, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3067, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3068, 44} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p48 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3068, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p48, $p11);
  assume {:verifier.code 0} true;
  $i38 := $i8;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3070, 14} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.ref($p7, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3070, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i49 == 1);
  assume {:verifier.code 0} true;
  $p50 := $p7;
  goto $bb16;
$bb15:
  assume !(($i49 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3072, 9} true;
  assume {:verifier.code 0} true;
  $p50 := $p11;
  goto $bb16;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3036, 7} true;
  assume {:verifier.code 0} true;
  $p7, $i8 := $p50, $i38;
  goto $bb5;
}
const PptPnpBuildRemovalRelations: ref;
axiom (PptPnpBuildRemovalRelations == $sub.ref(0, 154784));
procedure {:inline 1} PptPnpBuildRemovalRelations($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i8: i8;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $i40: i8;
  var $i41: i64;
  var $i53: i1;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $p59: ref;
  var $i60: i1;
  var $p61: ref;
  var $i62: i64;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $p7: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6016, 28} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6016, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6024, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6024, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i32($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6024, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i32($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6024, 39} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i4, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6024, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6027, 7} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6127, 5} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6032, 7} true;
  assume {:verifier.code 0} true;
  $i8, $p9, $i10 := 0, $0.ref, 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6018, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6030, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6032, 17} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6034, 14} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i8($i8, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6034, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6037, 11} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb8:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6036, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $p12 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6039, 35} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  $p14 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6040, 32} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6040, 40} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p15, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6040, 40} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  $p18 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6041, 32} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6041, 40} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p19, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6041, 40} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6042, 20} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p21, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6042, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p22, $p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6043, 20} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p17, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6043, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6045, 24} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6045, 46} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6044, 16} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6048, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i32($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6048, 45} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i32($p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6048, 42} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i27, $i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6048, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb11, $bb12;
$bb10:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6079, 46} true;
  assume {:verifier.code 0} true;
  $i55 := $sub.i64($i10, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6079, 53} true;
  assume {:verifier.code 0} true;
  $i56 := $mul.i64($i55, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6078, 67} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64(16, $i56);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6077, 13} true;
  assume {:verifier.code 0} true;
  call $p58 := ExAllocatePoolWithTag(1, $i57, 1349673296);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6082, 19} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6084, 10} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.ref($p59, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6084, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb17, $bb18;
$bb11:
  assume ($i29 == 1);
  $p30 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6050, 41} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6051, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p33 := $add.ref($add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6051, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p33, $p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6052, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p35 := $add.ref($add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6052, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p35, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6053, 41} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6053, 26} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p31, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6053, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p37, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6054, 40} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p39 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6054, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p39, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6057, 9} true;
  assume {:verifier.code 0} true;
  $i40, $i41 := 1, $i10;
  goto $bb13;
$bb12:
  assume !(($i29 == 1));
  $p42 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6060, 45} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6061, 17} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p45 := $add.ref($add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6061, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6062, 17} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p47 := $add.ref($add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6062, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p47, $p43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6063, 41} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6063, 26} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p43, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6063, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p49, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6064, 44} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p26, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p51 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6064, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6065, 17} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i10, 1);
  call {:cexpr "count"} boogie_si_record_i64($i52);
  assume {:verifier.code 0} true;
  $i40, $i41 := $i8, $i52;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6067, 14} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.ref($p9, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6067, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i53 == 1);
  assume {:verifier.code 0} true;
  $p54 := $p9;
  goto $bb16;
$bb15:
  assume !(($i53 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6071, 9} true;
  assume {:verifier.code 0} true;
  $p54 := $p13;
  goto $bb16;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6032, 7} true;
  assume {:verifier.code 0} true;
  $i8, $p9, $i10 := $i40, $p54, $i41;
  goto $bb5;
$bb17:
  assume ($i60 == 1);
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i60 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6087, 7} true;
  assume {:verifier.code 0} true;
  $p7 := $p58;
  goto $bb3;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6090, 16} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p59, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6090, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p61, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6093, 7} true;
  assume {:verifier.code 0} true;
  $i62 := 0;
  goto $bb20;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6093, 17} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6095, 15} true;
  assume {:verifier.code 0} true;
  $i63 := $ult.i64($i62, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6095, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i63 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6097, 9} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i63 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6098, 11} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  $p64 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6100, 35} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  $p66 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6101, 36} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6101, 44} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p67, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6101, 44} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.0, $p68);
  $p70 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6102, 36} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6102, 44} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p71, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6102, 44} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6103, 24} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p73, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6103, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p74, $p69);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6104, 24} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p69, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6104, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, $p73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6106, 24} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6106, 46} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p76, $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6105, 16} true;
  assume {:verifier.code 0} true;
  $p78 := $bitcast.ref.ref($p77);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6110, 27} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p78, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6110, 27} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.0, $p79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6111, 30} true;
  assume {:verifier.code 0} true;
  $p81 := $bitcast.ref.ref($p80);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6111, 11} true;
  assume {:verifier.code 0} true;
  call ObfReferenceObject($p81);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6112, 22} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p59, $mul.ref(0, 16)), $mul.ref(8, 1));
  $p83 := $add.ref($add.ref($add.ref($p59, $mul.ref(0, 16)), $mul.ref(8, 1)), $mul.ref($i62, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6112, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p83, $p80);
  $p84 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6114, 45} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6115, 17} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p78, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p87 := $add.ref($add.ref($add.ref($p78, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6115, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p87, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6116, 17} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p78, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p89 := $add.ref($add.ref($add.ref($p78, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6116, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p89, $p85);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6117, 41} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p78, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6117, 26} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p85, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6117, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p91, $p65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6118, 44} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($add.ref($p78, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p93 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6118, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p93, $p65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6119, 13} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i64($i62, 1);
  call {:cexpr "i"} boogie_si_record_i64($i94);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6093, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $i94;
  goto $bb20;
$bb25:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6123, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $p58;
  goto $bb3;
}
const ObfReferenceObject: ref;
axiom (ObfReferenceObject == $sub.ref(0, 155816));
procedure {:inline 1} ObfReferenceObject($p0: ref);
const PptPnpBounceAndCatchPnpIrp: ref;
axiom (PptPnpBounceAndCatchPnpIrp == $sub.ref(0, 156848));
procedure {:inline 1} PptPnpBounceAndCatchPnpIrp($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $i41: i32;
  var $i42: i32;
  var $i43: i8;
  var $p44: ref;
  var $p45: ref;
  var $i46: i8;
  var $i47: i32;
  var $i48: i32;
  var $i49: i8;
  var $p50: ref;
  var $i51: i64;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $i55: i32;
  var $i56: i64;
  var $i57: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7525, 31} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7525, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7525, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7528, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7528, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7528, 33} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p8 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7529, 20} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7529, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7530, 24} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7530, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7530, 37} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p12, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p14 := $add.ref($add.ref($add.ref($p12, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7531, 24} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7531, 24} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7531, 45} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, $mul.ref($sub.ref(0, 1), 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7533, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7533, 25} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7533, 7} true;
  assume {:verifier.code 0} true;
  call $p20 := memcpy($p18, $p19, $p2i.ref.i32($add.ref($add.ref($0.ref, $mul.ref(0, 68)), $mul.ref(52, 1))));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7535, 18} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p16, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7535, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7537, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7537, 14} true;
  assume {:verifier.code 0} true;
  $i23 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7537, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i22, $i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7537, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i24 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7539, 9} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7541, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i24 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7542, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $M.18;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7542, 26} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7542, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7553, 24} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7553, 29} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7553, 37} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p28, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p30 := $add.ref($add.ref($add.ref($p28, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7554, 24} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7554, 24} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7554, 45} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, $mul.ref($sub.ref(0, 1), 68));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7556, 18} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(52, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7556, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p34, PptSynchCompletionRoutine);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7557, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7557, 18} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(60, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7557, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p36, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7558, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7558, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7559, 18} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7559, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7560, 44} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7560, 44} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7560, 28} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7560, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7560:52: warning: over-approximating bitwise operation or; */
  $i42 := $or.i32($i41, 128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7560, 28} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i8($i42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7560, 18} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7560, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, $i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7561, 44} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7561, 44} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7561, 28} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7561, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:7561:52: warning: over-approximating bitwise operation or; */
  $i48 := $or.i32($i47, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7561, 28} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i8($i48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7561, 18} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p32, $mul.ref($sub.ref(0, 1), 68)), $mul.ref(3, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7561, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p50, $i49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7562, 16} true;
  assume {:verifier.code 0} true;
  call $i51 := IofCallDriver($p4, $p1);
  call {:cexpr "status"} boogie_si_record_i64($i51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7563, 29} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7563, 7} true;
  assume {:verifier.code 0} true;
  call $i53 := KeWaitForSingleObject($p52, 5, 0, 0, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7565, 16} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i64($i51, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7565, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i26 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7544, 11} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7546, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i26 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7547, 24} true;
  assume {:verifier.code 0} true;
  $M.18 := 1;
  call {:cexpr "compRegistered"} boogie_si_record_i32(1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7548, 18} true;
  assume {:verifier.code 0} true;
  $M.19 := PptSynchCompletionRoutine;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7549, 17} true;
  assume {:verifier.code 0} true;
  $M.20 := 0;
  call {:cexpr "routine"} boogie_si_record_i32(0);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume ($i54 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7566, 16} true;
  assume {:verifier.code 0} true;
  $i55 := $M.1;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7566, 16} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i32.i64($i55);
  call {:cexpr "status"} boogie_si_record_i64($i56);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7567, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $i56;
  goto $bb9;
$bb8:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  $i57 := $i51;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7569, 5} true;
  assume {:verifier.code 0} true;
  $r := $i57;
  $exn := false;
  return;
}
const PptPnpFilterExistsNonIrqResourceList: ref;
axiom (PptPnpFilterExistsNonIrqResourceList == $sub.ref(0, 157880));
procedure {:inline 1} PptPnpFilterExistsNonIrqResourceList($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $i7: i1;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $i14: i1;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i64;
  var $i15: i8;
  var $i22: i32;
  var $i23: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i24: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7032, 43} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7032, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7032, 43} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  call {:cexpr "listCount"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7035, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1)), $mul.ref(0, 72));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7037, 7} true;
  assume {:verifier.code 0} true;
  $i5, $p6 := 0, $p4;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7037, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7039, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i64($i5, $i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7039, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7041, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7042, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7045, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7045, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  call {:cexpr "remain"} boogie_si_record_i64($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7046, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p11 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7049, 11} true;
  assume {:verifier.code 0} true;
  $i12, $p13 := $i9, $p11;
  goto $bb7;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7082, 5} true;
  assume {:verifier.code 0} true;
  $i24 := 0;
  goto $bb18;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7049, 21} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7051, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7051, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i14 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7053, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i14 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7054, 15} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb12;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7057, 31} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p13, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7057, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7057, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7057, 36} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7057, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb13, $bb14;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7069, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7069, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7069, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb16, $bb17;
$bb13:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7061, 15} true;
  assume {:verifier.code 0} true;
  $i15 := 1;
  goto $bb12;
$bb14:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7064, 21} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p13, $mul.ref(1, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7065, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i64($i12, 1);
  call {:cexpr "remain"} boogie_si_record_i64($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7049, 11} true;
  assume {:verifier.code 0} true;
  $i12, $p13 := $i21, $p20;
  goto $bb7;
$bb16:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7072, 11} true;
  assume {:verifier.code 0} true;
  $i24 := 1;
  goto $bb18;
$bb17:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7084, 1} true;
  assume {:verifier.code 0} true;
  $r := $i24;
  $exn := false;
  return;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7076, 51} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p26 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7076, 74} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7076, 74} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  $p29 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref($i28, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7076, 13} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7077, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i5, 1);
  call {:cexpr "i"} boogie_si_record_i64($i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7037, 7} true;
  assume {:verifier.code 0} true;
  $i5, $p6 := $i31, $p29;
  goto $bb1;
}
const PptPnpFilterRemoveIrqResourceLists: ref;
axiom (PptPnpFilterRemoveIrqResourceLists == $sub.ref(0, 158912));
procedure {:inline 1} PptPnpFilterRemoveIrqResourceLists($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i1;
  var $i11: i8;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $p40: ref;
  var $p48: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7097, 43} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7097, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7097, 43} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  call {:cexpr "listCount"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7099, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := PptPnpFilterGetEndOfResourceRequirementsList($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7103, 43} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1));
  $p5 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1)), $mul.ref(0, 72));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7106, 7} true;
  assume {:verifier.code 0} true;
  $i6, $p7, $i8, $p9 := 0, $p5, $i2, $p3;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7102, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7103, 15} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7106, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7108, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ult.i64($i6, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7108, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7110, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i10 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7111, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7113, 27} true;
  assume {:verifier.code 0} true;
  call $i11 := PptPnpListContainsIrqResourceDescriptor($p7);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7114, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i8($i11, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7114, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7139, 31} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7139, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7141, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume ($i12 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7117, 60} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p14 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7118, 60} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7118, 60} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  $p17 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref($i16, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7117, 22} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7120, 61} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7120, 59} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7120, 59} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7120, 59} true;
  assume {:verifier.code 0} true;
  $i22 := $sub.i64($i20, $i21);
  call {:cexpr "bytesToMove"} boogie_si_record_i64($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7121, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $sgt.i64($i22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7121, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i12 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7132, 59} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p42 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7133, 59} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7133, 59} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  $p45 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref($i44, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7132, 21} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7134, 13} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i64($i6, 1);
  call {:cexpr "i"} boogie_si_record_i64($i47);
  assume {:verifier.code 0} true;
  $i37, $p38, $i39, $p40 := $i47, $p45, $i8, $p9;
  goto $bb12;
$bb9:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7123, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7123, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7123, 42} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i64.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7123, 15} true;
  assume {:verifier.code 0} true;
  call $p27 := memmove($p24, $p25, $i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7125, 19} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7125, 38} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7125, 36} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7125, 36} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7125, 36} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i64($i30, $i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7124, 52} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i64(0, $i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7124, 52} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p9, $mul.ref($i33, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7127, 11} true;
  assume {:verifier.code 0} true;
  $p35 := $p34;
  goto $bb11;
$bb10:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  $p35 := $p9;
  goto $bb11;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7129, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $sub.i64($i8, 1);
  call {:cexpr "listCount"} boogie_si_record_i64($i36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7130, 9} true;
  assume {:verifier.code 0} true;
  $i37, $p38, $i39, $p40 := $i6, $p7, $i36, $p35;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7106, 7} true;
  assume {:verifier.code 0} true;
  $i6, $p7, $i8, $p9 := $i37, $p38, $i39, $p40;
  goto $bb1;
}
const PptPnpFilterNukeIrqResourceDescriptorsFromAllLists: ref;
axiom (PptPnpFilterNukeIrqResourceDescriptorsFromAllLists == $sub.ref(0, 159944));
procedure {:inline 1} PptPnpFilterNukeIrqResourceDescriptorsFromAllLists($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7178, 43} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7178, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7178, 43} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  call {:cexpr "listCount"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7180, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1)), $mul.ref(0, 72));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7182, 7} true;
  assume {:verifier.code 0} true;
  $i5, $p6 := 0, $p4;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7182, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7184, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i64($i5, $i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7184, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7186, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7187, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7190, 11} true;
  assume {:verifier.code 0} true;
  call PptPnpFilterNukeIrqResourceDescriptors($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7191, 59} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p9 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7192, 59} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7192, 59} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  $p12 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref($i11, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7191, 21} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7193, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i5, 1);
  call {:cexpr "i"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7182, 7} true;
  assume {:verifier.code 0} true;
  $i5, $p6 := $i14, $p12;
  goto $bb1;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7198, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptPnpFilterNukeIrqResourceDescriptors: ref;
axiom (PptPnpFilterNukeIrqResourceDescriptors == $sub.ref(0, 160976));
procedure {:inline 1} PptPnpFilterNukeIrqResourceDescriptors($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7206, 47} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7206, 47} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7209, 7} true;
  assume {:verifier.code 0} true;
  $p3, $i4 := $p2, 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7209, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7211, 33} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7211, 33} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7211, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i64($i4, $i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7211, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7213, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7214, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7216, 43} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p3, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7216, 43} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7216, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7216, 48} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7216, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7226, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7217, 36} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7217, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7219, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7221, 33} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p3, $mul.ref(1, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7222, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i4, 1);
  call {:cexpr "i"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7209, 7} true;
  assume {:verifier.code 0} true;
  $p3, $i4 := $p13, $i14;
  goto $bb1;
}
const PptPnpFilterGetEndOfResourceRequirementsList: ref;
axiom (PptPnpFilterGetEndOfResourceRequirementsList == $sub.ref(0, 162008));
procedure {:inline 1} PptPnpFilterGetEndOfResourceRequirementsList($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7151, 43} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7151, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7151, 43} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  call {:cexpr "listCount"} boogie_si_record_i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7153, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 136)), $mul.ref(64, 1)), $mul.ref(0, 72));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7155, 7} true;
  assume {:verifier.code 0} true;
  $p5, $i6 := $p4, 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7155, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7157, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i64($i6, $i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7157, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7159, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7160, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7163, 51} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p9 := $add.ref($add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7163, 74} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7163, 74} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  $p12 := $add.ref($add.ref($add.ref($p5, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref($i11, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7163, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7164, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i6, 1);
  call {:cexpr "i"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7155, 7} true;
  assume {:verifier.code 0} true;
  $p5, $i6 := $p12, $i14;
  goto $bb1;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7168, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7168, 5} true;
  assume {:verifier.code 0} true;
  $r := $p15;
  $exn := false;
  return;
}
const PptPnpListContainsIrqResourceDescriptor: ref;
axiom (PptPnpListContainsIrqResourceDescriptor == $sub.ref(0, 163040));
procedure {:inline 1} PptPnpListContainsIrqResourceDescriptor($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $i14: i64;
  var $i12: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7494, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7494, 21} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 1)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7497, 7} true;
  assume {:verifier.code 0} true;
  $i3, $p4 := 0, $p2;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7497, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7499, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7499, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7499, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i64($i3, $i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7499, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7501, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7502, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7504, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p4, $mul.ref(0, 56)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7504, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7504, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7504, 32} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7504, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7513, 5} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb9;
$bb7:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7505, 11} true;
  assume {:verifier.code 0} true;
  $i12 := 1;
  goto $bb9;
$bb8:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7507, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, $mul.ref(1, 56));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7515, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7509, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i3, 1);
  call {:cexpr "i"} boogie_si_record_i64($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 7497, 7} true;
  assume {:verifier.code 0} true;
  $i3, $p4 := $i14, $p13;
  goto $bb1;
}
const KeWaitForSingleObject: ref;
axiom (KeWaitForSingleObject == $sub.ref(0, 164072));
procedure {:inline 1} KeWaitForSingleObject($p0: ref, $i1: i32, $i2: i8, $i3: i8, $p4: ref)
  returns ($r: i64)
{
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i18: i1;
  var $i19: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10157, 24} true;
  assume {:verifier.code 1} true;
  call {:cexpr "KeWaitForSingleObject:arg:WaitReason"} boogie_si_record_i32($i1);
  call {:cexpr "KeWaitForSingleObject:arg:WaitMode"} boogie_si_record_i8($i2);
  call {:cexpr "KeWaitForSingleObject:arg:Alertable"} boogie_si_record_i8($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10157, 24} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10160, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10160, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $M.46;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10160, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i6, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10160, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10161, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $M.50;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10161, 26} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10161, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10167, 12} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10162, 13} true;
  assume {:verifier.code 0} true;
  $i11 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10162, 11} true;
  assume {:verifier.code 0} true;
  $M.2 := $i11;
  call {:cexpr "s"} boogie_si_record_i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10163, 24} true;
  assume {:verifier.code 0} true;
  $M.50 := 0;
  call {:cexpr "setEventCalled"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10164, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i10 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10165, 9} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10167, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10169, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $M.54;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10169, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10169, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10181, 24} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10181, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb14, $bb15;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10170, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10170, 11} true;
  assume {:verifier.code 0} true;
  $M.2 := $i14;
  call {:cexpr "s"} boogie_si_record_i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10171, 19} true;
  assume {:verifier.code 0} true;
  $M.54 := 0;
  call {:cexpr "customIrp"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10172, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i13 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10173, 13} true;
  assume {:verifier.code 0} true;
  $i15 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10173, 18} true;
  assume {:verifier.code 0} true;
  $i16 := $M.46;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10173, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i15, $i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10173, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb11, $bb12;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb11:
  assume ($i17 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10175, 13} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10177, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb14:
  assume ($i18 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10182, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i18 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10185, 9} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10188, 11} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb21;
$bb17:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10190, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i64(0, 1073741823);
  goto $bb21;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10186, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb19, $bb20;
$bb19:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10186, 16} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb20:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10191, 16} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10197, 1} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $exn := false;
  return;
$bb22:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  $i19 := $u0;
  goto $bb21;
}
const PptPnpStartScanCmResourceList: ref;
axiom (PptPnpStartScanCmResourceList == $sub.ref(0, 165104));
procedure {:inline 1} PptPnpStartScanCmResourceList($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: i64)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i20: i32;
  var $i21: i1;
  var $i22: i8;
  var $i23: i32;
  var $i24: i1;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i1;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i8;
  var $i45: i32;
  var $i46: i1;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $i52: i8;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $i65: i1;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i64;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i16;
  var $i94: i64;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i64;
  var $i99: i1;
  var $i100: i8;
  var $i101: i1;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i64;
  var $i109: i1;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i64;
  var $i115: i1;
  var $i116: i32;
  var $i117: i1;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $i123: i64;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $i129: i1;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $i135: i64;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $i140: i64;
  var $i141: i1;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $i150: i64;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $i159: i64;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $i171: i64;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $i182: i16;
  var $i183: i64;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $i187: i64;
  var $i188: i1;
  var $i189: i8;
  var $i190: i1;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $i203: i64;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $i214: i16;
  var $i215: i64;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $i220: i64;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $i226: i64;
  var $i227: i8;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $i232: i64;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $i237: i64;
  var $p238: ref;
  var $p239: ref;
  var $i240: i16;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $i249: i64;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $i254: i64;
  var $p255: ref;
  var $p256: ref;
  var $i257: i16;
  var $p258: ref;
  var $i259: i64;
  var $i18: i64;
  var $i19: i8;
  var $i260: i32;
  var $i261: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6672, 21} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6672, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6672, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6672, 34} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p9 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6673, 21} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6673, 21} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6675, 16} true;
  assume {:verifier.code 0} true;
  $M.51 := $store.i8($M.51, $p2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6676, 15} true;
  assume {:verifier.code 0} true;
  $M.52 := $store.i8($M.52, $p3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6677, 15} true;
  assume {:verifier.code 0} true;
  $M.53 := $store.i8($M.53, $p4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6679, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p11, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6679, 30} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6679, 42} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p13, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6679, 42} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6680, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i32($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6680, 36} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6680, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i17 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6684, 7} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $sub.i64(0, 1073741670), 0;
  goto $bb3;
$bb2:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6882, 14} true;
  assume {:verifier.code 0} true;
  $i260 := $zext.i8.i32($i19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6882, 11} true;
  assume {:verifier.code 0} true;
  $i261 := $eq.i32(0, $i260);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6882, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i261} true;
  goto $bb80, $bb81;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6687, 55} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $add.ref($add.ref($i2p.i64.ref(4292804608), $mul.ref(0, 856)), $mul.ref(816, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6687, 79} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6687, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6690, 15} true;
  assume {:verifier.code 0} true;
  call $i22 := PptIsPci($p0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i8($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6692, 16} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6692, 13} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32(1, $i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6692, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i24 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6694, 20} true;
  assume {:verifier.code 0} true;
  call $i25 := PptPnpStartScanPciCardCmResourceList($p0, $p1, $p2, $p3, $p4);
  call {:cexpr "status"} boogie_si_record_i64($i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6698, 9} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i25, 1;
  goto $bb3;
$bb8:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6701, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6703, 45} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p27 := $add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6704, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.ref($p27, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6704, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i28 == 1);
  $p29 := $add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6705, 58} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6705, 18} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(328, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6705, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i30);
  $p32 := $add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6709, 9} true;
  assume {:verifier.code 0} true;
  $i33 := 0;
  goto $bb13;
$bb12:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb79;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6709, 19} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume true;
  $p34 := $add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6711, 40} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6711, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $ult.i64($i33, $i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6711, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6713, 11} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i36 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6714, 13} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  $p37 := $add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  $p38 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28));
  $p39 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6718, 42} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6718, 15} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6718, 47} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i41, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6718, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb19, $bb20;
$bb18:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6879, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb19:
  assume ($i42 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6719, 13} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i42 == 1));
  $p43 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6721, 44} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.0, $p43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6721, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6721, 49} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i32($i45, 6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6721, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb22, $bb23;
$bb21:
  assume true;
  $p55 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6734, 60} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6734, 65} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p56, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6734, 65} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6734, 65} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6734, 65} true;
  assume {:verifier.code 0} true;
  call $M.55 := $memcpy.i8($M.55, $M.0, $p58, $p59, 16, false);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6736, 37} true;
  assume {:verifier.code 0} true;
  $M.51 := $store.i8($M.51, $p2, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6737, 38} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p61 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6738, 32} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p61);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6738, 50} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p62, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6738, 50} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i64($M.0, $p63);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6738, 58} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i64($i64, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6737, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb35, $bb36;
$bb22:
  assume ($i46 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6722, 15} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i46 == 1));
  $p47 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6724, 46} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i8($M.0, $p47);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6724, 19} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6724, 51} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i49, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6724, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb25, $bb26;
$bb24:
  assume true;
  $p217 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6839, 56} true;
  assume {:verifier.code 0} true;
  $p218 := $bitcast.ref.ref($p217);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6839, 66} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($add.ref($p218, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6839, 66} true;
  assume {:verifier.code 0} true;
  $i220 := $load.i64($M.0, $p219);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6838, 34} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(336, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6838, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p221, $i220);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6840, 23} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb25:
  assume ($i50 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6725, 17} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i50 == 1));
  $p51 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6727, 48} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i8($M.0, $p51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6727, 21} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i8.i32($i52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6727, 53} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i32($i53, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6727, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb28, $bb29;
$bb27:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6842, 33} true;
  assume {:verifier.code 0} true;
  $M.52 := $store.i8($M.52, $p3, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6843, 34} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(344, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6843, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p222, 1);
  $p223 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6846, 60} true;
  assume {:verifier.code 0} true;
  $p224 := $bitcast.ref.ref($p223);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6846, 70} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($add.ref($p224, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6846, 70} true;
  assume {:verifier.code 0} true;
  $i226 := $load.i64($M.0, $p225);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6845, 27} true;
  assume {:verifier.code 0} true;
  $i227 := $trunc.i64.i8($i226);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6844, 34} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(345, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6844, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p228, $i227);
  $p229 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6848, 56} true;
  assume {:verifier.code 0} true;
  $p230 := $bitcast.ref.ref($p229);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6848, 66} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($add.ref($p230, $mul.ref(0, 24)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6848, 66} true;
  assume {:verifier.code 0} true;
  $i232 := $load.i64($M.0, $p231);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6847, 34} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(352, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6847, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p233, $i232);
  $p234 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6850, 56} true;
  assume {:verifier.code 0} true;
  $p235 := $bitcast.ref.ref($p234);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6850, 66} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($add.ref($p235, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6850, 66} true;
  assume {:verifier.code 0} true;
  $i237 := $load.i64($M.0, $p236);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6849, 34} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(360, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6849, 52} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p238, $i237);
  $p239 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6851, 59} true;
  assume {:verifier.code 0} true;
  $i240 := $load.i16($M.0, $p239);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6851, 27} true;
  assume {:verifier.code 0} true;
  $i241 := $zext.i16.i32($i240);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6851, 65} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:6851:65: warning: over-approximating bitwise operation and; */
  $i242 := $and.i32($i241, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6851, 65} true;
  assume {:verifier.code 0} true;
  $i243 := $ne.i32($i242, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6851, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb71, $bb72;
$bb28:
  assume ($i54 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6728, 19} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i54 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6731, 21} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6858, 33} true;
  assume {:verifier.code 0} true;
  $M.53 := $store.i8($M.53, $p4, 1);
  $p246 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6860, 56} true;
  assume {:verifier.code 0} true;
  $p247 := $bitcast.ref.ref($p246);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6860, 60} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($add.ref($p247, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6860, 60} true;
  assume {:verifier.code 0} true;
  $i249 := $load.i64($M.0, $p248);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6859, 34} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(376, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6859, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p250, $i249);
  $p251 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6862, 56} true;
  assume {:verifier.code 0} true;
  $p252 := $bitcast.ref.ref($p251);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6862, 60} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($add.ref($p252, $mul.ref(0, 24)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6862, 60} true;
  assume {:verifier.code 0} true;
  $i254 := $load.i64($M.0, $p253);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6861, 34} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(384, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6861, 42} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p255, $i254);
  $p256 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6863, 72} true;
  assume {:verifier.code 0} true;
  $i257 := $load.i16($M.0, $p256);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6863, 34} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(392, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6863, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p258, $i257);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6864, 23} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb31:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6866, 23} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb32:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6732, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb33, $bb34;
$bb33:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6732, 28} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb34:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6867, 28} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb35:
  assume ($i65 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6739, 40} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p67 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6740, 34} true;
  assume {:verifier.code 0} true;
  $p68 := $bitcast.ref.ref($p67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6740, 52} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p68, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6740, 52} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i64($M.0, $p69);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6740, 61} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i64($i70, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6739, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb37, $bb38;
$bb36:
  assume !(($i65 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6765, 30} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb37:
  assume ($i71 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6743, 38} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p73 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  $p74 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6744, 60} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6744, 65} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p75, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6744, 65} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6744, 65} true;
  assume {:verifier.code 0} true;
  $p78 := $bitcast.ref.ref($p76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6744, 65} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p77, $p78, 16, false);
  $p79 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6746, 60} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6746, 65} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p80, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6746, 65} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i64($M.0, $p81);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6745, 38} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p84 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6745, 64} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p84, $i82);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6748, 67} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p86 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6749, 65} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6749, 65} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p87);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6749, 65} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6747, 38} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p91 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6747, 58} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p91, $p89);
  $p92 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6751, 58} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i16($M.0, $p92);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6751, 31} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i16.i64($i93);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6750, 38} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(312, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6750, 51} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p95, $i94);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6752, 42} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p97 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6752, 51} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i64($M.0, $p97);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6752, 68} true;
  assume {:verifier.code 0} true;
  $i99 := $eq.i64($i98, 4096);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6752, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb39, $bb40;
$bb38:
  assume !(($i71 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6763, 27} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb39:
  assume ($i99 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6754, 41} true;
  assume {:verifier.code 0} true;
  call $i100 := PptIsNecR98Machine();
  call {:cexpr "tmp___0"} boogie_si_record_i8($i100);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6756, 33} true;
  assume {:verifier.code 0} true;
  $i101 := $ne.i8($i100, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6756, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb41:
  assume ($i101 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6757, 42} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p103 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6757, 68} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p103, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6758, 29} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6760, 27} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6762, 25} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6765, 23} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6767, 40} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p105 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6768, 34} true;
  assume {:verifier.code 0} true;
  $p106 := $bitcast.ref.ref($p105);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6768, 52} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p106, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6768, 52} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i64($M.0, $p107);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6768, 60} true;
  assume {:verifier.code 0} true;
  $i109 := $eq.i64($i108, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6767, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb48, $bb49;
$bb47:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6836, 23} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb48:
  assume ($i109 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6769, 42} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p111 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6770, 36} true;
  assume {:verifier.code 0} true;
  $p112 := $bitcast.ref.ref($p111);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6770, 54} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($add.ref($p112, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6770, 54} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i64($M.0, $p113);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6770, 63} true;
  assume {:verifier.code 0} true;
  $i115 := $eq.i64($i114, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6769, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb50, $bb51;
$bb49:
  assume !(($i109 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb50:
  assume ($i115 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6772, 39} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $add.ref($add.ref($i2p.i64.ref(4292804608), $mul.ref(0, 856)), $mul.ref(816, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6772, 63} true;
  assume {:verifier.code 0} true;
  $i117 := $ne.i32($i116, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6771, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb52, $bb53;
$bb51:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb52:
  assume ($i117 == 1);
  $p118 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6773, 64} true;
  assume {:verifier.code 0} true;
  $p119 := $bitcast.ref.ref($p118);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6773, 69} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p119, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6774, 40} true;
  assume {:verifier.code 0} true;
  $p121 := $bitcast.ref.ref($p120);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6774, 58} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($add.ref($p121, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6774, 58} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i64($M.0, $p122);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6775, 46} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p125 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6776, 40} true;
  assume {:verifier.code 0} true;
  $p126 := $bitcast.ref.ref($p125);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6776, 58} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($add.ref($p126, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6776, 58} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i64($M.0, $p127);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6774, 66} true;
  assume {:verifier.code 0} true;
  $i129 := $ult.i64($i123, $i128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6773, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb54, $bb55;
$bb53:
  assume !(($i117 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb54:
  assume ($i129 == 1);
  $p130 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6777, 66} true;
  assume {:verifier.code 0} true;
  $p131 := $bitcast.ref.ref($p130);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6777, 71} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($add.ref($p131, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6778, 42} true;
  assume {:verifier.code 0} true;
  $p133 := $bitcast.ref.ref($p132);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6778, 60} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($add.ref($p133, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6778, 60} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i64($M.0, $p134);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6779, 48} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p137 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6780, 42} true;
  assume {:verifier.code 0} true;
  $p138 := $bitcast.ref.ref($p137);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6780, 60} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($add.ref($p138, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6780, 60} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i64($M.0, $p139);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6778, 69} true;
  assume {:verifier.code 0} true;
  $i141 := $slt.i64($i135, $i140);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6777, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb56, $bb57;
$bb55:
  assume !(($i129 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6815, 38} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb56:
  assume ($i141 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6783, 46} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p143 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6784, 50} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p145 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6784, 59} true;
  assume {:verifier.code 0} true;
  $p146 := $bitcast.ref.ref($p143);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6784, 59} true;
  assume {:verifier.code 0} true;
  $p147 := $bitcast.ref.ref($p145);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6784, 59} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p146, $p147, 16, false);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6786, 50} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p149 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6786, 59} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i64($M.0, $p149);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6785, 46} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p152 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6785, 74} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p152, $i150);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6788, 50} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p154 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6788, 59} true;
  assume {:verifier.code 0} true;
  $p155 := $load.ref($M.0, $p154);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6787, 46} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p157 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6787, 68} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p157, $p155);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6790, 50} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(312, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6790, 50} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i64($M.0, $p158);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6789, 46} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(320, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6789, 62} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p160, $i159);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6791, 46} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p162 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  $p163 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6792, 68} true;
  assume {:verifier.code 0} true;
  $p164 := $bitcast.ref.ref($p163);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6792, 73} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($add.ref($p164, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6792, 73} true;
  assume {:verifier.code 0} true;
  $p166 := $bitcast.ref.ref($p162);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6792, 73} true;
  assume {:verifier.code 0} true;
  $p167 := $bitcast.ref.ref($p165);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6792, 73} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p166, $p167, 16, false);
  $p168 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6794, 68} true;
  assume {:verifier.code 0} true;
  $p169 := $bitcast.ref.ref($p168);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6794, 73} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($add.ref($p169, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6794, 73} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i64($M.0, $p170);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6793, 46} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p173 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6793, 72} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p173, $i171);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6797, 73} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p175 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6798, 71} true;
  assume {:verifier.code 0} true;
  $p176 := $bitcast.ref.ref($p175);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6798, 71} true;
  assume {:verifier.code 0} true;
  $p177 := $bitcast.ref.ref($p176);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6798, 71} true;
  assume {:verifier.code 0} true;
  $p178 := $load.ref($M.0, $p177);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6795, 46} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p180 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6795, 66} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p180, $p178);
  $p181 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6800, 66} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i16($M.0, $p181);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6800, 39} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i16.i64($i182);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6799, 46} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(312, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6799, 59} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p184, $i183);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6801, 50} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p186 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6801, 59} true;
  assume {:verifier.code 0} true;
  $i187 := $load.i64($M.0, $p186);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6801, 76} true;
  assume {:verifier.code 0} true;
  $i188 := $eq.i64($i187, 4096);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6801, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i188} true;
  goto $bb58, $bb59;
$bb57:
  assume !(($i141 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6813, 35} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb58:
  assume ($i188 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6804, 49} true;
  assume {:verifier.code 0} true;
  call $i189 := PptIsNecR98Machine();
  call {:cexpr "tmp___1"} boogie_si_record_i8($i189);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6806, 41} true;
  assume {:verifier.code 0} true;
  $i190 := $ne.i8($i189, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6806, 41} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb60, $bb61;
$bb59:
  assume !(($i188 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb60:
  assume ($i190 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6807, 50} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p192 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6807, 76} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p192, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6808, 37} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i190 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6810, 35} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6812, 33} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6815, 31} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6818, 44} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p194 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(0, 1));
  $p195 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6819, 66} true;
  assume {:verifier.code 0} true;
  $p196 := $bitcast.ref.ref($p195);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6819, 71} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($add.ref($p196, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6819, 71} true;
  assume {:verifier.code 0} true;
  $p198 := $bitcast.ref.ref($p194);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6819, 71} true;
  assume {:verifier.code 0} true;
  $p199 := $bitcast.ref.ref($p197);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6819, 71} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p198, $p199, 16, false);
  $p200 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6821, 66} true;
  assume {:verifier.code 0} true;
  $p201 := $bitcast.ref.ref($p200);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6821, 71} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($add.ref($p201, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6821, 71} true;
  assume {:verifier.code 0} true;
  $i203 := $load.i64($M.0, $p202);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6820, 44} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p205 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6820, 72} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p205, $i203);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6823, 73} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p207 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6825, 52} true;
  assume {:verifier.code 0} true;
  $p208 := $bitcast.ref.ref($p207);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6825, 52} true;
  assume {:verifier.code 0} true;
  $p209 := $bitcast.ref.ref($p208);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6825, 52} true;
  assume {:verifier.code 0} true;
  $p210 := $load.ref($M.0, $p209);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6822, 44} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p212 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6822, 66} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p212, $p210);
  $p213 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p15, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i33, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6827, 64} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i16($M.0, $p213);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6827, 37} true;
  assume {:verifier.code 0} true;
  $i215 := $zext.i16.i64($i214);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6826, 44} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(320, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6826, 60} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p216, $i215);
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6829, 29} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6831, 27} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6833, 25} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:verifier.code 0} true;
  goto $bb47;
$bb70:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb71:
  assume ($i243 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6852, 36} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(368, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6852, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p244, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6853, 23} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i243 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6854, 36} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(368, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6854, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p245, 0);
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6856, 23} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb74:
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6875, 13} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i64($i33, 1);
  call {:cexpr "i"} boogie_si_record_i64($i259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6709, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $i259;
  goto $bb13;
$bb79:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6704, 9} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := 0, 0;
  goto $bb3;
$bb80:
  assume ($i261 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6884, 5} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6886, 5} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const PptPnpStartValidateResources: ref;
axiom (PptPnpStartValidateResources == $sub.ref(0, 166136));
procedure {:inline 1} PptPnpStartValidateResources($p0: ref, $i1: i8, $i2: i8, $i3: i8)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $i8: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6896, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptPnpStartValidateResources:arg:FoundPort"} boogie_si_record_i8($i1);
  call {:cexpr "PptPnpStartValidateResources:arg:FoundIrq"} boogie_si_record_i8($i2);
  call {:cexpr "PptPnpStartValidateResources:arg:FoundDma"} boogie_si_record_i8($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6896, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6896, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6896, 17} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6898, 10} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i8($i1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6898, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6903, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p10 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6903, 64} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6903, 64} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6903, 64} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6901, 18} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p15 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6901, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6904, 23} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p17 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6904, 32} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6904, 12} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.ref($p18, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6904, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb4, $bb5;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6900, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 1073741810);
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6914, 5} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume ($i19 == 1);
  assume {:verifier.code 0} true;
  $i31 := 0;
  goto $bb6;
$bb5:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 37} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6907, 34} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p23 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p24, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.0, $p25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p24, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $M.56;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  $i30 := $M.57;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6906, 11} true;
  assume {:verifier.code 0} true;
  call PptLogError($p21, $p0, $i26, $i28, $i29, $i30, 0, 0, 0, 10, 0, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6911, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i64(0, 1073741709);
  goto $bb6;
$bb6:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i8 := $i31;
  goto $bb3;
}
const PptInitiate1284_3: ref;
axiom (PptInitiate1284_3 == $sub.ref(0, 167168));
procedure {:inline 1} PptInitiate1284_3($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
  var $p2: ref;
  var $i3: i64;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i64;
  var $i8: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4011, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4011, 7} true;
  assume {:verifier.code 0} true;
  $i1 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4011, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4014, 11} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4015, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4015, 26} true;
  assume {:verifier.code 0} true;
  call $i3 := Ppt1284_3AssignAddress($p2);
  call {:cexpr "deviceCount1"} boogie_si_record_i64($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4016, 11} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4017, 49} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4017, 26} true;
  assume {:verifier.code 0} true;
  call $i5 := Ppt1284_3AssignAddress($p4);
  call {:cexpr "deviceCount2"} boogie_si_record_i64($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4019, 26} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i3, $i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4019, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4020, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i1, 1);
  call {:cexpr "loopCount"} boogie_si_record_i64($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4021, 25} true;
  assume {:verifier.code 0} true;
  $i8 := $ult.i64($i7, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4021, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i6 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4027, 11} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4023, 11} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i8 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4024, 13} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4026, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4032, 5} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4011, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $i7;
  goto $bb1;
}
const PptDetectChipFilter: ref;
axiom (PptDetectChipFilter == $sub.ref(0, 168200));
procedure {:inline 1} PptDetectChipFilter($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $i29: i8;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i64;
  var $i39: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4917, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4917, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4917, 38} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4918, 32} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p5 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4918, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4920, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p8 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4920, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p8, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4921, 18} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p10 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4921, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4922, 18} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p12 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4922, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4925, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $M.29;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4925, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4925, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4926, 22} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p16 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4926, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4926, 51} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4926:51: warning: over-approximating bitwise operation and; */
  $i18 := $and.i64($i17, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4926, 51} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4926, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  $i39 := $sub.i64(0, 1073741810);
  goto $bb9;
$bb3:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4928, 34} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p21 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4928, 43} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4929, 26} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p24 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4929, 35} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  call $i26 := devirtbounce($p22, $p25, 96);
  call {:cexpr "Status"} boogie_si_record_i64($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4931, 20} true;
  assume {:verifier.code 0} true;
  $i27 := $sge.i64($i26, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4931, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  $i38 := $sub.i64(0, 1073741810);
  goto $bb8;
$bb5:
  assume ($i27 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4933, 38} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p6, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4934, 23} true;
  assume {:verifier.code 0} true;
  call $i29 := READ_PORT_UCHAR($p28);
  call {:cexpr "ecrLast"} boogie_si_record_i8($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4935, 13} true;
  assume {:verifier.code 0} true;
  call PptDetermineFifoWidth($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4936, 13} true;
  assume {:verifier.code 0} true;
  call PptDetermineFifoDepth($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4937, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p28, $i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4938, 36} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p31 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4938, 45} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4939, 28} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1));
  $p34 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(504, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4939, 37} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  call $i36 := devirtbounce($p32, $p35, 96);
  call {:cexpr "Status"} boogie_si_record_i64($i36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4941, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $i36;
  goto $bb7;
$bb6:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  $i37 := $i26;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4943, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $i37;
  goto $bb8;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4945, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $i38;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4948, 5} true;
  assume {:verifier.code 0} true;
  $r := $i39;
  $exn := false;
  return;
}
const PptDetectPortType: ref;
axiom (PptDetectPortType == $sub.ref(0, 169232));
procedure {:inline 1} PptDetectPortType($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $i26: i64;
  var $i27: i1;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $i33: i1;
  var $i35: i1;
  var $i36: i64;
  var $i34: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4952, 24} true;
  assume {:verifier.code 1} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(112, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4952, 24} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i5);
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4960, 19} true;
  assume {:verifier.code 0} true;
  $M.58 := $store.i64($M.58, $p3, 12169);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4961, 10} true;
  assume {:verifier.code 0} true;
  $M.59 := $store.i64($M.59, $p4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4963, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4963, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4963, 7} true;
  assume {:verifier.code 0} true;
  call $p8 := memset($p7, 0, 112);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4964, 7} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p10 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4964, 25} true;
  assume {:verifier.code 0} true;
  $M.60 := $store.i64($M.60, $p10, 36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4965, 34} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4965, 7} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p13 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4965, 32} true;
  assume {:verifier.code 0} true;
  $M.61 := $store.ref($M.61, $p13, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4966, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p15 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4966, 31} true;
  assume {:verifier.code 0} true;
  $M.62 := $store.i64($M.62, $p15, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4967, 33} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4967, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p18 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4967, 31} true;
  assume {:verifier.code 0} true;
  $M.63 := $store.ref($M.63, $p18, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4968, 7} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p20 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4968, 33} true;
  assume {:verifier.code 0} true;
  $M.64 := $store.i64($M.64, $p20, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4969, 54} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4969, 54} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.65, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4969, 62} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p2, $mul.ref(0, 112)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4969, 16} true;
  assume {:verifier.code 0} true;
  call $i24 := RtlQueryRegistryValues(1, $p22, $p23, $0.ref, $0.ref);
  call {:cexpr "Status"} boogie_si_record_i64($i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4973, 16} true;
  assume {:verifier.code 0} true;
  $i25 := $sge.i64($i24, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4973, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4974, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.58, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4974, 25} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i64($i26, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4974, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i25 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4979, 12} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i27 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4976, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i27 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4977, 9} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4979, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4981, 18} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i24, $sub.i64(0, 1073741772));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4981, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4994, 19} true;
  assume {:verifier.code 0} true;
  $M.58 := $store.i64($M.58, $p3, 12169);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4995, 9} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4995, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb14, $bb15;
$bb8:
  assume ($i28 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4983, 11} true;
  assume {:verifier.code 0} true;
  call PptDetectEcpPort($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4984, 11} true;
  assume {:verifier.code 0} true;
  call PptDetectBytePort($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4986, 24} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p30 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4986, 32} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i64($M.0, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4986, 53} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4986:53: warning: over-approximating bitwise operation and; */
  $i32 := $and.i64($i31, 9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4986, 53} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i64($i32, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4986, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i33 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4987, 11} true;
  assume {:verifier.code 0} true;
  $i34 := 0;
  goto $bb12;
$bb11:
  assume !(($i33 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4989, 11} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i64(0, 1073741810);
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5006, 1} true;
  assume {:verifier.code 0} true;
  $r := $i34;
  $exn := false;
  return;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb14:
  assume ($i35 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4997, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5000, 19} true;
  assume {:verifier.code 0} true;
  call $i36 := PptDetectPortCapabilities($p0);
  call {:cexpr "Status"} boogie_si_record_i64($i36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5004, 5} true;
  assume {:verifier.code 0} true;
  $i34 := 0;
  goto $bb12;
}
const PptWmiInitWmi: ref;
axiom (PptWmiInitWmi == $sub.ref(0, 170264));
procedure {:inline 1} PptWmiInitWmi($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9189, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9189, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9189, 30} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9189, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9190, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1));
  $p5 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9191, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, 1);
  $p6 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9192, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, PptWmiGuidList);
  $p7 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9193, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, PptWmiQueryWmiRegInfo);
  $p8 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9194, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, PptWmiQueryWmiDataBlock);
  $p9 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9195, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $0.ref);
  $p10 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9196, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $0.ref);
  $p11 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9197, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, $0.ref);
  $p12 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 872)), $mul.ref(776, 1)), $mul.ref(56, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9198, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9199, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := IoWMIRegistrationControl($p0, 1);
  call {:cexpr "tmp"} boogie_si_record_i64($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9201, 5} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
}
const PptWmiQueryWmiRegInfo: ref;
axiom (PptWmiQueryWmiRegInfo == $sub.ref(0, 171296));
procedure {:inline 1} PptWmiQueryWmiRegInfo($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref, $p5: ref)
  returns ($r: i64)
{
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9284, 23} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9284, 23} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9284, 23} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.66, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9284, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9285, 19} true;
  assume {:verifier.code 0} true;
  $M.67 := $store.i64($M.67, $p1, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9286, 20} true;
  assume {:verifier.code 0} true;
  $M.68 := $store.ref($M.68, $p3, RegistryPath);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9287, 20} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p8, $mul.ref(0, 872)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9287, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.69, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9287, 10} true;
  assume {:verifier.code 0} true;
  $M.70 := $store.ref($M.70, $p5, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9288, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const PptWmiQueryWmiDataBlock: ref;
axiom (PptWmiQueryWmiDataBlock == $sub.ref(0, 172328));
procedure {:inline 1} PptWmiQueryWmiDataBlock($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i64, $p5: ref, $i6: i64, $p7: ref)
  returns ($r: i64)
{
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i1;
  var $i12: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i13: i64;
  var $i18: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9302, 28} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptWmiQueryWmiDataBlock:arg:GuidIndex"} boogie_si_record_i64($i2);
  call {:cexpr "PptWmiQueryWmiDataBlock:arg:InstanceIndex"} boogie_si_record_i64($i3);
  call {:cexpr "PptWmiQueryWmiDataBlock:arg:InstanceCount"} boogie_si_record_i64($i4);
  call {:cexpr "PptWmiQueryWmiDataBlock:arg:OutBufferSize"} boogie_si_record_i64($i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9302, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9302, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.71, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9302, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9303, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9303, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9304, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9307, 9} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9310, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $ult.i64($i6, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9310, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb8, $bb9;
$bb4:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9322, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i64(0, 1073741163);
  goto $bb10;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9308, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb6, $bb7;
$bb6:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9308, 16} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9323, 16} true;
  assume {:verifier.code 0} true;
  $i13 := $u0;
  goto $bb10;
$bb8:
  assume ($i12 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9312, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i64(0, 1073741789);
  goto $bb10;
$bb9:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9315, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9316, 23} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p10, $mul.ref(0, 872)), $mul.ref(840, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9316, 23} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9316, 23} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9316, 23} true;
  assume {:verifier.code 0} true;
  call $M.73 := $memcpy.i8($M.73, $M.72, $p16, $p17, 16, false);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9317, 32} true;
  assume {:verifier.code 0} true;
  $M.74 := $store.i64($M.74, $p5, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9319, 11} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb10;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9328, 16} true;
  assume {:verifier.code 0} true;
  call $i18 := WmiCompleteRequest($p0, $p1, $i13, 16, 0);
  call {:cexpr "status"} boogie_si_record_i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9329, 5} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const WmiCompleteRequest: ref;
axiom (WmiCompleteRequest == $sub.ref(0, 173360));
procedure {:inline 1} WmiCompleteRequest($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i8)
  returns ($r: i64);
const RtlQueryRegistryValues: ref;
axiom (RtlQueryRegistryValues == $sub.ref(0, 174392));
procedure {:inline 1} RtlQueryRegistryValues($i0: i64, $p1: ref, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: i64)
{
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10522, 24} true;
  assume {:verifier.code 1} true;
  call {:cexpr "RtlQueryRegistryValues:arg:RelativeTo"} boogie_si_record_i64($i0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10522, 24} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10525, 24} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10525, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10526, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10529, 9} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10532, 11} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb8;
$bb4:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10534, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 1073741823);
  goto $bb8;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10530, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb6, $bb7;
$bb6:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10530, 16} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10535, 16} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 10541, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb9:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  $i7 := $u0;
  goto $bb8;
}
const PptDetectEcpPort: ref;
axiom (PptDetectEcpPort == $sub.ref(0, 175424));
procedure {:inline 1} PptDetectEcpPort($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i8;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i24: i8;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i28: i8;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i8;
  var $i33: i32;
  var $i34: i32;
  var $i35: i8;
  var $i36: i32;
  var $i37: i32;
  var $i38: i8;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5058, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5058, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5058, 38} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5059, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5061, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p6 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5061, 42} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5061, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i32($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5060, 35} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32(0, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5060, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5064, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5139, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5067, 27} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p11 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5067, 35} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5067, 49} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5069, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := READ_PORT_UCHAR($p13);
  call {:cexpr "ecr"} boogie_si_record_i8($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5074, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5075, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := READ_PORT_UCHAR($p13);
  call {:cexpr "ecr"} boogie_si_record_i8($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5079, 10} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5079, 19} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5079:19: warning: over-approximating bitwise operation and; */
  $i17 := $and.i32($i16, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5079, 24} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5080, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i18 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5082, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5082, 24} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 255);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5082, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb7:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5087, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5089, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5082, 32} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5093, 10} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5093, 19} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5093:19: warning: over-approximating bitwise operation and; */
  $i22 := $and.i32($i21, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5093, 24} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5093, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i23 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5096, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5097, 15} true;
  assume {:verifier.code 0} true;
  call $i24 := READ_PORT_UCHAR($p13);
  call {:cexpr "ecr"} boogie_si_record_i8($i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5099, 12} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5099, 21} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5099:21: warning: over-approximating bitwise operation and; */
  $i26 := $and.i32($i25, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5099, 26} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5099, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume ($i27 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5102, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5104, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb15:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5107, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5110, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p13, 20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5111, 13} true;
  assume {:verifier.code 0} true;
  call $i28 := READ_PORT_UCHAR($p13);
  call {:cexpr "ecr"} boogie_si_record_i8($i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5113, 12} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5113, 21} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5113:21: warning: over-approximating bitwise operation and; */
  $i30 := $and.i32($i29, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5113, 26} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5113, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i31 == 1);
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i31 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5116, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5118, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5122, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p13, $i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5123, 17} true;
  assume {:verifier.code 0} true;
  call $i32 := READ_PORT_UCHAR($p13);
  call {:cexpr "ecrLast"} boogie_si_record_i8($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5124, 29} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5124, 42} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5124:42: warning: over-approximating bitwise operation and; */
  $i34 := $and.i32($i33, 31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5124, 13} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i32.i8($i34);
  call {:cexpr "ecr"} boogie_si_record_i8($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5125, 50} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5125, 59} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5125:59: warning: over-approximating bitwise operation or; */
  $i37 := $or.i32($i36, 192);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5125, 34} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i32.i8($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5125, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p13, $i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5126, 7} true;
  assume {:verifier.code 0} true;
  call PptDetermineFifoWidth($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5128, 27} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p40 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(72, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5128, 35} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i64($M.0, $p40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5128, 13} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i64(0, $i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5128, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i42 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5130, 20} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p44 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5130, 49} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i64($M.0, $p44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5130, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5130:49: warning: over-approximating bitwise operation or; */
  $i46 := $or.i64($i45, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5130, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p44, $i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5131, 9} true;
  assume {:verifier.code 0} true;
  call PptDetermineFifoDepth($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5134, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5136, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p13, $i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5137, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const PptDetectBytePort: ref;
axiom (PptDetectBytePort == $sub.ref(0, 176456));
procedure {:inline 1} PptDetectBytePort($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $i7: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5253, 19} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5253, 19} true;
  assume {:verifier.code 0} true;
  call $i1 := PptSetByteMode($p0, 52);
  call {:cexpr "Status"} boogie_si_record_i64($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5254, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $sge.i64($i1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5254, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5257, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5257, 47} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.0, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5257, 47} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5257:47: warning: over-approximating bitwise operation or; */
  $i6 := $or.i64($i5, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5257, 47} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, $i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5258, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5261, 7} true;
  assume {:verifier.code 0} true;
  call $i7 := PptClearByteMode($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5262, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptDetectPortCapabilities: ref;
axiom (PptDetectPortCapabilities == $sub.ref(0, 177488));
procedure {:inline 1} PptDetectPortCapabilities($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $i15: i8;
  var $i16: i1;
  var $p17: ref;
  var $i18: i8;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $i26: i1;
  var $i27: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5011, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5011, 13} true;
  assume {:verifier.code 0} true;
  call PptDetectEcpPort($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5012, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5012, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5012, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5012:49: warning: over-approximating bitwise operation and; */
  $i4 := $and.i64($i3, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5012, 49} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5012, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5013, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p7 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5013, 47} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5013, 12} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5013, 58} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5013:58: warning: over-approximating bitwise operation and; */
  $i10 := $and.i64($i9, 15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5013, 66} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5013, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5033, 12} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb3:
  assume ($i11 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5014, 23} true;
  assume {:verifier.code 0} true;
  call $i12 := PptFindNatChip($p0);
  call {:cexpr "Status"} boogie_si_record_i64($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5015, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $sge.i64($i12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5015, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i11 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5031, 9} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5016, 27} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(498, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5016, 27} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5016, 16} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i8($i15, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5016, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb7:
  assume ($i16 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5026, 24} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(856, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5026, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, 1);
  assume {:verifier.code 0} true;
  goto $bb12;
$bb8:
  assume !(($i16 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5017, 21} true;
  assume {:verifier.code 0} true;
  call PptDetectEppPortIfDot3DevicePresent($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5018, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(856, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5018, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5018, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i8($i18, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5018, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i19 == 1);
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5020, 17} true;
  assume {:verifier.code 0} true;
  call PptDetectEppPortIfUserRequested($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5022, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5024, 11} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5028, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5030, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5033, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5036, 18} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(856, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5036, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, 1);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5038, 10} true;
  assume {:verifier.code 0} true;
  call PptDetectBytePort($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5039, 20} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p23 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5039, 28} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.0, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5039, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5039:49: warning: over-approximating bitwise operation and; */
  $i25 := $and.i64($i24, 11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5039, 49} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i64($i25, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5039, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i26 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5042, 7} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb19;
$bb18:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5048, 1} true;
  assume {:verifier.code 0} true;
  $r := $i27;
  $exn := false;
  return;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5046, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $sub.i64(0, 1073741810);
  goto $bb19;
}
const PptFindNatChip: ref;
axiom (PptFindNatChip == $sub.ref(0, 178520));
procedure {:inline 1} PptFindNatChip($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $p18: ref;
  var $i19: i1;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $i43: i8;
  var $i44: i1;
  var $i45: i8;
  var $i46: i8;
  var $i47: i8;
  var $i48: i1;
  var $i49: i32;
  var $i50: i1;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $i54: i8;
  var $i55: i32;
  var $i56: i1;
  var $i57: i8;
  var $i58: i32;
  var $i59: i1;
  var $i61: i8;
  var $i62: i8;
  var $i63: i32;
  var $i64: i1;
  var $i65: i8;
  var $i66: i32;
  var $i67: i32;
  var $i68: i1;
  var $i69: i8;
  var $i70: i8;
  var $i60: i8;
  var $i71: i1;
  var $i72: i8;
  var $i73: i32;
  var $i74: i1;
  var $p75: ref;
  var $i76: i8;
  var $i77: i32;
  var $i78: i32;
  var $i79: i8;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i83: i1;
  var $i84: i32;
  var $i85: i1;
  var $i86: i32;
  var $i87: i1;
  var $i88: i32;
  var $i89: i1;
  var $i90: i32;
  var $i91: i1;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i95: i1;
  var $p96: ref;
  var $i97: i8;
  var $i98: i32;
  var $i99: i32;
  var $i100: i64;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $i105: i64;
  var $p106: ref;
  var $p107: ref;
  var $i108: i32;
  var $i109: i1;
  var $p110: ref;
  var $i111: i8;
  var $i112: i8;
  var $i113: i8;
  var $i114: i8;
  var $i115: i1;
  var $i116: i8;
  var $p117: ref;
  var $p118: ref;
  var $i119: i8;
  var $i120: i32;
  var $i121: i32;
  var $i122: i8;
  var $i123: i32;
  var $i124: i1;
  var $i125: i32;
  var $i126: i1;
  var $p127: ref;
  var $p128: ref;
  var $i129: i8;
  var $i130: i32;
  var $i131: i32;
  var $i132: i32;
  var $i133: i64;
  var $p134: ref;
  var $i135: i8;
  var $i136: i64;
  var $i137: i64;
  var $i138: i64;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i32;
  var $p143: ref;
  var $p144: ref;
  var $i145: i32;
  var $i146: i1;
  var $p147: ref;
  var $i148: i8;
  var $i149: i8;
  var $i150: i32;
  var $i151: i32;
  var $i152: i8;
  var $p153: ref;
  var $i154: i8;
  var $i155: i1;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $i160: i64;
  var $i17: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5629, 5} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5629, 5} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref(0, 32)), $mul.ref(0, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5629, 17} true;
  assume {:verifier.code 0} true;
  $M.75 := $store.ref($M.75, $p5, $i2p.i64.ref(920));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5630, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 32)), $mul.ref(1, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5630, 17} true;
  assume {:verifier.code 0} true;
  $M.75 := $store.ref($M.75, $p6, $i2p.i64.ref(622));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5631, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 32)), $mul.ref(2, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5631, 17} true;
  assume {:verifier.code 0} true;
  $M.75 := $store.ref($M.75, $p7, $i2p.i64.ref(348));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5632, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 32)), $mul.ref(3, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5632, 17} true;
  assume {:verifier.code 0} true;
  $M.75 := $store.ref($M.75, $p8, $i2p.i64.ref(46));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5633, 5} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p3, $mul.ref(0, 32)), $mul.ref(0, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5633, 17} true;
  assume {:verifier.code 0} true;
  $M.76 := $store.ref($M.76, $p9, $i2p.i64.ref(888));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5634, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p3, $mul.ref(0, 32)), $mul.ref(1, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5634, 17} true;
  assume {:verifier.code 0} true;
  $M.76 := $store.ref($M.76, $p10, $i2p.i64.ref(956));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5635, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p3, $mul.ref(0, 32)), $mul.ref(2, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5635, 17} true;
  assume {:verifier.code 0} true;
  $M.76 := $store.ref($M.76, $p11, $i2p.i64.ref(632));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5636, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3, $mul.ref(0, 32)), $mul.ref(3, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5636, 17} true;
  assume {:verifier.code 0} true;
  $M.76 := $store.ref($M.76, $p12, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5639, 25} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(497, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5639, 25} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5639, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5639, 41} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5639, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5642, 7} true;
  assume {:verifier.code 0} true;
  $i17 := 0;
  goto $bb3;
$bb2:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5853, 1} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5645, 16} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(497, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5645, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5646, 9} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64(0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5646, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5647, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64(0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5647, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i20 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5648, 20} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(498, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5648, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5649, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i20 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5650, 20} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(498, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5650, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, 0);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5652, 7} true;
  assume {:verifier.code 0} true;
  $i17 := 0;
  goto $bb3;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5658, 48} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i64(4, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5658, 55} true;
  assume {:verifier.code 0} true;
  $i24 := $mul.i64($i23, 28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5657, 55} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64(72, $i24);
  call {:cexpr "ResourcesSize"} boogie_si_record_i64($i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5660, 13} true;
  assume {:verifier.code 0} true;
  call $p26 := ExAllocatePoolWithTag(0, $i25, 1349673296);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5661, 19} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5663, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i32($p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5663, 33} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5663, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5666, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i64(0, 1073741823);
  goto $bb3;
$bb12:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5670, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5670, 28} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i64.i32($i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5670, 7} true;
  assume {:verifier.code 0} true;
  call $p32 := memset($p30, 0, $i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5672, 37} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p2, $mul.ref(0, 32)), $mul.ref(0, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5672, 37} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5671, 16} true;
  assume {:verifier.code 0} true;
  call $i35 := PptBuildResourceList($p0, 4, $p34, $p27);
  call {:cexpr "Status"} boogie_si_record_i64($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5674, 18} true;
  assume {:verifier.code 0} true;
  $i36 := $sge.i64($i35, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5674, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i36 == 1);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i36 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5677, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $i35;
  goto $bb3;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5682, 33} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5682, 33} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5683, 22} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5683, 22} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5681, 16} true;
  assume {:verifier.code 0} true;
  call $i41 := IoReportResourceUsage($0.ref, $p38, $p27, 8, $p40, $0.ref, 0, 0, $p1);
  call {:cexpr "Status"} boogie_si_record_i64($i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5686, 18} true;
  assume {:verifier.code 0} true;
  $i42 := $sge.i64($i41, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5686, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i42 == 1);
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i42 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5689, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $i41;
  goto $bb3;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5692, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.77, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5692, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i8($i43, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5692, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i44 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5695, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i64(0, 1073741823);
  goto $bb3;
$bb21:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5700, 7} true;
  assume {:verifier.code 0} true;
  $i45, $i46, $i47 := 0, 0, 0;
  goto $bb23;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5700, 17} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5702, 14} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i8($i47, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5702, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i48 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5709, 11} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb26:
  assume !(($i48 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5703, 15} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5703, 23} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i49, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5703, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i50 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5705, 11} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i50 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5706, 13} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5708, 9} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5840, 20} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(498, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5840, 20} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i8($M.0, $p153);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5840, 9} true;
  assume {:verifier.code 0} true;
  $i155 := $ne.i8($i154, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5840, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb92, $bb93;
$bb31:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5712, 22} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i64($i45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5712, 22} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p2, $mul.ref(0, 32)), $mul.ref($i51, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5712, 22} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.75, $p52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5713, 21} true;
  assume {:verifier.code 0} true;
  call $i54 := READ_PORT_UCHAR($p53);
  call {:cexpr "tmp___1"} boogie_si_record_i8($i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5715, 13} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i32($i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5715, 26} true;
  assume {:verifier.code 0} true;
  $i56 := $eq.i32($i55, 136);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5715, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i56 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5717, 23} true;
  assume {:verifier.code 0} true;
  call $i57 := READ_PORT_UCHAR($p53);
  call {:cexpr "tmp___2"} boogie_si_record_i8($i57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5719, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i8.i32($i57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5719, 28} true;
  assume {:verifier.code 0} true;
  $i59 := $slt.i32($i58, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5719, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb34, $bb35;
$bb33:
  assume !(($i56 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5724, 16} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb34:
  assume ($i59 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5721, 11} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i59 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5722, 13} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5724, 9} true;
  assume {:verifier.code 0} true;
  $i60 := 1;
  goto $bb38;
$bb37:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5727, 11} true;
  assume {:verifier.code 0} true;
  call $i61 := READ_PORT_UCHAR($p53);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5728, 16} true;
  assume {:verifier.code 0} true;
  call $i62 := READ_PORT_UCHAR($p53);
  call {:cexpr "cr"} boogie_si_record_i8($i62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5730, 15} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5730, 23} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i32($i63, 255);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5730, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb39, $bb40;
$bb38:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5741, 13} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i8($i60, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5741, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb45, $bb46;
$bb39:
  assume ($i64 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5732, 25} true;
  assume {:verifier.code 0} true;
  call $i65 := READ_PORT_UCHAR($p53);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5734, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5734, 33} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i8.i32($i62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5734, 30} true;
  assume {:verifier.code 0} true;
  $i68 := $eq.i32($i66, $i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5734, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  $i70 := $i46;
  goto $bb44;
$bb41:
  assume ($i68 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5736, 13} true;
  assume {:verifier.code 0} true;
  $i69 := 1;
  goto $bb43;
$bb42:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  $i69 := $i46;
  goto $bb43;
$bb43:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5738, 11} true;
  assume {:verifier.code 0} true;
  $i70 := $i69;
  goto $bb44;
$bb44:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i60 := $i70;
  goto $bb38;
$bb45:
  assume ($i71 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5744, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p53, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5745, 18} true;
  assume {:verifier.code 0} true;
  call $i72 := READ_PORT_UCHAR($p53);
  call {:cexpr "cr"} boogie_si_record_i8($i72);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5747, 15} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5747, 23} true;
  assume {:verifier.code 0} true;
  $i74 := $eq.i32($i73, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5747, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb47, $bb48;
$bb46:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  $i113, $i114 := $i60, $i47;
  goto $bb78;
$bb47:
  assume ($i74 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5749, 50} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p53, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5749, 25} true;
  assume {:verifier.code 0} true;
  call $i76 := READ_PORT_UCHAR($p75);
  call {:cexpr "tmp___3"} boogie_si_record_i8($i76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5750, 36} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i8.i32($i76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5750, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5750:49: warning: over-approximating bitwise operation and; */
  $i78 := $and.i32($i77, 240);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5750, 20} true;
  assume {:verifier.code 0} true;
  $i79 := $trunc.i32.i8($i78);
  call {:cexpr "cr"} boogie_si_record_i8($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5752, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5752, 25} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5752, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb49, $bb50;
$bb48:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  $i112 := $i47;
  goto $bb77;
$bb49:
  assume ($i81 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5753, 15} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i81 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5755, 19} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5755, 27} true;
  assume {:verifier.code 0} true;
  $i83 := $eq.i32($i82, 80);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5755, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb52, $bb53;
$bb51:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5777, 29} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p53, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5778, 64} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p53, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5778, 39} true;
  assume {:verifier.code 0} true;
  call $i97 := READ_PORT_UCHAR($p96);
  call {:cexpr "tmp___4"} boogie_si_record_i8($i97);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5779, 36} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i8.i32($i97);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5779, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5779:49: warning: over-approximating bitwise operation and; */
  $i99 := $and.i32($i98, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5779, 36} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i99);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5779, 34} true;
  assume {:verifier.code 0} true;
  $M.78 := $store.i64($M.78, $p4, $i100);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5781, 58} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p102 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5781, 67} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5781, 33} true;
  assume {:verifier.code 0} true;
  $i104 := $p2i.ref.i32($p103);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5782, 56} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i64($M.78, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5782, 47} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p3, $mul.ref(0, 32)), $mul.ref($i105, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5782, 47} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.76, $p106);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5782, 33} true;
  assume {:verifier.code 0} true;
  $i108 := $p2i.ref.i32($p107);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5781, 78} true;
  assume {:verifier.code 0} true;
  $i109 := $eq.i32($i104, $i108);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5781, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb66, $bb67;
$bb52:
  assume ($i83 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5756, 17} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb53:
  assume !(($i83 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5758, 21} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5758, 29} true;
  assume {:verifier.code 0} true;
  $i85 := $eq.i32($i84, 112);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5758, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i85 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5759, 19} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb55:
  assume !(($i85 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5761, 23} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5761, 31} true;
  assume {:verifier.code 0} true;
  $i87 := $eq.i32($i86, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5761, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i87 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5762, 21} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb57:
  assume !(($i87 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5764, 25} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5764, 33} true;
  assume {:verifier.code 0} true;
  $i89 := $eq.i32($i88, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5764, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb58, $bb59;
$bb58:
  assume ($i89 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5765, 23} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb59:
  assume !(($i89 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5767, 27} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5767, 35} true;
  assume {:verifier.code 0} true;
  $i91 := $eq.i32($i90, 144);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5767, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i91 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5768, 25} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb61:
  assume !(($i91 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5770, 29} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5770, 37} true;
  assume {:verifier.code 0} true;
  $i93 := $eq.i32($i92, 176);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5770, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i93 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5771, 27} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb63:
  assume !(($i93 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5773, 31} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i8.i32($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5773, 39} true;
  assume {:verifier.code 0} true;
  $i95 := $eq.i32($i94, 96);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5773, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i95 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5773, 46} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb65:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  $i111 := $i47;
  goto $bb69;
$bb66:
  assume ($i109 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5783, 42} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(498, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5783, 60} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p110, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5784, 29} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i109 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5786, 27} true;
  assume {:verifier.code 0} true;
  $i111 := 1;
  goto $bb69;
$bb69:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:verifier.code 0} true;
  goto $bb72;
$bb72:
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5795, 11} true;
  assume {:verifier.code 0} true;
  $i112 := $i111;
  goto $bb77;
$bb77:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5797, 9} true;
  assume {:verifier.code 0} true;
  $i113, $i114 := 0, $i112;
  goto $bb78;
$bb78:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5799, 14} true;
  assume {:verifier.code 0} true;
  $i115 := $ne.i8($i114, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5799, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb79, $bb80;
$bb79:
  assume ($i115 == 1);
  assume {:verifier.code 0} true;
  $i149 := $i114;
  goto $bb91;
$bb80:
  assume !(($i115 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5801, 23} true;
  assume {:verifier.code 0} true;
  call $i116 := READ_PORT_UCHAR($p53);
  call {:cexpr "SaveIdx"} boogie_si_record_i8($i116);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5802, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p53, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5803, 39} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p53, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5803, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p117, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5804, 48} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p53, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5804, 23} true;
  assume {:verifier.code 0} true;
  call $i119 := READ_PORT_UCHAR($p118);
  call {:cexpr "tmp___5"} boogie_si_record_i8($i119);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5805, 34} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i8.i32($i119);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5805, 47} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5805:47: warning: over-approximating bitwise operation and; */
  $i121 := $and.i32($i120, 248);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5805, 18} true;
  assume {:verifier.code 0} true;
  $i122 := $trunc.i32.i8($i121);
  call {:cexpr "cr"} boogie_si_record_i8($i122);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5807, 15} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i8.i32($i122);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5807, 23} true;
  assume {:verifier.code 0} true;
  $i124 := $eq.i32($i123, 192);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5807, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i124 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5808, 13} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb82:
  assume !(($i124 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5810, 17} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.i8.i32($i122);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5810, 25} true;
  assume {:verifier.code 0} true;
  $i126 := $eq.i32($i125, 160);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5810, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb84, $bb85;
$bb83:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5814, 15} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p53, 7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5815, 41} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p53, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5815, 15} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p127, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5816, 15} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p53, 96);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5817, 50} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p53, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5817, 25} true;
  assume {:verifier.code 0} true;
  call $i129 := READ_PORT_UCHAR($p128);
  call {:cexpr "tmp___6"} boogie_si_record_i8($i129);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5818, 39} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.i8.i32($i129);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5818, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5818:52: warning: over-approximating bitwise operation shl; */
  $i131 := $shl.i32($i130, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5818, 58} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5818:58: warning: over-approximating bitwise operation and; */
  $i132 := $and.i32($i131, 65280);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5818, 22} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i132);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5818, 20} true;
  assume {:verifier.code 0} true;
  $M.78 := $store.i64($M.78, $p4, $i133);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5819, 15} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p53, 97);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5820, 50} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p53, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5820, 25} true;
  assume {:verifier.code 0} true;
  call $i135 := READ_PORT_UCHAR($p134);
  call {:cexpr "tmp___7"} boogie_si_record_i8($i135);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5821, 23} true;
  assume {:verifier.code 0} true;
  $i136 := $zext.i8.i64($i135);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5821, 20} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i64($M.78, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5821, 20} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5821:20: warning: over-approximating bitwise operation or; */
  $i138 := $or.i64($i137, $i136);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5821, 20} true;
  assume {:verifier.code 0} true;
  $M.78 := $store.i64($M.78, $p4, $i138);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5823, 44} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p140 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5823, 53} true;
  assume {:verifier.code 0} true;
  $p141 := $load.ref($M.0, $p140);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5823, 19} true;
  assume {:verifier.code 0} true;
  $i142 := $p2i.ref.i32($p141);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5824, 43} true;
  assume {:verifier.code 0} true;
  $p143 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5824, 43} true;
  assume {:verifier.code 0} true;
  $p144 := $load.ref($M.78, $p143);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5824, 19} true;
  assume {:verifier.code 0} true;
  $i145 := $p2i.ref.i32($p144);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5823, 64} true;
  assume {:verifier.code 0} true;
  $i146 := $eq.i32($i142, $i145);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5823, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb86, $bb87;
$bb84:
  assume ($i126 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5810, 33} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb85:
  assume !(($i126 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5829, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p53, $i116);
  assume {:verifier.code 0} true;
  $i148 := $i114;
  goto $bb89;
$bb86:
  assume ($i146 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5825, 28} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(498, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5825, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p147, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5826, 15} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5828, 13} true;
  assume {:verifier.code 0} true;
  $i148 := 1;
  goto $bb89;
$bb89:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5832, 9} true;
  assume {:verifier.code 0} true;
  $i149 := $i148;
  goto $bb91;
$bb91:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5834, 22} true;
  assume {:verifier.code 0} true;
  $i150 := $zext.i8.i32($i45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5834, 30} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i32($i150, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5834, 14} true;
  assume {:verifier.code 0} true;
  $i152 := $trunc.i32.i8($i151);
  call {:cexpr "ii"} boogie_si_record_i8($i152);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5700, 7} true;
  assume {:verifier.code 0} true;
  $i45, $i46, $i47 := $i152, $i113, $i149;
  goto $bb23;
$bb92:
  assume ($i155 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5842, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5846, 60} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5846, 60} true;
  assume {:verifier.code 0} true;
  $p157 := $load.ref($M.0, $p156);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5847, 63} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5847, 63} true;
  assume {:verifier.code 0} true;
  $p159 := $load.ref($M.0, $p158);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5846, 16} true;
  assume {:verifier.code 0} true;
  call $i160 := IoReportResourceUsage($0.ref, $p157, $0.ref, 0, $p159, $0.ref, 0, 0, $p1);
  call {:cexpr "Status"} boogie_si_record_i64($i160);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5851, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $i160;
  goto $bb3;
}
const PptDetectEppPortIfDot3DevicePresent: ref;
axiom (PptDetectEppPortIfDot3DevicePresent == $sub.ref(0, 179552));
procedure {:inline 1} PptDetectEppPortIfDot3DevicePresent($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5153, 27} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5153, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5153, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5153, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64(0, $i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5153, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5156, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5186, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5160, 15} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5160, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5161, 15} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5161, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5162, 15} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5162, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p8, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5163, 35} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5163, 46} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5163, 16} true;
  assume {:verifier.code 0} true;
  call $i11 := PptTrySelectDevice($p9, $p10);
  call {:cexpr "status"} boogie_si_record_i64($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5165, 18} true;
  assume {:verifier.code 0} true;
  $i12 := $sge.i64($i11, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5165, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i12 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5168, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5172, 7} true;
  assume {:verifier.code 0} true;
  call PptDetectEppPort($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5173, 15} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5173, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5174, 15} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5174, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5175, 15} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5175, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p15, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5176, 34} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5176, 45} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5176, 16} true;
  assume {:verifier.code 0} true;
  call $i18 := PptDeselectDevice($p16, $p17);
  call {:cexpr "status"} boogie_si_record_i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5178, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $sge.i64($i18, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5178, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i19 == 1);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5181, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5184, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const PptDetectEppPortIfUserRequested: ref;
axiom (PptDetectEppPortIfUserRequested == $sub.ref(0, 180584));
procedure {:inline 1} PptDetectEppPortIfUserRequested($p0: ref)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5192, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5192, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i64(0, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5192, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5194, 9} true;
  assume {:verifier.code 0} true;
  call PptDetectEppPort($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5196, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5198, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptBuildResourceList: ref;
axiom (PptBuildResourceList == $sub.ref(0, 181616));
procedure {:inline 1} PptBuildResourceList($p0: ref, $i1: i64, $p2: ref, $p3: ref)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i64;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i64;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i64;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $i75: i32;
  var $i76: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5859, 16} true;
  assume {:verifier.code 0} true;
  call {:cexpr "PptBuildResourceList:arg:Partial"} boogie_si_record_i64($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5859, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5859, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5860, 51} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(328, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5860, 51} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5860, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p8 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p9 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5860, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, $i6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5861, 47} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(336, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5861, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5861, 16} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p13 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p14 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5861, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, $i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5862, 16} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p16 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p17 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p18 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5862, 52} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p18, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5863, 16} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p20 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p21 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p22 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5863, 53} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p22, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5864, 16} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p24 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p25 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p26 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5864, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p26, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5867, 7} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5867, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5869, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i64($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5869, 22} true;
  assume {:verifier.code 0} true;
  $i29 := $ult.i64($i28, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5869, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5871, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i29 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5872, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5874, 20} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p31 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p32 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p33 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5874, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i64($i27);
  $p35 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i34, 28));
  $p36 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i34, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5874, 75} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5875, 20} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p38 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p39 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p40 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5875, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i64($i27);
  $p42 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i41, 28));
  $p43 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i41, 28)), $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5877, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p43, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5878, 20} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p45 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p46 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p47 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5878, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i64($i27);
  $p49 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i48, 28));
  $p50 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i48, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5878, 76} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p50, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 52} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 50} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 50} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p2, $mul.ref($i52, 8));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 38} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i64($M.75, $p53);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5879, 20} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p56 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p57 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p58 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5879, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i64($i27);
  $p60 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i59, 28));
  $p61 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i59, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 16} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p61);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 21} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p62, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 27} true;
  assume {:verifier.code 0} true;
  $p64 := $bitcast.ref.ref($p63);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5881, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p64, $i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5882, 20} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p66 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  $p67 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  $p68 := $add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5882, 9} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i8.i64($i27);
  $p70 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i69, 28));
  $p71 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i69, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5884, 16} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p71);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5884, 21} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p72, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5884, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p73, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5885, 21} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i8.i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5885, 28} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i32($i74, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5885, 13} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i8($i75);
  call {:cexpr "i"} boogie_si_record_i8($i76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5867, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $i76;
  goto $bb1;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5889, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const IoReportResourceUsage: ref;
axiom (IoReportResourceUsage == $sub.ref(0, 182648));
procedure {:inline 1} IoReportResourceUsage($p0: ref, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref, $i6: i64, $i7: i8, $p8: ref)
  returns ($r: i64);
const PptDetermineFifoWidth: ref;
axiom (PptDetermineFifoWidth == $sub.ref(0, 183680));
procedure {:inline 1} PptDetermineFifoWidth($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5371, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5371, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5371, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5371, 51} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5372, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $sub.i8(0, 12));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5373, 45} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p6 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5373, 53} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5373, 18} true;
  assume {:verifier.code 0} true;
  call $i8 := READ_PORT_UCHAR($p7);
  call {:cexpr "bConfigA"} boogie_si_record_i8($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5375, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5375, 42} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5375:42: warning: over-approximating bitwise operation and; */
  $i10 := $and.i32($i9, 112);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5375, 49} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5375:49: warning: over-approximating bitwise operation ashr; */
  $i11 := $ashr.i32($i10, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5375, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5374, 18} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p14 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(72, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5374, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, $i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5376, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, 20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5378, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptDetermineFifoDepth: ref;
axiom (PptDetermineFifoDepth == $sub.ref(0, 184712));
procedure {:inline 1} PptDetermineFifoDepth($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i13: i8;
  var $i14: i64;
  var $i15: i8;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i1;
  var $i20: i32;
  var $i21: i32;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i8;
  var $i26: i64;
  var $i27: i8;
  var $i28: i64;
  var $i29: i8;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i1;
  var $i34: i8;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i8;
  var $i42: i64;
  var $i43: i32;
  var $i44: i32;
  var $i45: i1;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5282, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5282, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5282, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5282, 51} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5283, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p6 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5283, 39} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5285, 17} true;
  assume {:verifier.code 0} true;
  call $i8 := READ_PORT_UCHAR($p4);
  call {:cexpr "ecrLast"} boogie_si_record_i8($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5286, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $sub.i8(0, 44));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5287, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := READ_PORT_UCHAR($p4);
  call {:cexpr "ecr"} boogie_si_record_i8($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5289, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5289, 19} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5289:19: warning: over-approximating bitwise operation and; */
  $i11 := $and.i32($i10, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5289, 24} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5289, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5293, 9} true;
  assume {:verifier.code 0} true;
  $i13, $i14 := 0, 0;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5353, 12} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5354, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5293, 19} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5295, 19} true;
  assume {:verifier.code 0} true;
  call $i15 := READ_PORT_UCHAR($p4);
  call {:cexpr "tmp"} boogie_si_record_i8($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5296, 16} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5296, 25} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5296:25: warning: over-approximating bitwise operation and; */
  $i17 := $and.i32($i16, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5296, 30} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5296, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5297, 28} true;
  assume {:verifier.code 0} true;
  $i19 := $ule.i64($i14, 4098);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5297, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i18 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5303, 13} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5299, 13} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i19 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5300, 15} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5302, 11} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5318, 9} true;
  assume {:verifier.code 0} true;
  $i27, $i28 := 0, 0;
  goto $bb12;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5307, 46} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5307, 66} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5307:66: warning: over-approximating bitwise operation and; */
  $i21 := $and.i32($i20, 255);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5307, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i8($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5306, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5308, 38} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5308, 58} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i23, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5308, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  call {:cexpr "writeFifoDepth"} boogie_si_record_i8($i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5309, 24} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i14, 1);
  call {:cexpr "limitCount"} boogie_si_record_i64($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5293, 9} true;
  assume {:verifier.code 0} true;
  $i13, $i14 := $i25, $i26;
  goto $bb3;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5318, 19} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5320, 23} true;
  assume {:verifier.code 0} true;
  call $i29 := READ_PORT_UCHAR($p4);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5321, 16} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5321, 29} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5321:29: warning: over-approximating bitwise operation and; */
  $i31 := $and.i32($i30, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5321, 34} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5321, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i32 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5322, 28} true;
  assume {:verifier.code 0} true;
  $i33 := $ule.i64($i28, 4098);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5322, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i32 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5328, 13} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume ($i33 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5324, 13} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i33 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5325, 15} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5327, 11} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5345, 11} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5345, 34} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5345, 31} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i43, $i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5345, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb25, $bb26;
$bb20:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5330, 24} true;
  assume {:verifier.code 0} true;
  call $i34 := READ_PORT_UCHAR($p7);
  call {:cexpr "testData"} boogie_si_record_i8($i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5331, 15} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5331, 33} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5331, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:5331:52: warning: over-approximating bitwise operation and; */
  $i37 := $and.i32($i36, 255);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5331, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i35, $i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5331, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i38 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5333, 15} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5336, 13} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5362, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb24:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5339, 35} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5339, 54} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i39, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5339, 27} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i8($i40);
  call {:cexpr "readFifoDepth"} boogie_si_record_i8($i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5340, 22} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i28, 1);
  call {:cexpr "limitCount"} boogie_si_record_i64($i42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5318, 9} true;
  assume {:verifier.code 0} true;
  $i27, $i28 := $i41, $i42;
  goto $bb12;
$bb25:
  assume ($i45 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5346, 22} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i64($i27);
  call {:cexpr "wFifoDepth"} boogie_si_record_i64($i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5347, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i45 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5348, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5350, 9} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb27:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5352, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5357, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5358, 18} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p48 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(64, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5358, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, $i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 5360, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
}
const Ppt1284_3AssignAddress: ref;
axiom (Ppt1284_3AssignAddress == $sub.ref(0, 185744));
procedure {:inline 1} Ppt1284_3AssignAddress($p0: ref)
  returns ($r: i64)
{
  var $i1: i8;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $i18: i64;
  var $p19: ref;
  var $i20: i8;
  var $i21: i8;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i8;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $i30: i8;
  var $i31: i8;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $i35: i8;
  var $i36: i8;
  var $i37: i32;
  var $i38: i1;
  var $i39: i1;
  var $i40: i32;
  var $i41: i32;
  var $i42: i8;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i1;
  var $i47: i8;
  var $i48: i32;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $i54: i32;
  var $i55: i32;
  var $i56: i8;
  var $i57: i8;
  var $i58: i1;
  var $i59: i8;
  var $i60: i8;
  var $i61: i8;
  var $i62: i32;
  var $i63: i32;
  var $i64: i1;
  var $i65: i64;
  var $i66: i8;
  var $i67: i32;
  var $i68: i1;
  var $i70: i32;
  var $i71: i1;
  var $i72: i64;
  var $i73: i8;
  var $i74: i32;
  var $i75: i1;
  var $i69: i8;
  var $i76: i32;
  var $i77: i32;
  var $i78: i8;
  var $i79: i32;
  var $i80: i1;
  var $i81: i8;
  var $i82: i8;
  var $i83: i8;
  var $i84: i8;
  var $i85: i8;
  var $i86: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4283, 13} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4283, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_char();
  call {:cexpr "smack:ext:__VERIFIER_nondet_char"} boogie_si_record_i8($i1);
  call {:cexpr "i"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4305, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4305, 47} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4306, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4307, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4308, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := READ_PORT_UCHAR($p6);
  call {:cexpr "value"} boogie_si_record_i8($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4309, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4309, 46} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4309:46: warning: over-approximating bitwise operation and; */
  $i9 := $and.i32($i8, 4294967287);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4309, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4309:52: warning: over-approximating bitwise operation or; */
  $i10 := $or.i32($i9, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4309, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i8($i10);
  call {:cexpr "newvalue"} boogie_si_record_i8($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4310, 34} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4310, 48} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4310:48: warning: over-approximating bitwise operation and; */
  $i13 := $and.i32($i12, 4294967263);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4310, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  call {:cexpr "newvalue"} boogie_si_record_i8($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4311, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4312, 56} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4312, 70} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4312:70: warning: over-approximating bitwise operation and; */
  $i16 := $and.i32($i15, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4312, 40} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4312, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4313, 37} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4313, 37} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref($i18, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4313, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.32, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4313, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4314, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4315, 16} true;
  assume {:verifier.code 0} true;
  call $i21 := READ_PORT_UCHAR($p5);
  call {:cexpr "status"} boogie_si_record_i8($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4317, 10} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4317, 22} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4317:22: warning: over-approximating bitwise operation and; */
  $i23 := $and.i32($i22, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4317, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4317, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i24 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4319, 39} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(4, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4319, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4320, 9} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4321, 18} true;
  assume {:verifier.code 0} true;
  call $i26 := READ_PORT_UCHAR($p5);
  call {:cexpr "status"} boogie_si_record_i8($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4323, 12} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i32($i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4323, 24} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4323:24: warning: over-approximating bitwise operation and; */
  $i28 := $and.i32($i27, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4323, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4323, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  $i85 := 0;
  goto $bb43;
$bb3:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4325, 41} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(5, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4325, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4326, 11} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4327, 20} true;
  assume {:verifier.code 0} true;
  call $i31 := READ_PORT_UCHAR($p5);
  call {:cexpr "status"} boogie_si_record_i8($i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4329, 14} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4329, 26} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4329:26: warning: over-approximating bitwise operation and; */
  $i33 := $and.i32($i32, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4329, 32} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i33, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4329, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  $i84 := 0;
  goto $bb42;
$bb5:
  assume ($i34 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4331, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4334, 13} true;
  assume {:verifier.code 0} true;
  $i35, $i36 := 0, 0;
  goto $bb7;
$bb6:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i83 := 0;
  goto $bb41;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4334, 23} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4336, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4336, 31} true;
  assume {:verifier.code 0} true;
  $i38 := $slt.i32($i37, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4336, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i38 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4337, 22} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i8($i36, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4337, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i38 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4343, 17} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb11:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4340, 19} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb12:
  assume !(($i39 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4339, 17} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4342, 15} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4368, 43} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(6, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4368, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4369, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i8($i35, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4369, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb19, $bb20;
$bb15:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4346, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4347, 42} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4347, 54} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i40, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4347, 26} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i32.i8($i41);
  call {:cexpr "number"} boogie_si_record_i8($i42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4348, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4349, 23} true;
  assume {:verifier.code 0} true;
  call $i43 := READ_PORT_UCHAR($p5);
  call {:cexpr "tmp"} boogie_si_record_i8($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4351, 20} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4351, 29} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4351:29: warning: over-approximating bitwise operation and; */
  $i45 := $and.i32($i44, 128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4351, 36} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i32($i45, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4351, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i46 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4353, 15} true;
  assume {:verifier.code 0} true;
  $i47 := 1;
  goto $bb18;
$bb17:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  $i47 := $i36;
  goto $bb18;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4357, 50} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4357, 64} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4357:64: warning: over-approximating bitwise operation and; */
  $i49 := $and.i32($i48, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4357, 34} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i8($i49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4356, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4359, 50} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4359, 64} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4359:64: warning: over-approximating bitwise operation or; */
  $i52 := $or.i32($i51, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4359, 34} true;
  assume {:verifier.code 0} true;
  $i53 := $trunc.i32.i8($i52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4358, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i53);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4360, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4362, 50} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i8.i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4362, 64} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4362:64: warning: over-approximating bitwise operation and; */
  $i55 := $and.i32($i54, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4362, 34} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i32.i8($i55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4361, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i56);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4363, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4334, 13} true;
  assume {:verifier.code 0} true;
  $i35, $i36 := $i42, $i47;
  goto $bb7;
$bb19:
  assume ($i58 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4371, 36} true;
  assume {:verifier.code 0} true;
  call $i59 := PptCheckIfNon1284_3Present($p0);
  call {:cexpr "bStlNon1284_3Found"} boogie_si_record_i8($i59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4376, 15} true;
  assume {:verifier.code 0} true;
  $i60, $i61 := 0, 0;
  goto $bb21;
$bb20:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  $i82 := $i35;
  goto $bb40;
$bb21:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4372, 34} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4376, 25} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4378, 21} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i8.i32($i60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4378, 32} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4378, 30} true;
  assume {:verifier.code 0} true;
  $i64 := $slt.i32($i62, $i63);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4378, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i64 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4380, 17} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i64 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4381, 19} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4384, 66} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i8.i64($i60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4384, 29} true;
  assume {:verifier.code 0} true;
  call $i66 := PptCheckIfStl1284_3($p0, $i65, $i59);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i66);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4387, 26} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i8.i32($i66);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4387, 23} true;
  assume {:verifier.code 0} true;
  $i68 := $eq.i32(1, $i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4387, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb27, $bb28;
$bb26:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4408, 22} true;
  assume {:verifier.code 0} true;
  $i79 := $zext.i8.i32($i61);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4408, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $eq.i32(1, $i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4408, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb37, $bb38;
$bb27:
  assume ($i68 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4388, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $i61;
  goto $bb29;
$bb28:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4404, 31} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i8.i32($i60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4404, 40} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i76, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4404, 23} true;
  assume {:verifier.code 0} true;
  $i78 := $trunc.i32.i8($i77);
  call {:cexpr "idx"} boogie_si_record_i8($i78);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4376, 15} true;
  assume {:verifier.code 0} true;
  $i60, $i61 := $i78, $i69;
  goto $bb21;
$bb30:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4391, 26} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i32($i59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4391, 23} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32(1, $i70);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4391, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i71 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4393, 71} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i64($i60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4393, 31} true;
  assume {:verifier.code 0} true;
  call $i73 := PptCheckIfStlProductId($p0, $i72);
  call {:cexpr "tmp___1"} boogie_si_record_i8($i73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4395, 28} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i8.i32($i73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4395, 25} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32(1, $i74);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4395, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb33, $bb34;
$bb32:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb33:
  assume ($i75 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4397, 21} true;
  assume {:verifier.code 0} true;
  $i69 := 1;
  goto $bb29;
$bb34:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4400, 17} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4402, 17} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb37:
  assume ($i80 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4410, 13} true;
  assume {:verifier.code 0} true;
  $i81 := $i60;
  goto $bb39;
$bb38:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  $i81 := $i35;
  goto $bb39;
$bb39:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4412, 11} true;
  assume {:verifier.code 0} true;
  $i82 := $i81;
  goto $bb40;
$bb40:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4414, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $i82;
  goto $bb41;
$bb41:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4416, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $i83;
  goto $bb42;
$bb42:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4418, 5} true;
  assume {:verifier.code 0} true;
  $i85 := $i84;
  goto $bb43;
$bb43:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4420, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4421, 13} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i64($i85);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4421, 5} true;
  assume {:verifier.code 0} true;
  $r := $i86;
  $exn := false;
  return;
}
const PptCheckIfNon1284_3Present: ref;
axiom (PptCheckIfNon1284_3Present == $sub.ref(0, 186776));
procedure {:inline 1} PptCheckIfNon1284_3Present($p0: ref)
  returns ($r: i8)
{
  var $i1: i8;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $i18: i64;
  var $p19: ref;
  var $i20: i8;
  var $i21: i8;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i32;
  var $i27: i8;
  var $i28: i8;
  var $i29: i8;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i8;
  var $i38: i8;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i42: i8;
  var $i43: i8;
  var $i44: i8;
  var $i45: i8;
  var $i46: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4426, 13} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4426, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_char();
  call {:cexpr "smack:ext:__VERIFIER_nondet_char"} boogie_si_record_i8($i1);
  call {:cexpr "i"} boogie_si_record_i8($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4440, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4440, 41} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4441, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4442, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4443, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := READ_PORT_UCHAR($p6);
  call {:cexpr "value"} boogie_si_record_i8($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4444, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4444, 46} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4444:46: warning: over-approximating bitwise operation and; */
  $i9 := $and.i32($i8, 4294967287);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4444, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4444:52: warning: over-approximating bitwise operation or; */
  $i10 := $or.i32($i9, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4444, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i8($i10);
  call {:cexpr "newvalue"} boogie_si_record_i8($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4445, 34} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4445, 48} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4445:48: warning: over-approximating bitwise operation and; */
  $i13 := $and.i32($i12, 4294967263);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4445, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  call {:cexpr "newvalue"} boogie_si_record_i8($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4446, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4447, 56} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4447, 70} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4447:70: warning: over-approximating bitwise operation and; */
  $i16 := $and.i32($i15, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4447, 40} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4447, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4448, 37} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4448, 37} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref($i18, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4448, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.32, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4448, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4449, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4450, 16} true;
  assume {:verifier.code 0} true;
  call $i21 := READ_PORT_UCHAR($p5);
  call {:cexpr "status"} boogie_si_record_i8($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4452, 10} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4452, 22} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4452:22: warning: over-approximating bitwise operation and; */
  $i23 := $and.i32($i22, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4452, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4452, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i24 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4454, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4454, 35} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4454:35: warning: over-approximating bitwise operation and; */
  $i26 := $and.i32($i25, 64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4454, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i32.i8($i26);
  call {:cexpr "ucAckStatus"} boogie_si_record_i8($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4455, 39} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(4, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4455, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4456, 9} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4457, 18} true;
  assume {:verifier.code 0} true;
  call $i29 := READ_PORT_UCHAR($p5);
  call {:cexpr "status"} boogie_si_record_i8($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4459, 12} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4459, 24} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4459:24: warning: over-approximating bitwise operation and; */
  $i31 := $and.i32($i30, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4459, 31} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4459, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  $i46 := 0;
  goto $bb12;
$bb3:
  assume ($i32 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4460, 13} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4460, 34} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4460, 46} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4460:46: warning: over-approximating bitwise operation and; */
  $i35 := $and.i32($i34, 64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4460, 30} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i33, $i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4460, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  $i45 := 0;
  goto $bb11;
$bb5:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4463, 43} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(5, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4463, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4464, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4465, 22} true;
  assume {:verifier.code 0} true;
  call $i38 := READ_PORT_UCHAR($p5);
  call {:cexpr "status"} boogie_si_record_i8($i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4467, 16} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i32($i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4467, 28} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4467:28: warning: over-approximating bitwise operation and; */
  $i40 := $and.i32($i39, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4467, 34} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i40, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4467, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  $i43 := 0;
  goto $bb10;
$bb7:
  assume ($i41 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4469, 11} true;
  assume {:verifier.code 0} true;
  $i42 := 1;
  goto $bb9;
$bb8:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  $i42 := 0;
  goto $bb9;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4471, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $i42;
  goto $bb10;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4473, 41} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(6, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4473, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p4, $i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4474, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $i43;
  goto $bb11;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4476, 5} true;
  assume {:verifier.code 0} true;
  $i46 := $i45;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4478, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4479, 5} true;
  assume {:verifier.code 0} true;
  $r := $i46;
  $exn := false;
  return;
}
const PptCheckIfStl1284_3: ref;
axiom (PptCheckIfStl1284_3 == $sub.ref(0, 187808));
procedure {:inline 1} PptCheckIfStl1284_3($p0: ref, $i1: i64, $i2: i8)
  returns ($r: i8)
{
  var $i3: i8;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i8;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i20: i64;
  var $p21: ref;
  var $i22: i8;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i8;
  var $i28: i8;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i8;
  var $i33: i8;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i64;
  var $i38: i8;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i32;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $i48: i32;
  var $i49: i32;
  var $i50: i8;
  var $i51: i8;
  var $i52: i1;
  var $i54: i64;
  var $i55: i8;
  var $i56: i64;
  var $i57: i8;
  var $i58: i8;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i32;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
  var $i67: i8;
  var $i68: i32;
  var $i69: i32;
  var $i70: i1;
  var $i71: i32;
  var $i72: i32;
  var $i73: i8;
  var $i53: i8;
  var $i74: i8;
  var $i75: i8;
  var $i76: i8;
  var $i77: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4485, 13} true;
  assume {:verifier.code 1} true;
  call {:cexpr "PptCheckIfStl1284_3:arg:ulDaisyIndex"} boogie_si_record_i64($i1);
  call {:cexpr "PptCheckIfStl1284_3:arg:bNoStrobe"} boogie_si_record_i8($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4485, 13} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_char();
  call {:cexpr "smack:ext:__VERIFIER_nondet_char"} boogie_si_record_i8($i3);
  call {:cexpr "i"} boogie_si_record_i8($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4501, 38} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p5 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4501, 47} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4502, 35} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4503, 36} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p6, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4504, 15} true;
  assume {:verifier.code 0} true;
  call $i9 := READ_PORT_UCHAR($p8);
  call {:cexpr "value"} boogie_si_record_i8($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4505, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4505, 46} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4505:46: warning: over-approximating bitwise operation and; */
  $i11 := $and.i32($i10, 4294967287);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4505, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4505:52: warning: over-approximating bitwise operation or; */
  $i12 := $or.i32($i11, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4505, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  call {:cexpr "newvalue"} boogie_si_record_i8($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4506, 34} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4506, 48} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4506:48: warning: over-approximating bitwise operation and; */
  $i15 := $and.i32($i14, 4294967263);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4506, 18} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  call {:cexpr "newvalue"} boogie_si_record_i8($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4507, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p8, $i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4508, 56} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4508, 70} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4508:70: warning: over-approximating bitwise operation and; */
  $i18 := $and.i32($i17, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4508, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4508, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p8, $i19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4509, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i64($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4509, 37} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref($i20, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4509, 37} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.32, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4509, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4510, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4511, 16} true;
  assume {:verifier.code 0} true;
  call $i23 := READ_PORT_UCHAR($p7);
  call {:cexpr "status"} boogie_si_record_i8($i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4513, 10} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i32($i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4513, 22} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4513:22: warning: over-approximating bitwise operation and; */
  $i25 := $and.i32($i24, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4513, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4513, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i26 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4515, 39} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(4, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4515, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4516, 9} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4517, 18} true;
  assume {:verifier.code 0} true;
  call $i28 := READ_PORT_UCHAR($p7);
  call {:cexpr "status"} boogie_si_record_i8($i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4519, 12} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4519, 24} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4519:24: warning: over-approximating bitwise operation and; */
  $i30 := $and.i32($i29, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4519, 31} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4519, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  $i77 := 0;
  goto $bb24;
$bb3:
  assume ($i31 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4521, 41} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(5, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4521, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4522, 11} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4523, 20} true;
  assume {:verifier.code 0} true;
  call $i33 := READ_PORT_UCHAR($p7);
  call {:cexpr "status"} boogie_si_record_i8($i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4525, 14} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4525, 26} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4525:26: warning: over-approximating bitwise operation and; */
  $i35 := $and.i32($i34, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4525, 32} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i35, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4525, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i76 := 0;
  goto $bb23;
$bb5:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4527, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4529, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4529:52: warning: over-approximating bitwise operation or; */
  $i37 := $or.i64(136, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4529, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i64.i8($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4528, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4530, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4532, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i64($i1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4532, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  $i75 := 0;
  goto $bb22;
$bb7:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4533, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4533, 32} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i40, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4533, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb9:
  assume ($i41 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4536, 50} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4536, 64} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4536:64: warning: over-approximating bitwise operation and; */
  $i43 := $and.i32($i42, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4536, 34} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i8($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4535, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p8, $i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4538, 50} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4538, 64} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4538:64: warning: over-approximating bitwise operation or; */
  $i46 := $or.i32($i45, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4538, 34} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4537, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p8, $i47);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4539, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4541, 50} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4541, 64} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4541:64: warning: over-approximating bitwise operation and; */
  $i49 := $and.i32($i48, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4541, 34} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i8($i49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4540, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p8, $i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4542, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4544, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4546, 11} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4551, 13} true;
  assume {:verifier.code 0} true;
  $i51 := $sub.i8(0, 16);
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4551, 23} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4553, 19} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i8($i51, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4553, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i52 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4555, 15} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i52 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4556, 17} true;
  assume {:verifier.code 0} true;
  $i53 := 1;
  goto $bb18;
$bb17:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4559, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4561, 56} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4561:56: warning: over-approximating bitwise operation or; */
  $i54 := $or.i64(128, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4561, 34} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i64.i8($i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4560, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4562, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4564, 56} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4564:56: warning: over-approximating bitwise operation or; */
  $i56 := $or.i64(136, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4564, 34} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i64.i8($i56);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4563, 17} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4565, 17} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4566, 31} true;
  assume {:verifier.code 0} true;
  call $i58 := READ_PORT_UCHAR($p7);
  call {:cexpr "ucReadValue"} boogie_si_record_i8($i58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4567, 34} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i32($i58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4567, 51} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4567:51: warning: over-approximating bitwise operation shl; */
  $i60 := $shl.i32($i59, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4567, 57} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4567:57: warning: over-approximating bitwise operation and; */
  $i61 := $and.i32($i60, 112);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4567, 33} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i8($i61);
  call {:cexpr "ucReadPattern"} boogie_si_record_i8($i62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4568, 33} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i62);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4568, 55} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i8.i32($i58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4568, 72} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4568:72: warning: over-approximating bitwise operation and; */
  $i65 := $and.i32($i64, 128);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4568, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4568:52: warning: over-approximating bitwise operation or; */
  $i66 := $or.i32($i63, $i65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4568, 33} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i32.i8($i66);
  call {:cexpr "ucReadPattern"} boogie_si_record_i8($i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4570, 19} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4570, 41} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i8.i32($i51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4570, 38} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i32($i68, $i69);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4570, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb19, $bb20;
$bb18:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4579, 43} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(6, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4579, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p6, $i74);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4580, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $i53;
  goto $bb22;
$bb19:
  assume ($i70 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4572, 17} true;
  assume {:verifier.code 0} true;
  $i53 := 0;
  goto $bb18;
$bb20:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4575, 35} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i8.i32($i51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4575, 58} true;
  assume {:verifier.code 0} true;
  $i72 := $sub.i32($i71, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4575, 35} true;
  assume {:verifier.code 0} true;
  $i73 := $trunc.i32.i8($i72);
  call {:cexpr "ucExpectedPattern"} boogie_si_record_i8($i73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4551, 13} true;
  assume {:verifier.code 0} true;
  $i51 := $i73;
  goto $bb13;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4582, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $i75;
  goto $bb23;
$bb23:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4584, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $i76;
  goto $bb24;
$bb24:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4586, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p8, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4587, 5} true;
  assume {:verifier.code 0} true;
  $r := $i77;
  $exn := false;
  return;
}
const PptCheckIfStlProductId: ref;
axiom (PptCheckIfStlProductId == $sub.ref(0, 188840));
procedure {:inline 1} PptCheckIfStlProductId($p0: ref, $i1: i64)
  returns ($r: i8)
{
  var $i2: i8;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i8;
  var $i13: i32;
  var $i14: i32;
  var $i15: i8;
  var $i16: i32;
  var $i17: i32;
  var $i18: i8;
  var $i19: i64;
  var $p20: ref;
  var $i21: i8;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i8;
  var $i27: i8;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $i31: i8;
  var $i32: i8;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i64;
  var $i37: i8;
  var $i38: i8;
  var $i39: i32;
  var $i40: i32;
  var $i41: i8;
  var $i42: i32;
  var $i43: i32;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $i48: i32;
  var $i49: i32;
  var $i50: i8;
  var $i51: i8;
  var $i52: i32;
  var $i53: i32;
  var $i54: i8;
  var $i55: i32;
  var $i56: i32;
  var $i57: i32;
  var $i58: i8;
  var $i59: i32;
  var $i60: i32;
  var $i61: i8;
  var $i62: i32;
  var $i63: i32;
  var $i64: i8;
  var $i65: i32;
  var $i66: i32;
  var $i67: i8;
  var $i68: i8;
  var $i69: i32;
  var $i70: i32;
  var $i71: i8;
  var $i72: i32;
  var $i73: i32;
  var $i74: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i78: i32;
  var $i79: i32;
  var $i80: i8;
  var $i81: i8;
  var $i82: i32;
  var $i83: i32;
  var $i84: i8;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i8;
  var $i89: i32;
  var $i90: i32;
  var $i91: i8;
  var $i92: i32;
  var $i93: i32;
  var $i94: i8;
  var $i95: i32;
  var $i96: i32;
  var $i97: i8;
  var $i98: i32;
  var $i99: i32;
  var $i100: i32;
  var $i101: i32;
  var $i102: i16;
  var $i103: i32;
  var $i104: i1;
  var $i106: i32;
  var $i107: i1;
  var $i108: i8;
  var $i105: i8;
  var $i109: i8;
  var $i110: i8;
  var $i111: i8;
  var $i112: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4593, 13} true;
  assume {:verifier.code 1} true;
  call {:cexpr "PptCheckIfStlProductId:arg:ulDaisyIndex"} boogie_si_record_i64($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4593, 13} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_char();
  call {:cexpr "smack:ext:__VERIFIER_nondet_char"} boogie_si_record_i8($i2);
  call {:cexpr "i"} boogie_si_record_i8($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4613, 38} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4613, 47} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4614, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, $mul.ref(1, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4615, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p5, $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4616, 15} true;
  assume {:verifier.code 0} true;
  call $i8 := READ_PORT_UCHAR($p7);
  call {:cexpr "value"} boogie_si_record_i8($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4617, 35} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4617, 46} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4617:46: warning: over-approximating bitwise operation and; */
  $i10 := $and.i32($i9, 4294967287);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4617, 52} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4617:52: warning: over-approximating bitwise operation or; */
  $i11 := $or.i32($i10, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4617, 18} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i8($i11);
  call {:cexpr "newvalue"} boogie_si_record_i8($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4618, 34} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4618, 48} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4618:48: warning: over-approximating bitwise operation and; */
  $i14 := $and.i32($i13, 4294967263);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4618, 18} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i8($i14);
  call {:cexpr "newvalue"} boogie_si_record_i8($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4619, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4620, 56} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4620, 70} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4620:70: warning: over-approximating bitwise operation and; */
  $i17 := $and.i32($i16, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4620, 40} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4620, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4621, 37} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i64($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4621, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref($i19, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4621, 37} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.32, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4621, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4622, 7} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4623, 16} true;
  assume {:verifier.code 0} true;
  call $i22 := READ_PORT_UCHAR($p6);
  call {:cexpr "status"} boogie_si_record_i8($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4625, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4625, 22} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4625:22: warning: over-approximating bitwise operation and; */
  $i24 := $and.i32($i23, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4625, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4625, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4627, 39} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(4, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4627, 9} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4628, 9} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4629, 18} true;
  assume {:verifier.code 0} true;
  call $i27 := READ_PORT_UCHAR($p6);
  call {:cexpr "status"} boogie_si_record_i8($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4631, 12} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4631, 24} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4631:24: warning: over-approximating bitwise operation and; */
  $i29 := $and.i32($i28, 184);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4631, 31} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4631, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  $i112 := 0;
  goto $bb15;
$bb3:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4633, 41} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(5, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4633, 11} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4634, 11} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4635, 20} true;
  assume {:verifier.code 0} true;
  call $i32 := READ_PORT_UCHAR($p6);
  call {:cexpr "status"} boogie_si_record_i8($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4637, 14} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4637, 26} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4637:26: warning: over-approximating bitwise operation and; */
  $i34 := $and.i32($i33, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4637, 32} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 48);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4637, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  $i111 := 0;
  goto $bb14;
$bb5:
  assume ($i35 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4639, 64} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4639:64: warning: over-approximating bitwise operation or; */
  $i36 := $or.i64(16, $i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4639, 43} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i64.i8($i36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4639, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4640, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4641, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4642, 38} true;
  assume {:verifier.code 0} true;
  call $i38 := READ_PORT_UCHAR($p6);
  call {:cexpr "ucProdIdLoByteHiNibble"} boogie_si_record_i8($i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4643, 38} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i8.i32($i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4643, 66} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4643:66: warning: over-approximating bitwise operation and; */
  $i40 := $and.i32($i39, 240);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4643, 38} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i8($i40);
  call {:cexpr "ucProdIdLoByteHiNibble"} boogie_si_record_i8($i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4644, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4646, 46} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4646, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4646:60: warning: over-approximating bitwise operation and; */
  $i43 := $and.i32($i42, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4646, 30} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i8($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4645, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4648, 46} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4648, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4648:60: warning: over-approximating bitwise operation or; */
  $i46 := $or.i32($i45, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4648, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4647, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i47);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4649, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4651, 46} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4651, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4651:60: warning: over-approximating bitwise operation and; */
  $i49 := $and.i32($i48, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4651, 30} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i8($i49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4650, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i50);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4652, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4653, 38} true;
  assume {:verifier.code 0} true;
  call $i51 := READ_PORT_UCHAR($p6);
  call {:cexpr "ucProdIdLoByteLoNibble"} boogie_si_record_i8($i51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4654, 38} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4654, 66} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4654:66: warning: over-approximating bitwise operation ashr; */
  $i53 := $ashr.i32($i52, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4654, 38} true;
  assume {:verifier.code 0} true;
  $i54 := $trunc.i32.i8($i53);
  call {:cexpr "ucProdIdLoByteLoNibble"} boogie_si_record_i8($i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4656, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i32($i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4656, 47} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4656, 45} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4656:45: warning: over-approximating bitwise operation or; */
  $i57 := $or.i32($i55, $i56);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4656, 17} true;
  assume {:verifier.code 0} true;
  $i58 := $trunc.i32.i8($i57);
  call {:cexpr "ucProdIdLoByte"} boogie_si_record_i8($i58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4657, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4659, 46} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4659, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4659:60: warning: over-approximating bitwise operation and; */
  $i60 := $and.i32($i59, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4659, 30} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i8($i60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4658, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i61);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4661, 46} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4661, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4661:60: warning: over-approximating bitwise operation or; */
  $i63 := $or.i32($i62, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4661, 30} true;
  assume {:verifier.code 0} true;
  $i64 := $trunc.i32.i8($i63);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4660, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4662, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4664, 46} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4664, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4664:60: warning: over-approximating bitwise operation and; */
  $i66 := $and.i32($i65, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4664, 30} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i32.i8($i66);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4663, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4665, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4666, 38} true;
  assume {:verifier.code 0} true;
  call $i68 := READ_PORT_UCHAR($p6);
  call {:cexpr "ucProdIdHiByteHiNibble"} boogie_si_record_i8($i68);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4667, 38} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i8.i32($i68);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4667, 66} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4667:66: warning: over-approximating bitwise operation and; */
  $i70 := $and.i32($i69, 240);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4667, 38} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i32.i8($i70);
  call {:cexpr "ucProdIdHiByteHiNibble"} boogie_si_record_i8($i71);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4668, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4670, 46} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4670, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4670:60: warning: over-approximating bitwise operation and; */
  $i73 := $and.i32($i72, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4670, 30} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i8($i73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4669, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i74);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4672, 46} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4672, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4672:60: warning: over-approximating bitwise operation or; */
  $i76 := $or.i32($i75, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4672, 30} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4671, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i77);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4673, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4675, 46} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4675, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4675:60: warning: over-approximating bitwise operation and; */
  $i79 := $and.i32($i78, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4675, 30} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i32.i8($i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4674, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i80);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4676, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4677, 38} true;
  assume {:verifier.code 0} true;
  call $i81 := READ_PORT_UCHAR($p6);
  call {:cexpr "ucProdIdHiByteLoNibble"} boogie_si_record_i8($i81);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4678, 38} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i8.i32($i81);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4678, 66} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4678:66: warning: over-approximating bitwise operation ashr; */
  $i83 := $ashr.i32($i82, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4678, 38} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i8($i83);
  call {:cexpr "ucProdIdHiByteLoNibble"} boogie_si_record_i8($i84);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4680, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i32($i71);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4680, 47} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i84);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4680, 45} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4680:45: warning: over-approximating bitwise operation or; */
  $i87 := $or.i32($i85, $i86);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4680, 17} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  call {:cexpr "ucProdIdHiByte"} boogie_si_record_i8($i88);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4681, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4683, 46} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4683, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4683:60: warning: over-approximating bitwise operation and; */
  $i90 := $and.i32($i89, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4683, 30} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i32.i8($i90);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4682, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i91);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4685, 46} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4685, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4685:60: warning: over-approximating bitwise operation or; */
  $i93 := $or.i32($i92, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4685, 30} true;
  assume {:verifier.code 0} true;
  $i94 := $trunc.i32.i8($i93);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4684, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i94);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4686, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4688, 46} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i8.i32($i15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4688, 60} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4688:60: warning: over-approximating bitwise operation and; */
  $i96 := $and.i32($i95, 4294967294);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4688, 30} true;
  assume {:verifier.code 0} true;
  $i97 := $trunc.i32.i8($i96);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4687, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i97);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4689, 13} true;
  assume {:verifier.code 0} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4690, 25} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i8.i32($i88);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4690, 45} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4690:45: warning: over-approximating bitwise operation shl; */
  $i99 := $shl.i32($i98, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4690, 53} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i8.i32($i58);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4690, 51} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:4690:51: warning: over-approximating bitwise operation or; */
  $i101 := $or.i32($i99, $i100);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4690, 24} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i32.i16($i101);
  call {:cexpr "usProdId"} boogie_si_record_i16($i102);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4692, 24} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i16.i32($i102);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4692, 21} true;
  assume {:verifier.code 0} true;
  $i104 := $eq.i32(43775, $i103);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4692, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  $i110 := 0;
  goto $bb13;
$bb7:
  assume ($i104 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4694, 11} true;
  assume {:verifier.code 0} true;
  $i105 := 1;
  goto $bb9;
$bb8:
  assume !(($i104 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4695, 26} true;
  assume {:verifier.code 0} true;
  $i106 := $zext.i16.i32($i102);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4695, 23} true;
  assume {:verifier.code 0} true;
  $i107 := $eq.i32(43263, $i106);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4695, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4700, 43} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(6, 1)));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4700, 13} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p5, $i109);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4701, 9} true;
  assume {:verifier.code 0} true;
  $i110 := $i105;
  goto $bb13;
$bb10:
  assume ($i107 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4697, 13} true;
  assume {:verifier.code 0} true;
  $i108 := 1;
  goto $bb12;
$bb11:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  $i108 := 0;
  goto $bb12;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i105 := $i108;
  goto $bb9;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4703, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $i110;
  goto $bb14;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4705, 5} true;
  assume {:verifier.code 0} true;
  $i112 := $i111;
  goto $bb15;
$bb15:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4707, 7} true;
  assume {:verifier.code 0} true;
  call WRITE_PORT_UCHAR($p7, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 4708, 5} true;
  assume {:verifier.code 0} true;
  $r := $i112;
  $exn := false;
  return;
}
const PptIsPci: ref;
axiom (PptIsPci == $sub.ref(0, 189872));
procedure {:inline 1} PptIsPci($p0: ref, $p1: ref)
  returns ($r: i8)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i1;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i8;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $i37: i8;
  var $i38: i64;
  var $i39: i8;
  var $i40: i64;
  var $i41: i64;
  var $i42: i8;
  var $i43: i1;
  var $i44: i32;
  var $i45: i1;
  var $i14: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6289, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6289, 21} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6289, 26} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6289, 34} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p5 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6290, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6290, 21} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6294, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6294, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6294, 42} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p9, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6294, 42} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6295, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i32($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6295, 36} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6295, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6298, 7} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6360, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6301, 45} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p16 := $add.ref($add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6302, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.ref($p16, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6302, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  $p18 := $add.ref($add.ref($add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6308, 9} true;
  assume {:verifier.code 0} true;
  $i19, $i20, $i21 := 0, 0, 0;
  goto $bb7;
$bb6:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  $i41, $i42 := 0, 0;
  goto $bb26;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6308, 19} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume true;
  $p22 := $add.ref($add.ref($add.ref($add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6310, 40} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6310, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $ult.i64($i19, $i23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6310, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i24 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6312, 11} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i24 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6313, 13} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  $p25 := $add.ref($add.ref($add.ref($add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  $p26 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i19, 28));
  $p27 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i19, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6317, 42} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.0, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6317, 15} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6317, 47} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6317, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb13, $bb14;
$bb12:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6345, 5} true;
  assume {:verifier.code 0} true;
  $i41, $i42 := $i20, $i21;
  goto $bb26;
$bb13:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6318, 13} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i30 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6321, 15} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume true;
  $p31 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p11, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i19, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6324, 60} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6324, 65} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p32, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6324, 65} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i64($M.0, $p33);
  call {:cexpr "rangeLength"} boogie_si_record_i64($i34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6326, 45} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i20, 1);
  call {:cexpr "portResourceDescriptorCount"} boogie_si_record_i64($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6327, 33} true;
  assume {:verifier.code 0} true;
  $i36 := $ugt.i64($i34, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6327, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb20, $bb21;
$bb16:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6336, 15} true;
  assume {:verifier.code 0} true;
  $i38, $i39 := $i20, $i21;
  goto $bb24;
$bb17:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6322, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb18, $bb19;
$bb18:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6322, 22} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb19:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6336, 22} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb20:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6331, 17} true;
  assume {:verifier.code 0} true;
  $i37 := 1;
  goto $bb22;
$bb21:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  $i37 := $i21;
  goto $bb22;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6333, 17} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume true;
  assume {:verifier.code 0} true;
  $i38, $i39 := $i35, $i37;
  goto $bb24;
$bb24:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6341, 13} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i19, 1);
  call {:cexpr "i"} boogie_si_record_i64($i40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6308, 9} true;
  assume {:verifier.code 0} true;
  $i19, $i20, $i21 := $i40, $i38, $i39;
  goto $bb7;
$bb26:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6291, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6292, 25} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6347, 37} true;
  assume {:verifier.code 0} true;
  $i43 := $ugt.i64($i41, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6347, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i43 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6348, 7} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i43 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6350, 16} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6350, 13} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32(1, $i44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6350, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb30, $bb31;
$bb29:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6353, 9} true;
  assume {:verifier.code 0} true;
  $i14 := 1;
  goto $bb3;
$bb30:
  assume ($i45 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6350, 42} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb31:
  assume !(($i45 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6356, 9} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
}
const PptPnpStartScanPciCardCmResourceList: ref;
axiom (PptPnpStartScanPciCardCmResourceList == $sub.ref(0, 190904));
procedure {:inline 1} PptPnpStartScanPciCardCmResourceList($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: i64)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i1;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i8;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $i33: i8;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $i41: i8;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i1;
  var $i49: i1;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i64;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i16;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i64;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i16;
  var $i96: i64;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i64;
  var $i108: i8;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i64;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $i118: i64;
  var $p119: ref;
  var $p120: ref;
  var $i121: i16;
  var $i122: i32;
  var $i123: i32;
  var $i124: i1;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $i130: i64;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $i135: i64;
  var $p136: ref;
  var $p137: ref;
  var $i138: i16;
  var $p139: ref;
  var $i140: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6145, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6145, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6145, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6145, 34} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p8 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6146, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6146, 21} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6147, 19} true;
  assume {:verifier.code 0} true;
  $M.51 := $store.i8($M.51, $p2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6148, 15} true;
  assume {:verifier.code 0} true;
  $M.52 := $store.i8($M.52, $p3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6149, 15} true;
  assume {:verifier.code 0} true;
  $M.53 := $store.i8($M.53, $p4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6151, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p10, $mul.ref(0, 68)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6151, 30} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6151, 42} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p12, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6151, 42} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6152, 45} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1));
  $p16 := $add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6153, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.ref($p16, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6153, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i17 == 1);
  $p18 := $add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6154, 58} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6154, 18} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(328, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6154, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  $p21 := $add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6158, 9} true;
  assume {:verifier.code 0} true;
  $i22 := 0;
  goto $bb3;
$bb2:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6158, 19} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume true;
  $p23 := $add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6160, 40} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.0, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6160, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $ult.i64($i22, $i24);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6160, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i25 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6162, 11} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i25 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6163, 13} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  $p26 := $add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1));
  $p27 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28));
  $p28 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6167, 42} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.0, $p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6167, 15} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6167, 47} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6167, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb9, $bb10;
$bb8:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6270, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb9:
  assume ($i31 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6168, 13} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i31 == 1));
  $p32 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6170, 44} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6170, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6170, 49} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6170, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb12, $bb13;
$bb11:
  assume true;
  $p44 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6183, 61} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6183, 66} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p45, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6183, 66} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i64($M.0, $p46);
  call {:cexpr "length"} boogie_si_record_i64($i47);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6184, 34} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i64($i47, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6184, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb25, $bb26;
$bb12:
  assume ($i35 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6171, 15} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i35 == 1));
  $p36 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6173, 46} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.0, $p36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6173, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6173, 51} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i38, 2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6173, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb15, $bb16;
$bb14:
  assume true;
  $p98 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6230, 56} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p98);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6230, 66} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p99, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6230, 66} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i64($M.0, $p100);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6229, 34} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(336, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6229, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p102, $i101);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6231, 23} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb15:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6174, 17} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i39 == 1));
  $p40 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6176, 48} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i8($M.0, $p40);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6176, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6176, 53} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6176, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb18, $bb19;
$bb17:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6233, 33} true;
  assume {:verifier.code 0} true;
  $M.52 := $store.i8($M.52, $p3, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6234, 34} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(344, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6234, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p103, 1);
  $p104 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6237, 60} true;
  assume {:verifier.code 0} true;
  $p105 := $bitcast.ref.ref($p104);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6237, 70} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p105, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6237, 70} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i64($M.0, $p106);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6236, 27} true;
  assume {:verifier.code 0} true;
  $i108 := $trunc.i64.i8($i107);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6235, 34} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(345, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6235, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p109, $i108);
  $p110 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6239, 56} true;
  assume {:verifier.code 0} true;
  $p111 := $bitcast.ref.ref($p110);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6239, 66} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p111, $mul.ref(0, 24)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6239, 66} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i64($M.0, $p112);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6238, 34} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(352, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6238, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p114, $i113);
  $p115 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6241, 56} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p115);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6241, 66} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($add.ref($p116, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6241, 66} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i64($M.0, $p117);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6240, 34} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(360, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6240, 52} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p119, $i118);
  $p120 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6242, 59} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i16($M.0, $p120);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6242, 27} true;
  assume {:verifier.code 0} true;
  $i122 := $zext.i16.i32($i121);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6242, 65} true;
  assume {:verifier.code 0} true;
  /* llvm2bpl: test/c/ntdrivers/parport_true.i.cil.c:6242:65: warning: over-approximating bitwise operation and; */
  $i123 := $and.i32($i122, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6242, 65} true;
  assume {:verifier.code 0} true;
  $i124 := $ne.i32($i123, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6242, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb40, $bb41;
$bb18:
  assume ($i43 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6177, 19} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i43 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6180, 21} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6249, 33} true;
  assume {:verifier.code 0} true;
  $M.53 := $store.i8($M.53, $p4, 1);
  $p127 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6251, 56} true;
  assume {:verifier.code 0} true;
  $p128 := $bitcast.ref.ref($p127);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6251, 60} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($add.ref($p128, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6251, 60} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i64($M.0, $p129);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6250, 34} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(376, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6250, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p131, $i130);
  $p132 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6253, 56} true;
  assume {:verifier.code 0} true;
  $p133 := $bitcast.ref.ref($p132);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6253, 60} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($add.ref($p133, $mul.ref(0, 24)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6253, 60} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i64($M.0, $p134);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6252, 34} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(384, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6252, 42} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p136, $i135);
  $p137 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6254, 72} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i16($M.0, $p137);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6254, 34} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(392, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6254, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p139, $i138);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6255, 23} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb21:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6257, 23} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6181, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb23, $bb24;
$bb23:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6181, 28} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb24:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6258, 28} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb25:
  assume ($i48 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6185, 25} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i48 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6187, 36} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i64($i47, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6187, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb28, $bb29;
$bb27:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6195, 42} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p51 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  $p52 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6196, 64} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6196, 69} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p53, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6196, 69} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6196, 69} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p54);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6196, 69} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p55, $p56, 16, false);
  $p57 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6198, 64} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6198, 69} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p58, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6198, 69} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i64($M.0, $p59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6197, 42} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p62 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6197, 68} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p62, $i60);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6200, 71} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p64 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6201, 69} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6201, 69} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6201, 69} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6199, 42} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p69 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6199, 62} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p69, $p67);
  $p70 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6203, 62} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i16($M.0, $p70);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6203, 35} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i16.i64($i71);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6202, 42} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(312, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6202, 55} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p73, $i72);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6204, 42} true;
  assume {:verifier.code 0} true;
  $M.51 := $store.i8($M.51, $p2, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6205, 31} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb28:
  assume ($i49 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6188, 27} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i49 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6191, 29} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6208, 42} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p75 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(0, 1));
  $p76 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6209, 64} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6209, 69} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p77, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6209, 69} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p75);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6209, 69} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p78);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6209, 69} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p79, $p80, 16, false);
  $p81 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(4, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6211, 64} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p81);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6211, 69} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p82, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6211, 69} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i64($M.0, $p83);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6210, 42} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p86 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6210, 70} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p86, $i84);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6213, 71} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p88 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6215, 50} true;
  assume {:verifier.code 0} true;
  $p89 := $bitcast.ref.ref($p88);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6215, 50} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p89);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6215, 50} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6212, 42} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1));
  $p93 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(160, 1)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6212, 64} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p93, $p91);
  $p94 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p14, $mul.ref(0, 72)), $mul.ref(8, 1)), $mul.ref(0, 64)), $mul.ref(16, 1)), $mul.ref(16, 1)), $mul.ref($i22, 28)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6217, 62} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i16($M.0, $p94);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6217, 35} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i16.i64($i95);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6216, 42} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(320, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6216, 58} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p97, $i96);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6218, 31} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb31:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6221, 29} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb32:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6192, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb33, $bb34;
$bb33:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6192, 36} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb34:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6221, 36} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6227, 23} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb40:
  assume ($i124 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6243, 36} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(368, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6243, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p125, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6244, 23} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i124 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6245, 36} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(368, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6245, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p126, 0);
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6247, 23} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6266, 13} true;
  assume {:verifier.code 0} true;
  $i140 := $add.i64($i22, 1);
  call {:cexpr "i"} boogie_si_record_i64($i140);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6158, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i140;
  goto $bb3;
$bb48:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 6272, 5} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const PptIsNecR98Machine: ref;
axiom (PptIsNecR98Machine == $sub.ref(0, 191936));
procedure {:inline 1} PptIsNecR98Machine()
  returns ($r: i8)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i16;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $i37: i64;
  var $i38: i1;
  var $i39: i64;
  var $i40: i1;
  var $i16: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3791, 24} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(112, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3791, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3791, 31} true;
  assume {:verifier.code 0} true;
  $M.58 := $store.i16($M.58, $p5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3792, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3792, 38} true;
  assume {:verifier.code 0} true;
  $M.58 := $store.i16($M.58, $p6, 32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3793, 55} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3793, 55} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i16($M.58, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3793, 38} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i16.i64($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3793, 13} true;
  assume {:verifier.code 0} true;
  call $p10 := ExAllocatePoolWithTag(1, $i9, 1349673296);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3795, 33} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3795, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3795, 31} true;
  assume {:verifier.code 0} true;
  $M.79 := $store.ref($M.79, $p12, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3797, 27} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3797, 27} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.79, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3797, 10} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.ref($p14, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3797, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i15 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3798, 7} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3841, 1} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3802, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3802, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3802, 7} true;
  assume {:verifier.code 0} true;
  call $p19 := memset($p18, 0, 112);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3803, 7} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p21 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3803, 27} true;
  assume {:verifier.code 0} true;
  $M.60 := $store.i64($M.60, $p21, 36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3804, 36} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3804, 7} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p24 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3804, 34} true;
  assume {:verifier.code 0} true;
  $M.61 := $store.ref($M.61, $p24, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3805, 7} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p26 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3805, 33} true;
  assume {:verifier.code 0} true;
  $M.62 := $store.i64($M.62, $p26, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3806, 35} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3806, 7} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p29 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3806, 33} true;
  assume {:verifier.code 0} true;
  $M.63 := $store.ref($M.63, $p29, $p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3807, 7} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56));
  $p31 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56)), $mul.ref(48, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3807, 35} true;
  assume {:verifier.code 0} true;
  $M.64 := $store.i64($M.64, $p31, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3808, 47} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3808, 47} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.80, $p32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3808, 55} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p1, $mul.ref(0, 112)), $mul.ref(0, 56));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3808, 16} true;
  assume {:verifier.code 0} true;
  call $i35 := RtlQueryRegistryValues(0, $p33, $p34, $0.ref, $0.ref);
  call {:cexpr "Status"} boogie_si_record_i64($i35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3811, 16} true;
  assume {:verifier.code 0} true;
  $i36 := $sge.i64($i35, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3811, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3814, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := RtlCompareUnicodeString($p2, $p3, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3816, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i64($i37, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3816, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i36 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3835, 7} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb3;
$bb7:
  assume ($i38 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3817, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i38 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3821, 15} true;
  assume {:verifier.code 0} true;
  call $i39 := RtlCompareUnicodeString($p2, $p4, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i39);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3823, 21} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3823, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb10, $bb11;
$bb9:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3828, 11} true;
  assume {:verifier.code 0} true;
  $i16 := 1;
  goto $bb3;
$bb10:
  assume ($i40 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3823, 28} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb11:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3832, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3839, 5} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb3;
}
const RtlCompareUnicodeString: ref;
axiom (RtlCompareUnicodeString == $sub.ref(0, 192968));
procedure {:inline 1} RtlCompareUnicodeString($p0: ref, $p1: ref, $i2: i8)
  returns ($r: i64);
const PptAddPptRemovalRelation: ref;
axiom (PptAddPptRemovalRelation == $sub.ref(0, 194000));
procedure {:inline 1} PptAddPptRemovalRelation($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i16;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i16;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i5: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2857, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2857, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := ExAllocatePoolWithTag(1, 48, 1349673296);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2859, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2862, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.ref($p3, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2862, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2865, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, 1073741670);
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2898, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2869, 49} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2869, 49} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2869, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2869, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2870, 42} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2870, 42} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2870, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2870, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p11, $i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2871, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(32, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2871, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2871, 7} true;
  assume {:verifier.code 0} true;
  call $p14 := memset($p13, 0, 16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2873, 36} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2873, 36} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2873, 49} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p16, $mul.ref(0, 16)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2873, 49} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i16($M.0, $p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2873, 14} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i64($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2872, 17} true;
  assume {:verifier.code 0} true;
  call $p20 := ExAllocatePoolWithTag(1, $i19, 1349673296);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2874, 33} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2874, 13} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(32, 1));
  $p23 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(32, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2874, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2876, 16} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(32, 1));
  $p25 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(32, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2876, 27} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2876, 10} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.ref($p26, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2876, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i27 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i27 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2879, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, 1073741670);
  goto $bb3;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2884, 33} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2884, 33} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2884, 46} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p29, $mul.ref(0, 16)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2884, 46} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i16($M.0, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2883, 13} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(32, 1));
  $p33 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(32, 1)), $mul.ref(2, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2883, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p33, $i31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2888, 34} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1));
  $p35 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2889, 33} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2890, 13} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p38 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2890, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p38, $p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2891, 13} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p40 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2891, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p40, $p36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2892, 33} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2892, 18} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p36, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2892, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p42, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2893, 36} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p3, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p44 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2893, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2896, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
}
const PptRemovePptRemovalRelation: ref;
axiom (PptRemovePptRemovalRelation == $sub.ref(0, 195032));
procedure {:inline 1} PptRemovePptRemovalRelation($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i8;
  var $i12: i8;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $i42: i1;
  var $p43: ref;
  var $p40: ref;
  var $i41: i8;
  var $p34: ref;
  var $i35: i8;
  var $i36: i8;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i1;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2916, 41} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2916, 41} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2916, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2917, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1));
  $p5 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2927, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2927, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i32($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2927, 42} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i32($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2927, 39} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i7, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2927, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2932, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3003, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2943, 7} true;
  assume {:verifier.code 0} true;
  $p10, $i11, $i12 := $0.ref, 0, 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2920, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2943, 17} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2945, 14} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i8($i12, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2945, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2948, 11} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb8:
  assume !(($i13 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2947, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $p14 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2950, 35} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  $p16 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2951, 32} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2951, 40} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p17, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2951, 40} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  $p20 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2952, 32} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2952, 40} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p21, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2952, 40} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2953, 20} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p23, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2953, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p24, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2954, 20} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p19, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2954, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p25, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2956, 24} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2956, 46} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2955, 16} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2959, 33} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p28, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2959, 33} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2959, 13} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i32($p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2959, 49} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i32($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2959, 46} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i31, $i32);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2959, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb11, $bb12;
$bb10:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2993, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.i8($i11, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2993, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb23, $bb24;
$bb11:
  assume ($i33 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2964, 9} true;
  assume {:verifier.code 0} true;
  $p34, $i35, $i36 := $p10, 1, 1;
  goto $bb13;
$bb12:
  assume !(($i33 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2965, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i32($p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2965, 47} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i32($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2965, 44} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i37, $i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2965, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2920, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2978, 14} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i8($i35, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2978, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb20, $bb21;
$bb14:
  assume ($i39 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2969, 11} true;
  assume {:verifier.code 0} true;
  $p40, $i41 := $p10, 1;
  goto $bb16;
$bb15:
  assume !(($i39 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2970, 18} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.ref($p10, $0.ref);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2970, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb17, $bb18;
$bb16:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2920, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $p34, $i35, $i36 := $p40, $i11, $i41;
  goto $bb13;
$bb17:
  assume ($i42 == 1);
  assume {:verifier.code 0} true;
  $p43 := $p10;
  goto $bb19;
$bb18:
  assume !(($i42 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2974, 13} true;
  assume {:verifier.code 0} true;
  $p43 := $p15;
  goto $bb19;
$bb19:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $p40, $i41 := $p43, $i12;
  goto $bb16;
$bb20:
  assume ($i44 == 1);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i44 == 1));
  $p45 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2980, 41} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2981, 17} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p28, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p48 := $add.ref($add.ref($add.ref($p28, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2981, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p48, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2982, 17} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p28, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p50 := $add.ref($add.ref($add.ref($p28, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2982, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p50, $p46);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2983, 41} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p28, $mul.ref(0, 48)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2983, 26} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p46, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2983, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p52, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2984, 40} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p28, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p54 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2984, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p54, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2985, 9} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2943, 7} true;
  assume {:verifier.code 0} true;
  $p10, $i11, $i12 := $p34, $i35, $i36;
  goto $bb5;
$bb23:
  assume ($i55 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 2998, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 3001, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const PptCancelRoutine: ref;
axiom (PptCancelRoutine == $sub.ref(0, 196064));
procedure {:inline 1} PptCancelRoutine($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $p15: ref;
  var $i16: i8;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8571, 31} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8571, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 368)), $mul.ref(80, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8571, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.81, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8571, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8572, 37} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8572, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8572, 23} true;
  assume {:verifier.code 0} true;
  $M.27 := $store.ref($M.27, $p7, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8573, 20} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(424, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8573, 20} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8573, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8573, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8575, 43} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8575, 43} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8576, 59} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8575, 9} true;
  assume {:verifier.code 0} true;
  call $i14 := KeSynchronizeExecution($p12, PptSynchronizedDecrement, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8578, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8579, 34} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8579, 9} true;
  assume {:verifier.code 0} true;
  call $i16 := PptSynchronizedDecrement($p15);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8582, 24} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8582, 29} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8582, 37} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p18, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p20 := $add.ref($add.ref($add.ref($p18, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p21 := $add.ref($add.ref($add.ref($add.ref($p18, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8582, 66} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8583, 24} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(120, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8583, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8583, 37} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p24, $mul.ref(0, 80)), $mul.ref(48, 1));
  $p26 := $add.ref($add.ref($add.ref($p24, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1));
  $p27 := $add.ref($add.ref($add.ref($add.ref($p24, $mul.ref(0, 80)), $mul.ref(48, 1)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8583, 66} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8584, 18} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p28, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8584, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p29, $p22);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8585, 18} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p22, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8585, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, $p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8587, 12} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p32 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8587, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p32, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8588, 12} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p34 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8588, 39} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8588, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p35, $sub.i64(0, 1073741536));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8589, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $sub.i32(0, 1073741536);
  call {:cexpr "myStatus"} boogie_si_record_i32($sub.i32(0, 1073741536));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8590, 40} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(600, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8590, 52} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8590, 7} true;
  assume {:verifier.code 0} true;
  call PptReleaseRemoveLock($p36, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8591, 7} true;
  assume {:verifier.code 0} true;
  call PptCompleteRequest($p1, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8593, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptSetCancelRoutine: ref;
axiom (PptSetCancelRoutine == $sub.ref(0, 197096));
procedure {:inline 1} PptSetCancelRoutine($p0: ref, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8824, 58} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8824, 58} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 216)), $mul.ref(104, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8824, 42} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8824, 33} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8825, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8825, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8824, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := InterlockedExchange($p5, $i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8824, 11} true;
  assume {:verifier.code 0} true;
  $M.82 := $store.i64($M.82, $p2, $i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8828, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8828, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.82, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8827, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8827, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8827, 5} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
}
const PptConnectInterrupt: ref;
axiom (PptConnectInterrupt == $sub.ref(0, 198128));
procedure {:inline 1} PptConnectInterrupt($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i8;
  var $p11: ref;
  var $i12: i8;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $i4: i64;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8443, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8443, 21} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(344, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8443, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8443, 10} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i8($i2, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8443, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8444, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $sub.i64(0, 1073741637);
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8466, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8449, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(416, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8449, 62} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8450, 33} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(352, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8450, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.0, $p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8450, 61} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(345, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8450, 61} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8451, 22} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(345, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8451, 22} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8451, 49} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(368, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8451, 49} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8452, 22} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(360, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8452, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8448, 16} true;
  assume {:verifier.code 0} true;
  call $i17 := IoConnectInterrupt($p5, PptInterruptService, $p6, $0.ref, $i8, $i10, $i12, $i14, 1, $i16, 0);
  call {:cexpr "Status"} boogie_si_record_i64($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8454, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $sge.i64($i17, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8454, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i18 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 33} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 48} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p20, $mul.ref(0, 368)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 48} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8457, 32} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8457, 32} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8458, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1));
  $p26 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 872)), $mul.ref(96, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p27, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i64($M.0, $p28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p27, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i64($M.0, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $M.56;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $M.57;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8456, 9} true;
  assume {:verifier.code 0} true;
  call PptLogError($p22, $p24, $i29, $i31, $i32, $i33, 0, 0, 0, 14, $i17, 20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8462, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8464, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i17;
  goto $bb3;
}
const PptSynchronizedQueue: ref;
axiom (PptSynchronizedQueue == $sub.ref(0, 199160));
procedure {:inline 1} PptSynchronizedQueue($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8506, 19} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8506, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8507, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8507, 33} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.83, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8508, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8508, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.84, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8509, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8509, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.85, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8509, 30} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8509, 36} true;
  assume {:verifier.code 0} true;
  $M.86 := $store.ref($M.86, $p8, $p3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8510, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8510, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.85, $p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8510, 30} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p10, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8510, 36} true;
  assume {:verifier.code 0} true;
  $M.84 := $store.ref($M.84, $p11, $p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8511, 37} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8511, 37} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.85, $p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8511, 16} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8511, 22} true;
  assume {:verifier.code 0} true;
  $M.86 := $store.ref($M.86, $p14, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8512, 40} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8512, 40} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.85, $p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8512, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8512, 25} true;
  assume {:verifier.code 0} true;
  $M.84 := $store.ref($M.84, $p17, $p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8513, 5} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $exn := false;
  return;
}
const PptFreePortFromInterruptLevel: ref;
axiom (PptFreePortFromInterruptLevel == $sub.ref(0, 200192));
procedure {:inline 1} PptFreePortFromInterruptLevel($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8620, 10} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8620, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8620, 48} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8620, 48} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.87, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8620, 63} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8620, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8621, 8} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8621, 46} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 872)), $mul.ref(88, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8621, 61} true;
  assume {:verifier.code 0} true;
  $M.87 := $store.i64($M.87, $p6, $sub.i64(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8622, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8624, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8624, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 872)), $mul.ref(432, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8624, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := KeInsertQueueDpc($p8, $0.ref, $0.ref);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8628, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const PptSynchronizedDisconnect: ref;
axiom (PptSynchronizedDisconnect == $sub.ref(0, 201224));
procedure {:inline 1} PptSynchronizedDisconnect($p0: ref)
  returns ($r: i8)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p42: ref;
  var $p43: ref;
  var $i41: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8527, 25} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8527, 25} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8528, 42} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8528, 42} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.88, $p2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8528, 52} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 32)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8528, 52} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.89, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8529, 42} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8529, 42} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.88, $p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8529, 52} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 32)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8529, 52} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.90, $p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8530, 35} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8530, 35} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.91, $p10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8530, 47} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p11, $mul.ref(0, 872)), $mul.ref(400, 1));
  $p13 := $add.ref($add.ref($add.ref($p11, $mul.ref(0, 872)), $mul.ref(400, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8530, 55} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.92, $p13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8532, 7} true;
  assume {:verifier.code 0} true;
  $p15 := $p14;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8532, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8534, 13} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i32($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8535, 49} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8535, 49} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.91, $p17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8535, 61} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p18, $mul.ref(0, 872)), $mul.ref(400, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8535, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i32($p19);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8534, 35} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i16, $i20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8534, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i21 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8537, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i21 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8538, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8540, 40} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p15);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8540, 56} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8540, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8543, 38} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8543, 38} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.93, $p25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8543, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i32($p26);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8544, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i32($p5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8543, 53} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i27, $i28);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8543, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8560, 5} true;
  assume {:verifier.code 0} true;
  $i41 := 0;
  goto $bb11;
$bb7:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8545, 40} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p24, $mul.ref(0, 48)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8545, 40} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.94, $p30);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8545, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i32($p31);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8546, 15} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i32($p9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8545, 55} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i32, $i33);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8545, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb9:
  assume ($i34 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8547, 34} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p15, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8547, 34} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.95, $p35);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8548, 34} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p15, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8548, 34} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.96, $p37);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8549, 24} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p38, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8549, 30} true;
  assume {:verifier.code 0} true;
  $M.97 := $store.ref($M.97, $p39, $p36);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8550, 24} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p36, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8550, 30} true;
  assume {:verifier.code 0} true;
  $M.96 := $store.ref($M.96, $p40, $p38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8551, 13} true;
  assume {:verifier.code 0} true;
  $i41 := 1;
  goto $bb11;
$bb10:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8562, 1} true;
  assume {:verifier.code 0} true;
  $r := $i41;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8554, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8556, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p15, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8556, 28} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.95, $p42);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8532, 7} true;
  assume {:verifier.code 0} true;
  $p15 := $p43;
  goto $bb1;
}
const KeInsertQueueDpc: ref;
axiom (KeInsertQueueDpc == $sub.ref(0, 202256));
procedure {:inline 1} KeInsertQueueDpc($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i8);
const PptInterruptService: ref;
axiom (PptInterruptService == $sub.ref(0, 203288));
procedure {:inline 1} PptInterruptService($p0: ref, $p1: ref)
  returns ($r: i8)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i1;
  var $p21: ref;
  var $p22: ref;
  var $i20: i8;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8638, 23} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8638, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8639, 32} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(400, 1));
  $p4 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(400, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8639, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.98, $p4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8641, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  goto $bb1;
$bb1:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8641, 17} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8643, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i32($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8644, 46} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 872)), $mul.ref(400, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8644, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i32($p8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8643, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i7, $i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8643, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8646, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i10 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8647, 11} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8651, 34} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8651, 50} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8651, 15} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8654, 34} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p13, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8654, 34} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.99, $p14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8655, 65} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p13, $mul.ref(0, 48)), $mul.ref(24, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8655, 65} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.100, $p16);
  call $i18 := devirtbounce.2($p15, $p0, $p17);
  call {:cexpr "tmp"} boogie_si_record_i8($i18);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8657, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i8($i18, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8657, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb7, $bb8;
$bb6:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8665, 5} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  goto $bb9;
$bb7:
  assume ($i19 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8658, 11} true;
  assume {:verifier.code 0} true;
  $i20 := 1;
  goto $bb9;
$bb8:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8667, 1} true;
  assume {:verifier.code 0} true;
  $r := $i20;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8661, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8661, 28} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.101, $p21);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 8641, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $p22;
  goto $bb1;
}
const IoConnectInterrupt: ref;
axiom (IoConnectInterrupt == $sub.ref(0, 204320));
procedure {:inline 1} IoConnectInterrupt($p0: ref, $p1: ref, $p2: ref, $p3: ref, $i4: i64, $i5: i8, $i6: i8, $i7: i32, $i8: i8, $i9: i64, $i10: i8)
  returns ($r: i64);
const InterlockedExchange: ref;
axiom (InterlockedExchange == $sub.ref(0, 205352));
procedure {:inline 1} InterlockedExchange($p0: ref, $i1: i64)
  returns ($r: i64);
const InterlockedDecrement: ref;
axiom (InterlockedDecrement == $sub.ref(0, 206384));
procedure {:inline 1} InterlockedDecrement($p0: ref)
  returns ($r: i64);
const InterlockedIncrement: ref;
axiom (InterlockedIncrement == $sub.ref(0, 207416));
procedure {:inline 1} InterlockedIncrement($p0: ref)
  returns ($r: i64);
const _BLAST_init: ref;
axiom (_BLAST_init == $sub.ref(0, 208448));
procedure {:inline 1} _BLAST_init()
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9362, 14} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9362, 14} true;
  assume {:verifier.code 0} true;
  $M.102 := 0;
  call {:cexpr "UNLOADED"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9363, 8} true;
  assume {:verifier.code 0} true;
  $M.3 := 1;
  call {:cexpr "NP"} boogie_si_record_i32(1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9364, 8} true;
  assume {:verifier.code 0} true;
  $M.4 := 2;
  call {:cexpr "DC"} boogie_si_record_i32(2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9365, 11} true;
  assume {:verifier.code 0} true;
  $M.22 := 3;
  call {:cexpr "SKIP1"} boogie_si_record_i32(3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9366, 11} true;
  assume {:verifier.code 0} true;
  $M.47 := 4;
  call {:cexpr "SKIP2"} boogie_si_record_i32(4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9367, 10} true;
  assume {:verifier.code 0} true;
  $M.45 := 5;
  call {:cexpr "MPR1"} boogie_si_record_i32(5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9368, 10} true;
  assume {:verifier.code 0} true;
  $M.46 := 6;
  call {:cexpr "MPR3"} boogie_si_record_i32(6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9369, 9} true;
  assume {:verifier.code 0} true;
  $M.43 := 7;
  call {:cexpr "IPC"} boogie_si_record_i32(7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9370, 9} true;
  assume {:verifier.code 0} true;
  $i0 := $M.102;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9370, 7} true;
  assume {:verifier.code 0} true;
  $M.2 := $i0;
  call {:cexpr "s"} boogie_si_record_i32($i0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9371, 12} true;
  assume {:verifier.code 0} true;
  $M.11 := 0;
  call {:cexpr "pended"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9372, 14} true;
  assume {:verifier.code 0} true;
  $M.19 := $0.ref;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9373, 20} true;
  assume {:verifier.code 0} true;
  $M.18 := 0;
  call {:cexpr "compRegistered"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9374, 23} true;
  assume {:verifier.code 0} true;
  $M.44 := 0;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9375, 20} true;
  assume {:verifier.code 0} true;
  $M.50 := 0;
  call {:cexpr "setEventCalled"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9376, 15} true;
  assume {:verifier.code 0} true;
  $M.54 := 0;
  call {:cexpr "customIrp"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9377, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const stub_driver_init: ref;
axiom (stub_driver_init == $sub.ref(0, 209480));
procedure {:inline 1} stub_driver_init()
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
$bb0:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9384, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9384, 9} true;
  assume {:verifier.code 0} true;
  $i0 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9384, 7} true;
  assume {:verifier.code 0} true;
  $M.2 := $i0;
  call {:cexpr "s"} boogie_si_record_i32($i0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9385, 15} true;
  assume {:verifier.code 0} true;
  $M.54 := 0;
  call {:cexpr "customIrp"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9386, 22} true;
  assume {:verifier.code 0} true;
  $i1 := $M.54;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9386, 20} true;
  assume {:verifier.code 0} true;
  $M.50 := $i1;
  call {:cexpr "setEventCalled"} boogie_si_record_i32($i1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9387, 25} true;
  assume {:verifier.code 0} true;
  $i2 := $M.50;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9387, 23} true;
  assume {:verifier.code 0} true;
  $M.44 := $i2;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i2);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9388, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $M.44;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9388, 20} true;
  assume {:verifier.code 0} true;
  $M.18 := $i3;
  call {:cexpr "compRegistered"} boogie_si_record_i32($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9389, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $M.18;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9389, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9389, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9389, 14} true;
  assume {:verifier.code 0} true;
  $M.19 := $p6;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9390, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $M.19;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9390, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i32($p7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9390, 12} true;
  assume {:verifier.code 0} true;
  $M.11 := $i8;
  call {:cexpr "pended"} boogie_si_record_i32($i8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9391, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 210512));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i1;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i1;
  var $p37: ref;
  var $i38: i64;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $i45: i64;
  var $p46: ref;
  var $i47: i64;
  var $p48: ref;
  var $i49: i64;
  var $p50: ref;
  var $i51: i64;
  var $p52: ref;
  var $i53: i64;
  var $i39: i64;
  var $i54: i1;
  var $i55: i64;
  var $i56: i32;
  var $i57: i1;
  var $i58: i32;
  var $i59: i32;
  var $i60: i1;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i70: i1;
  var $i71: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i76: i32;
  var $i77: i1;
  var $i78: i32;
  var $i79: i32;
  var $i80: i1;
  var $i81: i32;
  var $i82: i1;
  var $i83: i1;
  var $i84: i32;
  var $i85: i32;
  var $i86: i1;
  var $i87: i1;
  var $i88: i32;
  var $i89: i64;
  var $i90: i1;
  var $i91: i32;
  var $i28: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9396, 21} true;
  assume {:verifier.code 1} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(336, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(216, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(368, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9396, 21} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_long"} boogie_si_record_i64($i3);
  call {:cexpr "status"} boogie_si_record_i64($i3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9397, 26} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  call {:cexpr "we_should_unload"} boogie_si_record_i32($i4);
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9399, 24} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  call {:cexpr "__BLAST_NONDET"} boogie_si_record_i32($i5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9400, 20} true;
  assume {:verifier.code 1} true;
  call $i6 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i6);
  call {:cexpr "irp_choice"} boogie_si_record_i32($i6);
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9402, 7} true;
  assume {:verifier.code 1} true;
  call $i7 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9402, 5} true;
  assume {:verifier.code 0} true;
  $M.2 := $i7;
  call {:cexpr "s"} boogie_si_record_i32($i7);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9406, 12} true;
  assume {:verifier.code 0} true;
  $M.103 := $p1;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9407, 7} true;
  assume {:verifier.code 0} true;
  call _BLAST_init();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9409, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $sge.i64($i3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9409, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9410, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9410, 9} true;
  assume {:verifier.code 0} true;
  $M.2 := $i9;
  call {:cexpr "s"} boogie_si_record_i32($i9);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9411, 17} true;
  assume {:verifier.code 0} true;
  $M.54 := 0;
  call {:cexpr "customIrp"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9412, 24} true;
  assume {:verifier.code 0} true;
  $i10 := $M.54;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9412, 22} true;
  assume {:verifier.code 0} true;
  $M.50 := $i10;
  call {:cexpr "setEventCalled"} boogie_si_record_i32($i10);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9413, 27} true;
  assume {:verifier.code 0} true;
  $i11 := $M.50;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9413, 25} true;
  assume {:verifier.code 0} true;
  $M.44 := $i11;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32($i11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9414, 24} true;
  assume {:verifier.code 0} true;
  $i12 := $M.44;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9414, 22} true;
  assume {:verifier.code 0} true;
  $M.18 := $i12;
  call {:cexpr "compRegistered"} boogie_si_record_i32($i12);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9415, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $M.18;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9415, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9415, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9415, 16} true;
  assume {:verifier.code 0} true;
  $M.19 := $p15;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9416, 16} true;
  assume {:verifier.code 0} true;
  $p16 := $M.19;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9416, 16} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i32($p16);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9416, 14} true;
  assume {:verifier.code 0} true;
  $M.11 := $i17;
  call {:cexpr "pended"} boogie_si_record_i32($i17);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9417, 7} true;
  assume {:verifier.code 0} true;
  $p18 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9417, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p18, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p20 := $add.ref($add.ref($add.ref($p18, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9417, 40} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9417, 47} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p21, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9418, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9419, 22} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i6, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9419, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i55 := $i3;
  goto $bb51;
$bb3:
  assume ($i22 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9420, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9420, 15} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p23, $mul.ref(0, 216)), $mul.ref(48, 1));
  $p25 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 216)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9420, 42} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9420, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p26, $sub.i64(0, 1073741637));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9421, 18} true;
  assume {:verifier.code 0} true;
  $M.1 := $sub.i32(0, 1073741637);
  call {:cexpr "myStatus"} boogie_si_record_i32($sub.i32(0, 1073741637));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9422, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9424, 9} true;
  assume {:verifier.code 0} true;
  call stub_driver_init();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9425, 20} true;
  assume {:verifier.code 0} true;
  $i27 := $sge.i64($i3, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9425, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i27 == 1);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb7:
  assume !(($i27 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9426, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 1);
  goto $bb8;
$bb8:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9586, 1} true;
  assume {:verifier.code 0} true;
  $r := $i28;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9429, 26} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i5, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9429, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i29 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9430, 9} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i29 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9432, 28} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i5, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9432, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb13, $bb14;
$bb12:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9458, 63} true;
  assume {:verifier.code 0} true;
  $p37 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9458, 36} true;
  assume {:verifier.code 0} true;
  call $i38 := PptDispatchCreate($p2, $p37);
  call {:cexpr "status"} boogie_si_record_i64($i38);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9460, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i38;
  goto $bb38;
$bb13:
  assume ($i30 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9433, 11} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i30 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9435, 30} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i5, 3);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9435, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb16, $bb17;
$bb15:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9463, 62} true;
  assume {:verifier.code 0} true;
  $p40 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9463, 36} true;
  assume {:verifier.code 0} true;
  call $i41 := PptDispatchClose($p2, $p40);
  call {:cexpr "status"} boogie_si_record_i64($i41);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9465, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i41;
  goto $bb38;
$bb16:
  assume ($i31 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9436, 13} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i31 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9438, 32} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i5, 4);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9438, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb19, $bb20;
$bb18:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9468, 60} true;
  assume {:verifier.code 0} true;
  $p42 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9468, 36} true;
  assume {:verifier.code 0} true;
  call $i43 := PptDispatchPnp($p2, $p42);
  call {:cexpr "status"} boogie_si_record_i64($i43);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9470, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i43;
  goto $bb38;
$bb19:
  assume ($i32 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9439, 15} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i32 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9441, 34} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i5, 5);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9441, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb22, $bb23;
$bb21:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9473, 62} true;
  assume {:verifier.code 0} true;
  $p44 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9473, 36} true;
  assume {:verifier.code 0} true;
  call $i45 := PptDispatchPower($p2, $p44);
  call {:cexpr "status"} boogie_si_record_i64($i45);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9475, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i45;
  goto $bb38;
$bb22:
  assume ($i33 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9442, 17} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i33 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9444, 36} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i5, 6);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9444, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb25, $bb26;
$bb24:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9478, 64} true;
  assume {:verifier.code 0} true;
  $p46 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9478, 36} true;
  assume {:verifier.code 0} true;
  call $i47 := PptDispatchCleanup($p2, $p46);
  call {:cexpr "status"} boogie_si_record_i64($i47);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9480, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i47;
  goto $bb38;
$bb25:
  assume ($i34 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9445, 19} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i34 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9447, 38} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i5, 8);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9447, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb28, $bb29;
$bb27:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9483, 70} true;
  assume {:verifier.code 0} true;
  $p48 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9483, 36} true;
  assume {:verifier.code 0} true;
  call $i49 := PptDispatchSystemControl($p2, $p48);
  call {:cexpr "status"} boogie_si_record_i64($i49);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9485, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i49;
  goto $bb38;
$bb28:
  assume ($i35 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9448, 21} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i35 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9450, 40} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i5, 11);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9450, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb31, $bb32;
$bb30:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9489, 73} true;
  assume {:verifier.code 0} true;
  $p50 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9489, 31} true;
  assume {:verifier.code 0} true;
  call $i51 := PptDispatchInternalDeviceControl($p2, $p50);
  call {:cexpr "status"} boogie_si_record_i64($i51);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9491, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i51;
  goto $bb38;
$bb31:
  assume ($i36 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9451, 23} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i36 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9454, 25} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9494, 64} true;
  assume {:verifier.code 0} true;
  $p52 := $M.103;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9494, 36} true;
  assume {:verifier.code 0} true;
  call $i53 := PptDispatchCleanup($p2, $p52);
  call {:cexpr "status"} boogie_si_record_i64($i53);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9496, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $i53;
  goto $bb38;
$bb34:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9498, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 1);
  goto $bb8;
$bb35:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9455, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb36, $bb37;
$bb36:
  assume (0 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9455, 32} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb37:
  assume !((0 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9499, 32} true;
  assume {:verifier.code 0} true;
  $i39 := $u0;
  goto $bb38;
$bb38:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9511, 11} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i4, 0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9511, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i54 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9513, 11} true;
  assume {:verifier.code 0} true;
  call PptUnload($p0);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9515, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9517, 5} true;
  assume {:verifier.code 0} true;
  $i55 := $i39;
  goto $bb51;
$bb51:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9519, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $M.11;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9519, 16} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i56, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9519, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i57 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9520, 11} true;
  assume {:verifier.code 0} true;
  $i58 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9520, 16} true;
  assume {:verifier.code 0} true;
  $i59 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9520, 13} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i32($i58, $i59);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9520, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb54, $bb55;
$bb53:
  assume !(($i57 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9525, 12} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb54:
  assume ($i60 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9521, 13} true;
  assume {:verifier.code 0} true;
  $i61 := $M.3;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9521, 11} true;
  assume {:verifier.code 0} true;
  $M.2 := $i61;
  call {:cexpr "s"} boogie_si_record_i32($i61);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9522, 7} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !(($i60 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9523, 9} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb56:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9525, 5} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9527, 11} true;
  assume {:verifier.code 0} true;
  $i62 := $M.11;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9527, 18} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9527, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb59, $bb60;
$bb58:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9584, 12} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i64.i32($i55);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9584, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i91;
  goto $bb8;
$bb59:
  assume ($i63 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9528, 13} true;
  assume {:verifier.code 0} true;
  $i64 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9528, 18} true;
  assume {:verifier.code 0} true;
  $i65 := $M.46;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9528, 15} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i64, $i65);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9528, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb61, $bb62;
$bb60:
  assume !(($i63 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9533, 14} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb61:
  assume ($i66 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9529, 15} true;
  assume {:verifier.code 0} true;
  $i67 := $M.46;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9529, 13} true;
  assume {:verifier.code 0} true;
  $M.2 := $i67;
  call {:cexpr "s"} boogie_si_record_i32($i67);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9530, 9} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i66 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9531, 11} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9533, 7} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9535, 13} true;
  assume {:verifier.code 0} true;
  $i68 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9535, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $M.102;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9535, 15} true;
  assume {:verifier.code 0} true;
  $i70 := $eq.i32($i68, $i69);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9535, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb66, $bb67;
$bb65:
  assume {:verifier.code 0} true;
  goto $bb58;
$bb66:
  assume ($i70 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9537, 9} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i70 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9538, 22} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i64($i55, $sub.i64(0, 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9538, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb69, $bb70;
$bb68:
  assume {:verifier.code 0} true;
  goto $bb65;
$bb69:
  assume ($i71 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9540, 11} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i71 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9541, 17} true;
  assume {:verifier.code 0} true;
  $i72 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9541, 22} true;
  assume {:verifier.code 0} true;
  $i73 := $M.47;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9541, 19} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i72, $i73);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9541, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb72, $bb73;
$bb71:
  assume {:verifier.code 0} true;
  goto $bb68;
$bb72:
  assume ($i74 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9542, 19} true;
  assume {:verifier.code 0} true;
  $i75 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9542, 24} true;
  assume {:verifier.code 0} true;
  $i76 := $M.43;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9542, 21} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i75, $i76);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9542, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb74, $bb75;
$bb73:
  assume !(($i74 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9553, 20} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb74:
  assume ($i77 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9543, 21} true;
  assume {:verifier.code 0} true;
  $i78 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9543, 26} true;
  assume {:verifier.code 0} true;
  $i79 := $M.4;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9543, 23} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i32($i78, $i79);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9543, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb76, $bb77;
$bb75:
  assume !(($i77 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9551, 17} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb76:
  assume ($i80 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9545, 21} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9547, 17} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb77:
  assume !(($i80 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9548, 19} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9550, 15} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume true;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9555, 19} true;
  assume {:verifier.code 0} true;
  $i81 := $M.11;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9555, 26} true;
  assume {:verifier.code 0} true;
  $i82 := $eq.i32($i81, 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9555, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb82, $bb83;
$bb80:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9553, 13} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:verifier.code 0} true;
  goto $bb71;
$bb82:
  assume ($i82 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9556, 28} true;
  assume {:verifier.code 0} true;
  $i83 := $ne.i64($i55, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9556, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb84, $bb85;
$bb83:
  assume !(($i82 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9563, 21} true;
  assume {:verifier.code 0} true;
  $i84 := $M.2;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9563, 26} true;
  assume {:verifier.code 0} true;
  $i85 := $M.4;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9563, 23} true;
  assume {:verifier.code 0} true;
  $i86 := $eq.i32($i84, $i85);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9563, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb88, $bb89;
$bb84:
  assume ($i83 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9558, 21} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9560, 17} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9562, 15} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:verifier.code 0} true;
  goto $bb81;
$bb88:
  assume ($i86 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9564, 30} true;
  assume {:verifier.code 0} true;
  $i87 := $eq.i64($i55, 259);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9564, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb90, $bb91;
$bb89:
  assume !(($i86 == 1));
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9571, 43} true;
  assume {:verifier.code 0} true;
  $i88 := $M.44;
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9571, 33} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i88);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9571, 30} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i64($i55, $i89);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9571, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb94, $bb95;
$bb90:
  assume ($i87 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9566, 23} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9568, 19} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb91:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9570, 17} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:verifier.code 0} true;
  goto $bb87;
$bb94:
  assume ($i90 == 1);
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9573, 23} true;
  assume {:verifier.code 0} true;
  call errorFn();
  assume {:sourceloc "test/c/ntdrivers/parport_true.i.cil.c", 9575, 19} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:verifier.code 0} true;
  goto $bb93;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 211544));
procedure {:inline 1} __SMACK_code.ref($p0: ref);
procedure {:inline 1} __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 212576));
procedure {:inline 1} __VERIFIER_assume($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 45, 3} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 46, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 213608));
procedure {:inline 1} __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assert: ref;
axiom (__VERIFIER_assert == $sub.ref(0, 214640));
procedure {:inline 1} __VERIFIER_assert($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assert:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assert $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 54, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_and32: ref;
axiom (__SMACK_and32 == $sub.ref(0, 215672));
procedure {:inline 1} __SMACK_and32($i0: i32, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i4: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i32;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i20: i1;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i19: i32;
  var $i24: i64;
  var $i25: i64;
  var $i26: i32;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i35: i1;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i34: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i32;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i50: i1;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i49: i32;
  var $i54: i64;
  var $i55: i64;
  var $i56: i32;
  var $i57: i32;
  var $i58: i64;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i65: i1;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i64: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i80: i1;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i79: i32;
  var $i84: i64;
  var $i85: i64;
  var $i86: i32;
  var $i87: i32;
  var $i88: i64;
  var $i89: i64;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i95: i1;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i94: i32;
  var $i99: i64;
  var $i100: i64;
  var $i101: i32;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $i105: i32;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i110: i1;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i109: i32;
  var $i114: i64;
  var $i115: i64;
  var $i116: i32;
  var $i117: i32;
  var $i118: i64;
  var $i119: i64;
  var $i120: i32;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i125: i1;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i124: i32;
  var $i129: i64;
  var $i130: i64;
  var $i131: i32;
  var $i132: i32;
  var $i133: i64;
  var $i134: i64;
  var $i135: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i140: i1;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i139: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i32;
  var $i147: i32;
  var $i148: i64;
  var $i149: i64;
  var $i150: i32;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i155: i1;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i154: i32;
  var $i159: i64;
  var $i160: i64;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i170: i1;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i169: i32;
  var $i174: i64;
  var $i175: i64;
  var $i176: i32;
  var $i177: i32;
  var $i178: i64;
  var $i179: i64;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i185: i1;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i184: i32;
  var $i189: i64;
  var $i190: i64;
  var $i191: i32;
  var $i192: i32;
  var $i193: i64;
  var $i194: i64;
  var $i195: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i200: i1;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i199: i32;
  var $i204: i64;
  var $i205: i64;
  var $i206: i32;
  var $i207: i32;
  var $i208: i64;
  var $i209: i64;
  var $i210: i32;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i215: i1;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i214: i32;
  var $i219: i64;
  var $i220: i64;
  var $i221: i32;
  var $i222: i32;
  var $i223: i64;
  var $i224: i64;
  var $i225: i32;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i230: i1;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i229: i32;
  var $i234: i64;
  var $i235: i64;
  var $i236: i32;
  var $i237: i32;
  var $i238: i64;
  var $i239: i64;
  var $i240: i32;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i245: i1;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i244: i32;
  var $i249: i64;
  var $i250: i64;
  var $i251: i32;
  var $i252: i32;
  var $i253: i64;
  var $i254: i64;
  var $i255: i32;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i260: i1;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i259: i32;
  var $i264: i64;
  var $i265: i64;
  var $i266: i32;
  var $i267: i32;
  var $i268: i64;
  var $i269: i64;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i275: i1;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i274: i32;
  var $i279: i64;
  var $i280: i64;
  var $i281: i32;
  var $i282: i32;
  var $i283: i64;
  var $i284: i64;
  var $i285: i32;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i290: i1;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i289: i32;
  var $i294: i64;
  var $i295: i64;
  var $i296: i32;
  var $i297: i32;
  var $i298: i64;
  var $i299: i64;
  var $i300: i32;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i305: i1;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i304: i32;
  var $i309: i64;
  var $i310: i64;
  var $i311: i32;
  var $i312: i32;
  var $i313: i64;
  var $i314: i64;
  var $i315: i32;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i320: i1;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i319: i32;
  var $i324: i64;
  var $i325: i64;
  var $i326: i32;
  var $i327: i32;
  var $i328: i64;
  var $i329: i64;
  var $i330: i32;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i335: i1;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i334: i32;
  var $i339: i64;
  var $i340: i64;
  var $i341: i32;
  var $i342: i32;
  var $i343: i64;
  var $i344: i64;
  var $i345: i32;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i350: i1;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i349: i32;
  var $i354: i64;
  var $i355: i64;
  var $i356: i32;
  var $i357: i32;
  var $i358: i64;
  var $i359: i64;
  var $i360: i32;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i365: i1;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i364: i32;
  var $i369: i64;
  var $i370: i64;
  var $i371: i32;
  var $i372: i32;
  var $i373: i64;
  var $i374: i64;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i380: i1;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i379: i32;
  var $i384: i64;
  var $i385: i64;
  var $i386: i32;
  var $i387: i32;
  var $i388: i64;
  var $i389: i64;
  var $i390: i32;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i395: i1;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i394: i32;
  var $i399: i64;
  var $i400: i64;
  var $i401: i32;
  var $i402: i32;
  var $i403: i64;
  var $i404: i64;
  var $i405: i32;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i410: i1;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i409: i32;
  var $i414: i64;
  var $i415: i64;
  var $i416: i32;
  var $i417: i32;
  var $i418: i64;
  var $i419: i64;
  var $i420: i32;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i425: i1;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i424: i32;
  var $i429: i64;
  var $i430: i64;
  var $i431: i32;
  var $i432: i32;
  var $i433: i64;
  var $i434: i64;
  var $i435: i32;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i440: i1;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i439: i32;
  var $i444: i64;
  var $i445: i64;
  var $i446: i32;
  var $i447: i32;
  var $i448: i64;
  var $i449: i64;
  var $i450: i32;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i455: i1;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i454: i32;
  var $i459: i64;
  var $i460: i64;
  var $i461: i32;
  var $i462: i32;
  var $i463: i64;
  var $i464: i64;
  var $i465: i32;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i470: i1;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i469: i32;
  var $i474: i64;
  var $i475: i64;
  var $i476: i32;
  var $i477: i32;
  var $i478: i64;
  var $i479: i64;
  var $i480: i32;
  var $i481: i32;
  var $i482: i32;
  var $i483: i1;
  var $i485: i1;
  var $i486: i1;
  var $i488: i32;
  var $i487: i32;
  var $i484: i32;
  var $i489: i64;
  var $i490: i64;
  var $i491: i32;
  var $i492: i32;
  var $i493: i64;
  var $i494: i64;
  var $i495: i32;
  var $i496: i32;
  var $i497: i32;
  var $i498: i1;
  var $i500: i1;
  var $i501: i1;
  var $i503: i32;
  var $i502: i32;
  var $i499: i32;
  var $i504: i64;
  var $i505: i64;
  var $i506: i32;
  var $i507: i32;
  var $i508: i64;
  var $i509: i64;
  var $i510: i32;
  var $i511: i32;
  var $i512: i32;
  var $i513: i1;
  var $i515: i1;
  var $i516: i1;
  var $i518: i32;
  var $i517: i32;
  var $i514: i32;
  var $i519: i64;
  var $i520: i64;
  var $i521: i32;
  var $i522: i32;
  var $i523: i64;
  var $i524: i64;
  var $i525: i32;
  var $i526: i32;
  var $i527: i32;
  var $i528: i1;
  var $i530: i1;
  var $i531: i1;
  var $i533: i32;
  var $i532: i32;
  var $i529: i32;
  var $i534: i64;
  var $i535: i64;
  var $i536: i32;
  var $i537: i32;
  var $i538: i64;
  var $i539: i64;
  var $i540: i32;
  var $i541: i32;
  var $i542: i32;
  var $i543: i1;
  var $i545: i1;
  var $i546: i1;
  var $i548: i32;
  var $i547: i32;
  var $i544: i32;
  var $i549: i64;
  var $i550: i64;
  var $i551: i32;
  var $i552: i32;
  var $i553: i64;
  var $i554: i64;
  var $i555: i32;
  var $i556: i32;
  var $i557: i32;
  var $i558: i1;
  var $i560: i1;
  var $i561: i1;
  var $i563: i32;
  var $i562: i32;
  var $i559: i32;
  var $i564: i64;
  var $i565: i64;
  var $i566: i32;
  var $i567: i32;
  var $i568: i64;
  var $i569: i64;
  var $i570: i32;
  var $i571: i32;
  var $i572: i32;
  var $i573: i1;
  var $i575: i1;
  var $i576: i1;
  var $i578: i32;
  var $i577: i32;
  var $i574: i32;
  var $i579: i64;
  var $i580: i64;
  var $i581: i32;
  var $i582: i32;
  var $i583: i64;
  var $i584: i64;
  var $i585: i32;
  var $i586: i32;
  var $i587: i32;
  var $i588: i1;
  var $i590: i1;
  var $i591: i1;
  var $i593: i32;
  var $i592: i32;
  var $i589: i32;
  var $i594: i64;
  var $i595: i64;
  var $i596: i32;
  var $i597: i32;
  var $i598: i64;
  var $i599: i64;
  var $i600: i32;
  var $i601: i32;
  var $i602: i32;
  var $i603: i1;
  var $i605: i1;
  var $i606: i1;
  var $i608: i32;
  var $i607: i32;
  var $i604: i32;
  var $i609: i64;
  var $i610: i64;
  var $i611: i32;
  var $i612: i32;
  var $i613: i64;
  var $i614: i64;
  var $i615: i32;
  var $i616: i32;
  var $i617: i32;
  var $i618: i1;
  var $i620: i1;
  var $i621: i1;
  var $i623: i32;
  var $i622: i32;
  var $i619: i32;
  var $i624: i64;
  var $i625: i64;
  var $i626: i32;
  var $i627: i32;
  var $i628: i64;
  var $i629: i64;
  var $i630: i32;
  var $i631: i32;
  var $i632: i32;
  var $i633: i1;
  var $i635: i1;
  var $i636: i1;
  var $i638: i32;
  var $i637: i32;
  var $i634: i32;
  var $i639: i64;
  var $i640: i64;
  var $i641: i32;
  var $i642: i32;
  var $i643: i64;
  var $i644: i64;
  var $i645: i32;
  var $i646: i32;
  var $i647: i32;
  var $i648: i1;
  var $i650: i1;
  var $i651: i1;
  var $i653: i32;
  var $i652: i32;
  var $i649: i32;
  var $i654: i64;
  var $i655: i64;
  var $i656: i32;
  var $i657: i32;
  var $i658: i64;
  var $i659: i64;
  var $i660: i32;
  var $i661: i32;
  var $i662: i32;
  var $i663: i1;
  var $i665: i1;
  var $i666: i1;
  var $i668: i32;
  var $i667: i32;
  var $i664: i32;
  var $i669: i64;
  var $i670: i64;
  var $i671: i32;
  var $i672: i32;
  var $i673: i64;
  var $i674: i64;
  var $i675: i32;
  var $i676: i32;
  var $i677: i32;
  var $i678: i1;
  var $i680: i1;
  var $i681: i1;
  var $i683: i32;
  var $i682: i32;
  var $i679: i32;
  var $i684: i64;
  var $i685: i64;
  var $i686: i32;
  var $i687: i32;
  var $i688: i64;
  var $i689: i64;
  var $i690: i32;
  var $i691: i32;
  var $i692: i32;
  var $i693: i1;
  var $i695: i1;
  var $i696: i1;
  var $i698: i32;
  var $i697: i32;
  var $i694: i32;
  var $i699: i64;
  var $i700: i64;
  var $i701: i32;
  var $i702: i32;
  var $i703: i64;
  var $i704: i64;
  var $i705: i32;
  var $i706: i32;
  var $i707: i32;
  var $i708: i1;
  var $i710: i1;
  var $i711: i1;
  var $i713: i32;
  var $i712: i32;
  var $i709: i32;
  var $i714: i64;
  var $i715: i64;
  var $i716: i32;
  var $i717: i32;
  var $i718: i64;
  var $i719: i64;
  var $i720: i32;
  var $i721: i32;
  var $i722: i32;
  var $i723: i1;
  var $i725: i1;
  var $i726: i1;
  var $i728: i32;
  var $i727: i32;
  var $i724: i32;
  var $i729: i64;
  var $i730: i64;
  var $i731: i32;
  var $i732: i32;
  var $i733: i64;
  var $i734: i64;
  var $i735: i32;
  var $i736: i32;
  var $i737: i32;
  var $i738: i1;
  var $i740: i1;
  var $i741: i1;
  var $i743: i32;
  var $i742: i32;
  var $i739: i32;
  var $i744: i64;
  var $i745: i64;
  var $i746: i32;
  var $i747: i32;
  var $i748: i64;
  var $i749: i64;
  var $i750: i32;
  var $i751: i32;
  var $i752: i32;
  var $i753: i1;
  var $i755: i1;
  var $i756: i1;
  var $i758: i32;
  var $i757: i32;
  var $i754: i32;
  var $i759: i64;
  var $i760: i64;
  var $i761: i32;
  var $i762: i32;
  var $i763: i64;
  var $i764: i64;
  var $i765: i32;
  var $i766: i32;
  var $i767: i32;
  var $i768: i1;
  var $i770: i1;
  var $i771: i1;
  var $i773: i32;
  var $i772: i32;
  var $i769: i32;
  var $i774: i64;
  var $i775: i64;
  var $i776: i32;
  var $i777: i32;
  var $i778: i64;
  var $i779: i64;
  var $i780: i32;
  var $i781: i32;
  var $i782: i32;
  var $i783: i1;
  var $i785: i1;
  var $i786: i1;
  var $i788: i32;
  var $i787: i32;
  var $i784: i32;
  var $i789: i64;
  var $i790: i64;
  var $i791: i32;
  var $i792: i32;
  var $i793: i64;
  var $i794: i64;
  var $i795: i32;
  var $i796: i32;
  var $i797: i32;
  var $i798: i1;
  var $i800: i1;
  var $i801: i1;
  var $i803: i32;
  var $i802: i32;
  var $i799: i32;
  var $i804: i64;
  var $i805: i64;
  var $i806: i32;
  var $i807: i32;
  var $i808: i64;
  var $i809: i64;
  var $i810: i32;
  var $i811: i32;
  var $i812: i32;
  var $i813: i1;
  var $i815: i1;
  var $i816: i1;
  var $i818: i32;
  var $i817: i32;
  var $i814: i32;
  var $i819: i64;
  var $i820: i64;
  var $i821: i32;
  var $i822: i32;
  var $i823: i64;
  var $i824: i64;
  var $i825: i32;
  var $i826: i32;
  var $i827: i32;
  var $i828: i1;
  var $i830: i1;
  var $i831: i1;
  var $i833: i32;
  var $i832: i32;
  var $i829: i32;
  var $i834: i64;
  var $i835: i64;
  var $i836: i32;
  var $i837: i32;
  var $i838: i64;
  var $i839: i64;
  var $i840: i32;
  var $i841: i32;
  var $i842: i32;
  var $i843: i1;
  var $i845: i1;
  var $i846: i1;
  var $i848: i32;
  var $i847: i32;
  var $i844: i32;
  var $i849: i64;
  var $i850: i64;
  var $i851: i32;
  var $i852: i32;
  var $i853: i64;
  var $i854: i64;
  var $i855: i32;
  var $i856: i32;
  var $i857: i32;
  var $i858: i1;
  var $i860: i1;
  var $i861: i1;
  var $i863: i32;
  var $i862: i32;
  var $i859: i32;
  var $i864: i64;
  var $i865: i64;
  var $i866: i32;
  var $i867: i32;
  var $i868: i64;
  var $i869: i64;
  var $i870: i32;
  var $i871: i32;
  var $i872: i32;
  var $i873: i1;
  var $i875: i1;
  var $i876: i1;
  var $i878: i32;
  var $i877: i32;
  var $i874: i32;
  var $i879: i64;
  var $i880: i64;
  var $i881: i32;
  var $i882: i32;
  var $i883: i64;
  var $i884: i64;
  var $i885: i32;
  var $i886: i32;
  var $i887: i32;
  var $i888: i1;
  var $i890: i1;
  var $i891: i1;
  var $i893: i32;
  var $i892: i32;
  var $i889: i32;
  var $i894: i64;
  var $i895: i64;
  var $i896: i32;
  var $i897: i32;
  var $i898: i64;
  var $i899: i64;
  var $i900: i32;
  var $i901: i32;
  var $i902: i32;
  var $i903: i1;
  var $i905: i1;
  var $i906: i1;
  var $i908: i32;
  var $i907: i32;
  var $i904: i32;
  var $i909: i64;
  var $i910: i64;
  var $i911: i32;
  var $i912: i32;
  var $i913: i64;
  var $i914: i64;
  var $i915: i32;
  var $i916: i32;
  var $i917: i32;
  var $i918: i1;
  var $i920: i1;
  var $i921: i1;
  var $i923: i32;
  var $i922: i32;
  var $i919: i32;
  var $i924: i64;
  var $i925: i64;
  var $i926: i32;
  var $i927: i32;
  var $i928: i64;
  var $i929: i64;
  var $i930: i32;
  var $i931: i32;
  var $i932: i32;
  var $i933: i1;
  var $i935: i1;
  var $i936: i1;
  var $i938: i32;
  var $i937: i32;
  var $i934: i32;
  var $i939: i64;
  var $i940: i64;
  var $i941: i32;
  var $i942: i32;
  var $i943: i64;
  var $i944: i64;
  var $i945: i32;
  var $i946: i32;
  var $i947: i32;
  var $i948: i1;
  var $i950: i1;
  var $i951: i1;
  var $i953: i32;
  var $i952: i32;
  var $i949: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_and32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 60, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0, 0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 61, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $srem.i64($i9, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 66, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i64.i32($i10);
  call {:cexpr "a"} boogie_si_record_i32($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 67, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i11, $i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $srem.i64($i13, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 68, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  call {:cexpr "b"} boogie_si_record_i32($i15);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 69, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i15, $i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 71, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i4, $i4);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $i17;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 15} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2, 1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb9;
$bb6:
  assume !(($i5 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i1, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 62, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 65, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i7;
  goto $bb3;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i16, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 72, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i64($i24, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 77, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i64.i32($i25);
  call {:cexpr "a"} boogie_si_record_i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 78, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26, $i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 9} true;
  assume {:verifier.code 0} true;
  $i29 := $srem.i64($i28, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 79, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i64.i32($i29);
  call {:cexpr "b"} boogie_si_record_i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 80, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i32($i30, $i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 82, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i19, $i19);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $i32;
  assume {:branchcond $i33} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 15} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 74, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17, 1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 75, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb18;
$bb15:
  assume !(($i20 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $sgt.i32($i16, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 73, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 76, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i22;
  goto $bb12;
$bb19:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i31, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 83, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $srem.i64($i39, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 88, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i64.i32($i40);
  call {:cexpr "a"} boogie_si_record_i32($i41);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 89, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i41, $i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $srem.i64($i43, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 90, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i64.i32($i44);
  call {:cexpr "b"} boogie_si_record_i32($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 91, 5} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i45, $i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 93, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i34, $i34);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $i47;
  assume {:branchcond $i48} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 15} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 85, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32, 1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 86, 5} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb27;
$bb24:
  assume !(($i35 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 20} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i32($i31, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume ($i36 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 84, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 87, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $i37;
  goto $bb21;
$bb28:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i46, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 94, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i48 == 1));
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $srem.i64($i54, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 99, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i64.i32($i55);
  call {:cexpr "a"} boogie_si_record_i32($i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 100, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i56, $i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $srem.i64($i58, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 101, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $trunc.i64.i32($i59);
  call {:cexpr "b"} boogie_si_record_i32($i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 102, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i32($i60, $i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i49, $i49);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $i62;
  assume {:branchcond $i63} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 15} true;
  assume {:verifier.code 0} true;
  assume ($i50 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 96, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47, 1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 97, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb36;
$bb33:
  assume !(($i50 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $sgt.i32($i46, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i51 == 1));
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 98, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $i52;
  goto $bb30;
$bb37:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i61, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i63 == 1));
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 9} true;
  assume {:verifier.code 0} true;
  $i70 := $srem.i64($i69, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 110, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i64.i32($i70);
  call {:cexpr "a"} boogie_si_record_i32($i71);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 111, 5} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i71, $i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $srem.i64($i73, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 112, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i64.i32($i74);
  call {:cexpr "b"} boogie_si_record_i32($i75);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 113, 5} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i75, $i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i64, $i64);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $i77;
  assume {:branchcond $i78} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 15} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 107, 9} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62, 1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 108, 5} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb45;
$bb42:
  assume !(($i65 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 20} true;
  assume {:verifier.code 0} true;
  $i66 := $sgt.i32($i61, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume ($i66 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 106, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 109, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $i67;
  goto $bb39;
$bb46:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 11} true;
  assume {:verifier.code 0} true;
  $i80 := $slt.i32($i76, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i78 == 1));
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $srem.i64($i84, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 121, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i64.i32($i85);
  call {:cexpr "a"} boogie_si_record_i32($i86);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 122, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86, $i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $srem.i64($i88, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 123, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i64.i32($i89);
  call {:cexpr "b"} boogie_si_record_i32($i90);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 124, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90, $i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 126, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i79, $i79);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $i92;
  assume {:branchcond $i93} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 15} true;
  assume {:verifier.code 0} true;
  assume ($i80 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 118, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77, 1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 119, 5} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb54;
$bb51:
  assume !(($i80 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 20} true;
  assume {:verifier.code 0} true;
  $i81 := $sgt.i32($i76, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume ($i81 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1));
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 120, 3} true;
  assume {:verifier.code 0} true;
  $i79 := $i82;
  goto $bb48;
$bb55:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $slt.i32($i91, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 127, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i93 == 1));
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $sext.i32.i64($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $srem.i64($i99, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 132, 7} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i64.i32($i100);
  call {:cexpr "a"} boogie_si_record_i32($i101);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 133, 5} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101, $i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $sext.i32.i64($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 9} true;
  assume {:verifier.code 0} true;
  $i104 := $srem.i64($i103, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 134, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $trunc.i64.i32($i104);
  call {:cexpr "b"} boogie_si_record_i32($i105);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 135, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105, $i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 137, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i94, $i94);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $i107;
  assume {:branchcond $i108} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 15} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 129, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92, 1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 130, 5} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb63;
$bb60:
  assume !(($i95 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 20} true;
  assume {:verifier.code 0} true;
  $i96 := $sgt.i32($i91, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume ($i96 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 128, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i96 == 1));
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 131, 3} true;
  assume {:verifier.code 0} true;
  $i94 := $i97;
  goto $bb57;
$bb64:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 11} true;
  assume {:verifier.code 0} true;
  $i110 := $slt.i32($i106, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i108 == 1));
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $srem.i64($i114, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 143, 7} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.i64.i32($i115);
  call {:cexpr "a"} boogie_si_record_i32($i116);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 144, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $add.i32($i116, $i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i32.i64($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $srem.i64($i118, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i64.i32($i119);
  call {:cexpr "b"} boogie_si_record_i32($i120);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i120, $i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 148, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i109, $i109);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i122;
  assume {:branchcond $i123} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 15} true;
  assume {:verifier.code 0} true;
  assume ($i110 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107, 1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 141, 5} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb72;
$bb69:
  assume !(($i110 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 20} true;
  assume {:verifier.code 0} true;
  $i111 := $sgt.i32($i106, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume ($i111 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i111 == 1));
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 142, 3} true;
  assume {:verifier.code 0} true;
  $i109 := $i112;
  goto $bb66;
$bb73:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 11} true;
  assume {:verifier.code 0} true;
  $i125 := $slt.i32($i121, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 149, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i123 == 1));
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $srem.i64($i129, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 154, 7} true;
  assume {:verifier.code 0} true;
  $i131 := $trunc.i64.i32($i130);
  call {:cexpr "a"} boogie_si_record_i32($i131);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 155, 5} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i131, $i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i64($i133, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 156, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i64.i32($i134);
  call {:cexpr "b"} boogie_si_record_i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 157, 5} true;
  assume {:verifier.code 0} true;
  $i136 := $add.i32($i135, $i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 159, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i124, $i124);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $i137;
  assume {:branchcond $i138} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 15} true;
  assume {:verifier.code 0} true;
  assume ($i125 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 151, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122, 1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 152, 5} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb81;
$bb78:
  assume !(($i125 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 20} true;
  assume {:verifier.code 0} true;
  $i126 := $sgt.i32($i121, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 150, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i126 == 1));
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 153, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i127;
  goto $bb75;
$bb82:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $slt.i32($i136, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 160, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i138 == 1));
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i32.i64($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 9} true;
  assume {:verifier.code 0} true;
  $i145 := $srem.i64($i144, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 165, 7} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i64.i32($i145);
  call {:cexpr "a"} boogie_si_record_i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 166, 5} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i146, $i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i32.i64($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 9} true;
  assume {:verifier.code 0} true;
  $i149 := $srem.i64($i148, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 167, 7} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i64.i32($i149);
  call {:cexpr "b"} boogie_si_record_i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 168, 5} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i32($i150, $i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i139, $i139);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $i152;
  assume {:branchcond $i153} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 15} true;
  assume {:verifier.code 0} true;
  assume ($i140 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 162, 9} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137, 1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 163, 5} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb90;
$bb87:
  assume !(($i140 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 20} true;
  assume {:verifier.code 0} true;
  $i141 := $sgt.i32($i136, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume ($i141 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 161, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i141 == 1));
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 164, 3} true;
  assume {:verifier.code 0} true;
  $i139 := $i142;
  goto $bb84;
$bb91:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i151, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i153 == 1));
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i32.i64($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $srem.i64($i159, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 176, 7} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i64.i32($i160);
  call {:cexpr "a"} boogie_si_record_i32($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 177, 5} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i32($i161, $i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i32.i64($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 9} true;
  assume {:verifier.code 0} true;
  $i164 := $srem.i64($i163, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 178, 7} true;
  assume {:verifier.code 0} true;
  $i165 := $trunc.i64.i32($i164);
  call {:cexpr "b"} boogie_si_record_i32($i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 179, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $add.i32($i165, $i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 181, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i154, $i154);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $i167;
  assume {:branchcond $i168} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152, 1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb99;
$bb96:
  assume !(($i155 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 20} true;
  assume {:verifier.code 0} true;
  $i156 := $sgt.i32($i151, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume ($i156 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i156 == 1));
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 175, 3} true;
  assume {:verifier.code 0} true;
  $i154 := $i157;
  goto $bb93;
$bb100:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 11} true;
  assume {:verifier.code 0} true;
  $i170 := $slt.i32($i166, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 182, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i168 == 1));
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i174 := $sext.i32.i64($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 9} true;
  assume {:verifier.code 0} true;
  $i175 := $srem.i64($i174, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 187, 7} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i64.i32($i175);
  call {:cexpr "a"} boogie_si_record_i32($i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 188, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i32($i176, $i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i178 := $sext.i32.i64($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 9} true;
  assume {:verifier.code 0} true;
  $i179 := $srem.i64($i178, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 189, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $trunc.i64.i32($i179);
  call {:cexpr "b"} boogie_si_record_i32($i180);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 190, 5} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i32($i180, $i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 192, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i169, $i169);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $i182;
  assume {:branchcond $i183} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 15} true;
  assume {:verifier.code 0} true;
  assume ($i170 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 184, 9} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167, 1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 185, 5} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb108;
$bb105:
  assume !(($i170 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 20} true;
  assume {:verifier.code 0} true;
  $i171 := $sgt.i32($i166, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume ($i171 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 183, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i171 == 1));
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 186, 3} true;
  assume {:verifier.code 0} true;
  $i169 := $i172;
  goto $bb102;
$bb109:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 11} true;
  assume {:verifier.code 0} true;
  $i185 := $slt.i32($i181, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 193, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i183 == 1));
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i189 := $sext.i32.i64($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $srem.i64($i189, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 198, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $trunc.i64.i32($i190);
  call {:cexpr "a"} boogie_si_record_i32($i191);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 199, 5} true;
  assume {:verifier.code 0} true;
  $i192 := $add.i32($i191, $i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $sext.i32.i64($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 9} true;
  assume {:verifier.code 0} true;
  $i194 := $srem.i64($i193, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 200, 7} true;
  assume {:verifier.code 0} true;
  $i195 := $trunc.i64.i32($i194);
  call {:cexpr "b"} boogie_si_record_i32($i195);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 201, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195, $i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 203, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i184, $i184);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $i197;
  assume {:branchcond $i198} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 15} true;
  assume {:verifier.code 0} true;
  assume ($i185 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 195, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182, 1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 196, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb117;
$bb114:
  assume !(($i185 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i181, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 194, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i186 == 1));
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 197, 3} true;
  assume {:verifier.code 0} true;
  $i184 := $i187;
  goto $bb111;
$bb118:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 11} true;
  assume {:verifier.code 0} true;
  $i200 := $slt.i32($i196, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 204, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i198 == 1));
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i204 := $sext.i32.i64($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 9} true;
  assume {:verifier.code 0} true;
  $i205 := $srem.i64($i204, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 209, 7} true;
  assume {:verifier.code 0} true;
  $i206 := $trunc.i64.i32($i205);
  call {:cexpr "a"} boogie_si_record_i32($i206);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 210, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206, $i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i208 := $sext.i32.i64($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 9} true;
  assume {:verifier.code 0} true;
  $i209 := $srem.i64($i208, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 211, 7} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i64.i32($i209);
  call {:cexpr "b"} boogie_si_record_i32($i210);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 212, 5} true;
  assume {:verifier.code 0} true;
  $i211 := $add.i32($i210, $i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 214, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i199, $i199);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $i212;
  assume {:branchcond $i213} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 15} true;
  assume {:verifier.code 0} true;
  assume ($i200 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 206, 9} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197, 1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 207, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb126;
$bb123:
  assume !(($i200 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $sgt.i32($i196, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume ($i201 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 205, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i201 == 1));
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 208, 3} true;
  assume {:verifier.code 0} true;
  $i199 := $i202;
  goto $bb120;
$bb127:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 11} true;
  assume {:verifier.code 0} true;
  $i215 := $slt.i32($i211, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 215, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i213 == 1));
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i219 := $sext.i32.i64($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 9} true;
  assume {:verifier.code 0} true;
  $i220 := $srem.i64($i219, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 220, 7} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i64.i32($i220);
  call {:cexpr "a"} boogie_si_record_i32($i221);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 221, 5} true;
  assume {:verifier.code 0} true;
  $i222 := $add.i32($i221, $i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i32.i64($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 9} true;
  assume {:verifier.code 0} true;
  $i224 := $srem.i64($i223, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 222, 7} true;
  assume {:verifier.code 0} true;
  $i225 := $trunc.i64.i32($i224);
  call {:cexpr "b"} boogie_si_record_i32($i225);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 223, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i32($i225, $i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 225, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i214, $i214);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $i227;
  assume {:branchcond $i228} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 15} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 217, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212, 1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 218, 5} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb135;
$bb132:
  assume !(($i215 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 20} true;
  assume {:verifier.code 0} true;
  $i216 := $sgt.i32($i211, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume ($i216 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 216, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i216 == 1));
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 219, 3} true;
  assume {:verifier.code 0} true;
  $i214 := $i217;
  goto $bb129;
$bb136:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 11} true;
  assume {:verifier.code 0} true;
  $i230 := $slt.i32($i226, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 226, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i228 == 1));
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i32.i64($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 9} true;
  assume {:verifier.code 0} true;
  $i235 := $srem.i64($i234, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 7} true;
  assume {:verifier.code 0} true;
  $i236 := $trunc.i64.i32($i235);
  call {:cexpr "a"} boogie_si_record_i32($i236);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $add.i32($i236, $i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i32.i64($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $srem.i64($i238, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i64.i32($i239);
  call {:cexpr "b"} boogie_si_record_i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 234, 5} true;
  assume {:verifier.code 0} true;
  $i241 := $add.i32($i240, $i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 236, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i229, $i229);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $i242;
  assume {:branchcond $i243} true;
  goto $bb145, $bb146;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 15} true;
  assume {:verifier.code 0} true;
  assume ($i230 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 228, 9} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227, 1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 229, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb144;
$bb141:
  assume !(($i230 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 20} true;
  assume {:verifier.code 0} true;
  $i231 := $sgt.i32($i226, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume ($i231 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 227, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i231 == 1));
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 230, 3} true;
  assume {:verifier.code 0} true;
  $i229 := $i232;
  goto $bb138;
$bb145:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 11} true;
  assume {:verifier.code 0} true;
  $i245 := $slt.i32($i241, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb148, $bb150;
$bb146:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 237, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i243 == 1));
  goto $bb147;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i32.i64($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i64($i249, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i64.i32($i250);
  call {:cexpr "a"} boogie_si_record_i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 243, 5} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i32($i251, $i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i32.i64($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 9} true;
  assume {:verifier.code 0} true;
  $i254 := $srem.i64($i253, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 244, 7} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i64.i32($i254);
  call {:cexpr "b"} boogie_si_record_i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 245, 5} true;
  assume {:verifier.code 0} true;
  $i256 := $add.i32($i255, $i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 247, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i244, $i244);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $i257;
  assume {:branchcond $i258} true;
  goto $bb154, $bb155;
$bb148:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 15} true;
  assume {:verifier.code 0} true;
  assume ($i245 == 1);
  goto $bb149;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 239, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242, 1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 240, 5} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb153;
$bb150:
  assume !(($i245 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 20} true;
  assume {:verifier.code 0} true;
  $i246 := $sgt.i32($i241, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb151, $bb152;
$bb151:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume ($i246 == 1);
  goto $bb149;
$bb152:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 238, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i246 == 1));
  goto $bb153;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 241, 3} true;
  assume {:verifier.code 0} true;
  $i244 := $i247;
  goto $bb147;
$bb154:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 11} true;
  assume {:verifier.code 0} true;
  $i260 := $slt.i32($i256, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i260} true;
  goto $bb157, $bb159;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i258 == 1));
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i32.i64($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 9} true;
  assume {:verifier.code 0} true;
  $i265 := $srem.i64($i264, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 7} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i64.i32($i265);
  call {:cexpr "a"} boogie_si_record_i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 254, 5} true;
  assume {:verifier.code 0} true;
  $i267 := $add.i32($i266, $i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i268 := $sext.i32.i64($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 9} true;
  assume {:verifier.code 0} true;
  $i269 := $srem.i64($i268, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 255, 7} true;
  assume {:verifier.code 0} true;
  $i270 := $trunc.i64.i32($i269);
  call {:cexpr "b"} boogie_si_record_i32($i270);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 5} true;
  assume {:verifier.code 0} true;
  $i271 := $add.i32($i270, $i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i259, $i259);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $i272;
  assume {:branchcond $i273} true;
  goto $bb163, $bb164;
$bb157:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 15} true;
  assume {:verifier.code 0} true;
  assume ($i260 == 1);
  goto $bb158;
$bb158:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 250, 9} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257, 1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 251, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb162;
$bb159:
  assume !(($i260 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 20} true;
  assume {:verifier.code 0} true;
  $i261 := $sgt.i32($i256, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb160, $bb161;
$bb160:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume ($i261 == 1);
  goto $bb158;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 249, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i261 == 1));
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 3} true;
  assume {:verifier.code 0} true;
  $i259 := $i262;
  goto $bb156;
$bb163:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 11} true;
  assume {:verifier.code 0} true;
  $i275 := $slt.i32($i271, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  goto $bb166, $bb168;
$bb164:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 259, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i273 == 1));
  goto $bb165;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i279 := $sext.i32.i64($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 9} true;
  assume {:verifier.code 0} true;
  $i280 := $srem.i64($i279, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 264, 7} true;
  assume {:verifier.code 0} true;
  $i281 := $trunc.i64.i32($i280);
  call {:cexpr "a"} boogie_si_record_i32($i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 265, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $add.i32($i281, $i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i283 := $sext.i32.i64($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 9} true;
  assume {:verifier.code 0} true;
  $i284 := $srem.i64($i283, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 266, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $trunc.i64.i32($i284);
  call {:cexpr "b"} boogie_si_record_i32($i285);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 267, 5} true;
  assume {:verifier.code 0} true;
  $i286 := $add.i32($i285, $i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 269, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i274, $i274);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $i287;
  assume {:branchcond $i288} true;
  goto $bb172, $bb173;
$bb166:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 15} true;
  assume {:verifier.code 0} true;
  assume ($i275 == 1);
  goto $bb167;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 261, 9} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272, 1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 262, 5} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb171;
$bb168:
  assume !(($i275 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 20} true;
  assume {:verifier.code 0} true;
  $i276 := $sgt.i32($i271, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb169, $bb170;
$bb169:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume ($i276 == 1);
  goto $bb167;
$bb170:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 260, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i276 == 1));
  goto $bb171;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 263, 3} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb165;
$bb172:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 11} true;
  assume {:verifier.code 0} true;
  $i290 := $slt.i32($i286, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i290} true;
  goto $bb175, $bb177;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 270, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i288 == 1));
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i294 := $sext.i32.i64($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 9} true;
  assume {:verifier.code 0} true;
  $i295 := $srem.i64($i294, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 275, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $trunc.i64.i32($i295);
  call {:cexpr "a"} boogie_si_record_i32($i296);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 276, 5} true;
  assume {:verifier.code 0} true;
  $i297 := $add.i32($i296, $i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $sext.i32.i64($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $srem.i64($i298, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 277, 7} true;
  assume {:verifier.code 0} true;
  $i300 := $trunc.i64.i32($i299);
  call {:cexpr "b"} boogie_si_record_i32($i300);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 278, 5} true;
  assume {:verifier.code 0} true;
  $i301 := $add.i32($i300, $i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 280, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i289, $i289);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $i302;
  assume {:branchcond $i303} true;
  goto $bb181, $bb182;
$bb175:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 15} true;
  assume {:verifier.code 0} true;
  assume ($i290 == 1);
  goto $bb176;
$bb176:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 272, 9} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287, 1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 273, 5} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb180;
$bb177:
  assume !(($i290 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 20} true;
  assume {:verifier.code 0} true;
  $i291 := $sgt.i32($i286, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb178, $bb179;
$bb178:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume ($i291 == 1);
  goto $bb176;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 271, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i291 == 1));
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 274, 3} true;
  assume {:verifier.code 0} true;
  $i289 := $i292;
  goto $bb174;
$bb181:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 11} true;
  assume {:verifier.code 0} true;
  $i305 := $slt.i32($i301, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i305} true;
  goto $bb184, $bb186;
$bb182:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 281, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i303 == 1));
  goto $bb183;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $sext.i32.i64($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 9} true;
  assume {:verifier.code 0} true;
  $i310 := $srem.i64($i309, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 286, 7} true;
  assume {:verifier.code 0} true;
  $i311 := $trunc.i64.i32($i310);
  call {:cexpr "a"} boogie_si_record_i32($i311);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 287, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311, $i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i313 := $sext.i32.i64($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 9} true;
  assume {:verifier.code 0} true;
  $i314 := $srem.i64($i313, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 288, 7} true;
  assume {:verifier.code 0} true;
  $i315 := $trunc.i64.i32($i314);
  call {:cexpr "b"} boogie_si_record_i32($i315);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 289, 5} true;
  assume {:verifier.code 0} true;
  $i316 := $add.i32($i315, $i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 291, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i304, $i304);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $i317;
  assume {:branchcond $i318} true;
  goto $bb190, $bb191;
$bb184:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 15} true;
  assume {:verifier.code 0} true;
  assume ($i305 == 1);
  goto $bb185;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 283, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302, 1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 284, 5} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb189;
$bb186:
  assume !(($i305 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 20} true;
  assume {:verifier.code 0} true;
  $i306 := $sgt.i32($i301, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb187, $bb188;
$bb187:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume ($i306 == 1);
  goto $bb185;
$bb188:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 282, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i306 == 1));
  goto $bb189;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 285, 3} true;
  assume {:verifier.code 0} true;
  $i304 := $i307;
  goto $bb183;
$bb190:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 11} true;
  assume {:verifier.code 0} true;
  $i320 := $slt.i32($i316, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i320} true;
  goto $bb193, $bb195;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 292, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i318 == 1));
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i324 := $sext.i32.i64($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 9} true;
  assume {:verifier.code 0} true;
  $i325 := $srem.i64($i324, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 297, 7} true;
  assume {:verifier.code 0} true;
  $i326 := $trunc.i64.i32($i325);
  call {:cexpr "a"} boogie_si_record_i32($i326);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 298, 5} true;
  assume {:verifier.code 0} true;
  $i327 := $add.i32($i326, $i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i32.i64($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 9} true;
  assume {:verifier.code 0} true;
  $i329 := $srem.i64($i328, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 299, 7} true;
  assume {:verifier.code 0} true;
  $i330 := $trunc.i64.i32($i329);
  call {:cexpr "b"} boogie_si_record_i32($i330);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 300, 5} true;
  assume {:verifier.code 0} true;
  $i331 := $add.i32($i330, $i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 302, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i319, $i319);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $i332;
  assume {:branchcond $i333} true;
  goto $bb199, $bb200;
$bb193:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 15} true;
  assume {:verifier.code 0} true;
  assume ($i320 == 1);
  goto $bb194;
$bb194:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 294, 9} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317, 1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 295, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb198;
$bb195:
  assume !(($i320 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 20} true;
  assume {:verifier.code 0} true;
  $i321 := $sgt.i32($i316, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb196, $bb197;
$bb196:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume ($i321 == 1);
  goto $bb194;
$bb197:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 293, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i321 == 1));
  goto $bb198;
$bb198:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 296, 3} true;
  assume {:verifier.code 0} true;
  $i319 := $i322;
  goto $bb192;
$bb199:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 11} true;
  assume {:verifier.code 0} true;
  $i335 := $slt.i32($i331, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i335} true;
  goto $bb202, $bb204;
$bb200:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 303, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i333 == 1));
  goto $bb201;
$bb201:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i32.i64($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 9} true;
  assume {:verifier.code 0} true;
  $i340 := $srem.i64($i339, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 308, 7} true;
  assume {:verifier.code 0} true;
  $i341 := $trunc.i64.i32($i340);
  call {:cexpr "a"} boogie_si_record_i32($i341);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 309, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $add.i32($i341, $i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i32.i64($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i64($i343, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 310, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i64.i32($i344);
  call {:cexpr "b"} boogie_si_record_i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 311, 5} true;
  assume {:verifier.code 0} true;
  $i346 := $add.i32($i345, $i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 313, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i334, $i334);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $i347;
  assume {:branchcond $i348} true;
  goto $bb208, $bb209;
$bb202:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 15} true;
  assume {:verifier.code 0} true;
  assume ($i335 == 1);
  goto $bb203;
$bb203:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 305, 9} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332, 1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 306, 5} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb207;
$bb204:
  assume !(($i335 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 20} true;
  assume {:verifier.code 0} true;
  $i336 := $sgt.i32($i331, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb205, $bb206;
$bb205:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume ($i336 == 1);
  goto $bb203;
$bb206:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 304, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i336 == 1));
  goto $bb207;
$bb207:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 307, 3} true;
  assume {:verifier.code 0} true;
  $i334 := $i337;
  goto $bb201;
$bb208:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 11} true;
  assume {:verifier.code 0} true;
  $i350 := $slt.i32($i346, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i350} true;
  goto $bb211, $bb213;
$bb209:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 314, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i348 == 1));
  goto $bb210;
$bb210:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i32.i64($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $srem.i64($i354, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 319, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $trunc.i64.i32($i355);
  call {:cexpr "a"} boogie_si_record_i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 320, 5} true;
  assume {:verifier.code 0} true;
  $i357 := $add.i32($i356, $i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i358 := $sext.i32.i64($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 9} true;
  assume {:verifier.code 0} true;
  $i359 := $srem.i64($i358, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 321, 7} true;
  assume {:verifier.code 0} true;
  $i360 := $trunc.i64.i32($i359);
  call {:cexpr "b"} boogie_si_record_i32($i360);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 322, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $add.i32($i360, $i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 324, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i349, $i349);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $i362;
  assume {:branchcond $i363} true;
  goto $bb217, $bb218;
$bb211:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 15} true;
  assume {:verifier.code 0} true;
  assume ($i350 == 1);
  goto $bb212;
$bb212:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 316, 9} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347, 1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 317, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb216;
$bb213:
  assume !(($i350 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 20} true;
  assume {:verifier.code 0} true;
  $i351 := $sgt.i32($i346, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb214, $bb215;
$bb214:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume ($i351 == 1);
  goto $bb212;
$bb215:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 315, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i351 == 1));
  goto $bb216;
$bb216:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 318, 3} true;
  assume {:verifier.code 0} true;
  $i349 := $i352;
  goto $bb210;
$bb217:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 11} true;
  assume {:verifier.code 0} true;
  $i365 := $slt.i32($i361, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i365} true;
  goto $bb220, $bb222;
$bb218:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 325, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i363 == 1));
  goto $bb219;
$bb219:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i32.i64($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 9} true;
  assume {:verifier.code 0} true;
  $i370 := $srem.i64($i369, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 330, 7} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i64.i32($i370);
  call {:cexpr "a"} boogie_si_record_i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 331, 5} true;
  assume {:verifier.code 0} true;
  $i372 := $add.i32($i371, $i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 9} true;
  assume {:verifier.code 0} true;
  $i374 := $srem.i64($i373, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 332, 7} true;
  assume {:verifier.code 0} true;
  $i375 := $trunc.i64.i32($i374);
  call {:cexpr "b"} boogie_si_record_i32($i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 333, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $add.i32($i375, $i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 335, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i364, $i364);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $i377;
  assume {:branchcond $i378} true;
  goto $bb226, $bb227;
$bb220:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 15} true;
  assume {:verifier.code 0} true;
  assume ($i365 == 1);
  goto $bb221;
$bb221:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 327, 9} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362, 1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 328, 5} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb225;
$bb222:
  assume !(($i365 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 20} true;
  assume {:verifier.code 0} true;
  $i366 := $sgt.i32($i361, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb223, $bb224;
$bb223:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume ($i366 == 1);
  goto $bb221;
$bb224:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 326, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i366 == 1));
  goto $bb225;
$bb225:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 329, 3} true;
  assume {:verifier.code 0} true;
  $i364 := $i367;
  goto $bb219;
$bb226:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 11} true;
  assume {:verifier.code 0} true;
  $i380 := $slt.i32($i376, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i380} true;
  goto $bb229, $bb231;
$bb227:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 336, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i378 == 1));
  goto $bb228;
$bb228:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i384 := $sext.i32.i64($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 9} true;
  assume {:verifier.code 0} true;
  $i385 := $srem.i64($i384, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 341, 7} true;
  assume {:verifier.code 0} true;
  $i386 := $trunc.i64.i32($i385);
  call {:cexpr "a"} boogie_si_record_i32($i386);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 342, 5} true;
  assume {:verifier.code 0} true;
  $i387 := $add.i32($i386, $i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i32.i64($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 9} true;
  assume {:verifier.code 0} true;
  $i389 := $srem.i64($i388, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 343, 7} true;
  assume {:verifier.code 0} true;
  $i390 := $trunc.i64.i32($i389);
  call {:cexpr "b"} boogie_si_record_i32($i390);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 344, 5} true;
  assume {:verifier.code 0} true;
  $i391 := $add.i32($i390, $i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 346, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i379, $i379);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $i392;
  assume {:branchcond $i393} true;
  goto $bb235, $bb236;
$bb229:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 15} true;
  assume {:verifier.code 0} true;
  assume ($i380 == 1);
  goto $bb230;
$bb230:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 338, 9} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377, 1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 339, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb234;
$bb231:
  assume !(($i380 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 20} true;
  assume {:verifier.code 0} true;
  $i381 := $sgt.i32($i376, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb232, $bb233;
$bb232:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume ($i381 == 1);
  goto $bb230;
$bb233:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 337, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i381 == 1));
  goto $bb234;
$bb234:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 340, 3} true;
  assume {:verifier.code 0} true;
  $i379 := $i382;
  goto $bb228;
$bb235:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 11} true;
  assume {:verifier.code 0} true;
  $i395 := $slt.i32($i391, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i395} true;
  goto $bb238, $bb240;
$bb236:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 347, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i393 == 1));
  goto $bb237;
$bb237:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i399 := $sext.i32.i64($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 9} true;
  assume {:verifier.code 0} true;
  $i400 := $srem.i64($i399, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 352, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $trunc.i64.i32($i400);
  call {:cexpr "a"} boogie_si_record_i32($i401);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 353, 5} true;
  assume {:verifier.code 0} true;
  $i402 := $add.i32($i401, $i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $sext.i32.i64($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 9} true;
  assume {:verifier.code 0} true;
  $i404 := $srem.i64($i403, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 354, 7} true;
  assume {:verifier.code 0} true;
  $i405 := $trunc.i64.i32($i404);
  call {:cexpr "b"} boogie_si_record_i32($i405);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 355, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405, $i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 357, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i394, $i394);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $i407;
  assume {:branchcond $i408} true;
  goto $bb244, $bb245;
$bb238:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 15} true;
  assume {:verifier.code 0} true;
  assume ($i395 == 1);
  goto $bb239;
$bb239:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 349, 9} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392, 1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 350, 5} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb243;
$bb240:
  assume !(($i395 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 20} true;
  assume {:verifier.code 0} true;
  $i396 := $sgt.i32($i391, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb241, $bb242;
$bb241:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume ($i396 == 1);
  goto $bb239;
$bb242:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 348, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i396 == 1));
  goto $bb243;
$bb243:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 351, 3} true;
  assume {:verifier.code 0} true;
  $i394 := $i397;
  goto $bb237;
$bb244:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 11} true;
  assume {:verifier.code 0} true;
  $i410 := $slt.i32($i406, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i410} true;
  goto $bb247, $bb249;
$bb245:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 358, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i408 == 1));
  goto $bb246;
$bb246:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $sext.i32.i64($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $srem.i64($i414, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 363, 7} true;
  assume {:verifier.code 0} true;
  $i416 := $trunc.i64.i32($i415);
  call {:cexpr "a"} boogie_si_record_i32($i416);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 364, 5} true;
  assume {:verifier.code 0} true;
  $i417 := $add.i32($i416, $i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i418 := $sext.i32.i64($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $srem.i64($i418, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 365, 7} true;
  assume {:verifier.code 0} true;
  $i420 := $trunc.i64.i32($i419);
  call {:cexpr "b"} boogie_si_record_i32($i420);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 366, 5} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420, $i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 368, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i409, $i409);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $i422;
  assume {:branchcond $i423} true;
  goto $bb253, $bb254;
$bb247:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 15} true;
  assume {:verifier.code 0} true;
  assume ($i410 == 1);
  goto $bb248;
$bb248:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 360, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407, 1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 361, 5} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb252;
$bb249:
  assume !(($i410 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 20} true;
  assume {:verifier.code 0} true;
  $i411 := $sgt.i32($i406, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb250, $bb251;
$bb250:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume ($i411 == 1);
  goto $bb248;
$bb251:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 359, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i411 == 1));
  goto $bb252;
$bb252:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 362, 3} true;
  assume {:verifier.code 0} true;
  $i409 := $i412;
  goto $bb246;
$bb253:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 11} true;
  assume {:verifier.code 0} true;
  $i425 := $slt.i32($i421, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i425} true;
  goto $bb256, $bb258;
$bb254:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 369, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i423 == 1));
  goto $bb255;
$bb255:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i429 := $sext.i32.i64($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 9} true;
  assume {:verifier.code 0} true;
  $i430 := $srem.i64($i429, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 374, 7} true;
  assume {:verifier.code 0} true;
  $i431 := $trunc.i64.i32($i430);
  call {:cexpr "a"} boogie_si_record_i32($i431);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 375, 5} true;
  assume {:verifier.code 0} true;
  $i432 := $add.i32($i431, $i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i32.i64($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 9} true;
  assume {:verifier.code 0} true;
  $i434 := $srem.i64($i433, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 376, 7} true;
  assume {:verifier.code 0} true;
  $i435 := $trunc.i64.i32($i434);
  call {:cexpr "b"} boogie_si_record_i32($i435);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 377, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $add.i32($i435, $i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 379, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i424, $i424);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $i437;
  assume {:branchcond $i438} true;
  goto $bb262, $bb263;
$bb256:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 15} true;
  assume {:verifier.code 0} true;
  assume ($i425 == 1);
  goto $bb257;
$bb257:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 371, 9} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422, 1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 372, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb261;
$bb258:
  assume !(($i425 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 20} true;
  assume {:verifier.code 0} true;
  $i426 := $sgt.i32($i421, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb259, $bb260;
$bb259:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume ($i426 == 1);
  goto $bb257;
$bb260:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 370, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i426 == 1));
  goto $bb261;
$bb261:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 373, 3} true;
  assume {:verifier.code 0} true;
  $i424 := $i427;
  goto $bb255;
$bb262:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 11} true;
  assume {:verifier.code 0} true;
  $i440 := $slt.i32($i436, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i440} true;
  goto $bb265, $bb267;
$bb263:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 380, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i438 == 1));
  goto $bb264;
$bb264:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i32.i64($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 9} true;
  assume {:verifier.code 0} true;
  $i445 := $srem.i64($i444, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 385, 7} true;
  assume {:verifier.code 0} true;
  $i446 := $trunc.i64.i32($i445);
  call {:cexpr "a"} boogie_si_record_i32($i446);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 386, 5} true;
  assume {:verifier.code 0} true;
  $i447 := $add.i32($i446, $i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i448 := $sext.i32.i64($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $srem.i64($i448, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 387, 7} true;
  assume {:verifier.code 0} true;
  $i450 := $trunc.i64.i32($i449);
  call {:cexpr "b"} boogie_si_record_i32($i450);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 388, 5} true;
  assume {:verifier.code 0} true;
  $i451 := $add.i32($i450, $i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 390, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i439, $i439);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $i452;
  assume {:branchcond $i453} true;
  goto $bb271, $bb272;
$bb265:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 15} true;
  assume {:verifier.code 0} true;
  assume ($i440 == 1);
  goto $bb266;
$bb266:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 382, 9} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437, 1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 383, 5} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb270;
$bb267:
  assume !(($i440 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 20} true;
  assume {:verifier.code 0} true;
  $i441 := $sgt.i32($i436, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb268, $bb269;
$bb268:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume ($i441 == 1);
  goto $bb266;
$bb269:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 381, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i441 == 1));
  goto $bb270;
$bb270:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 384, 3} true;
  assume {:verifier.code 0} true;
  $i439 := $i442;
  goto $bb264;
$bb271:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 11} true;
  assume {:verifier.code 0} true;
  $i455 := $slt.i32($i451, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i455} true;
  goto $bb274, $bb276;
$bb272:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 391, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i453 == 1));
  goto $bb273;
$bb273:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i459 := $sext.i32.i64($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 9} true;
  assume {:verifier.code 0} true;
  $i460 := $srem.i64($i459, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 396, 7} true;
  assume {:verifier.code 0} true;
  $i461 := $trunc.i64.i32($i460);
  call {:cexpr "a"} boogie_si_record_i32($i461);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 397, 5} true;
  assume {:verifier.code 0} true;
  $i462 := $add.i32($i461, $i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i463 := $sext.i32.i64($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 9} true;
  assume {:verifier.code 0} true;
  $i464 := $srem.i64($i463, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 398, 7} true;
  assume {:verifier.code 0} true;
  $i465 := $trunc.i64.i32($i464);
  call {:cexpr "b"} boogie_si_record_i32($i465);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 399, 5} true;
  assume {:verifier.code 0} true;
  $i466 := $add.i32($i465, $i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 401, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i454, $i454);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $i467;
  assume {:branchcond $i468} true;
  goto $bb280, $bb281;
$bb274:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 15} true;
  assume {:verifier.code 0} true;
  assume ($i455 == 1);
  goto $bb275;
$bb275:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 393, 9} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452, 1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 394, 5} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb279;
$bb276:
  assume !(($i455 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 20} true;
  assume {:verifier.code 0} true;
  $i456 := $sgt.i32($i451, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb277, $bb278;
$bb277:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume ($i456 == 1);
  goto $bb275;
$bb278:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 392, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i456 == 1));
  goto $bb279;
$bb279:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 395, 3} true;
  assume {:verifier.code 0} true;
  $i454 := $i457;
  goto $bb273;
$bb280:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 11} true;
  assume {:verifier.code 0} true;
  $i470 := $slt.i32($i466, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i470} true;
  goto $bb283, $bb285;
$bb281:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 402, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i468 == 1));
  goto $bb282;
$bb282:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i474 := $sext.i32.i64($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 9} true;
  assume {:verifier.code 0} true;
  $i475 := $srem.i64($i474, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 407, 7} true;
  assume {:verifier.code 0} true;
  $i476 := $trunc.i64.i32($i475);
  call {:cexpr "a"} boogie_si_record_i32($i476);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 408, 5} true;
  assume {:verifier.code 0} true;
  $i477 := $add.i32($i476, $i476);
  call {:cexpr "a"} boogie_si_record_i32($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i478 := $sext.i32.i64($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 9} true;
  assume {:verifier.code 0} true;
  $i479 := $srem.i64($i478, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 409, 7} true;
  assume {:verifier.code 0} true;
  $i480 := $trunc.i64.i32($i479);
  call {:cexpr "b"} boogie_si_record_i32($i480);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 410, 5} true;
  assume {:verifier.code 0} true;
  $i481 := $add.i32($i480, $i480);
  call {:cexpr "b"} boogie_si_record_i32($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 412, 5} true;
  assume {:verifier.code 0} true;
  $i482 := $add.i32($i469, $i469);
  call {:cexpr "c"} boogie_si_record_i32($i482);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 9} true;
  assume {:verifier.code 0} true;
  $i483 := $slt.i32($i477, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  $i484 := $i482;
  assume {:branchcond $i483} true;
  goto $bb289, $bb290;
$bb283:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 15} true;
  assume {:verifier.code 0} true;
  assume ($i470 == 1);
  goto $bb284;
$bb284:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 404, 9} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467, 1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 405, 5} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb288;
$bb285:
  assume !(($i470 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 20} true;
  assume {:verifier.code 0} true;
  $i471 := $sgt.i32($i466, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb286, $bb287;
$bb286:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume ($i471 == 1);
  goto $bb284;
$bb287:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 403, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i471 == 1));
  goto $bb288;
$bb288:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 406, 3} true;
  assume {:verifier.code 0} true;
  $i469 := $i472;
  goto $bb282;
$bb289:
  assume ($i483 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 11} true;
  assume {:verifier.code 0} true;
  $i485 := $slt.i32($i481, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i485} true;
  goto $bb292, $bb294;
$bb290:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 413, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i483 == 1));
  goto $bb291;
$bb291:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i489 := $sext.i32.i64($i477);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 9} true;
  assume {:verifier.code 0} true;
  $i490 := $srem.i64($i489, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 418, 7} true;
  assume {:verifier.code 0} true;
  $i491 := $trunc.i64.i32($i490);
  call {:cexpr "a"} boogie_si_record_i32($i491);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 419, 5} true;
  assume {:verifier.code 0} true;
  $i492 := $add.i32($i491, $i491);
  call {:cexpr "a"} boogie_si_record_i32($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i493 := $sext.i32.i64($i481);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 9} true;
  assume {:verifier.code 0} true;
  $i494 := $srem.i64($i493, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 420, 7} true;
  assume {:verifier.code 0} true;
  $i495 := $trunc.i64.i32($i494);
  call {:cexpr "b"} boogie_si_record_i32($i495);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 421, 5} true;
  assume {:verifier.code 0} true;
  $i496 := $add.i32($i495, $i495);
  call {:cexpr "b"} boogie_si_record_i32($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 423, 5} true;
  assume {:verifier.code 0} true;
  $i497 := $add.i32($i484, $i484);
  call {:cexpr "c"} boogie_si_record_i32($i497);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 9} true;
  assume {:verifier.code 0} true;
  $i498 := $slt.i32($i492, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  $i499 := $i497;
  assume {:branchcond $i498} true;
  goto $bb298, $bb299;
$bb292:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 15} true;
  assume {:verifier.code 0} true;
  assume ($i485 == 1);
  goto $bb293;
$bb293:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 415, 9} true;
  assume {:verifier.code 0} true;
  $i488 := $add.i32($i482, 1);
  call {:cexpr "c"} boogie_si_record_i32($i488);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 416, 5} true;
  assume {:verifier.code 0} true;
  $i487 := $i488;
  goto $bb297;
$bb294:
  assume !(($i485 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 20} true;
  assume {:verifier.code 0} true;
  $i486 := $sgt.i32($i481, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  $i487 := $i482;
  assume {:branchcond $i486} true;
  goto $bb295, $bb296;
$bb295:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume ($i486 == 1);
  goto $bb293;
$bb296:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 414, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i486 == 1));
  goto $bb297;
$bb297:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 417, 3} true;
  assume {:verifier.code 0} true;
  $i484 := $i487;
  goto $bb291;
$bb298:
  assume ($i498 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 11} true;
  assume {:verifier.code 0} true;
  $i500 := $slt.i32($i496, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i500} true;
  goto $bb301, $bb303;
$bb299:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 424, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i498 == 1));
  goto $bb300;
$bb300:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i504 := $sext.i32.i64($i492);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 9} true;
  assume {:verifier.code 0} true;
  $i505 := $srem.i64($i504, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 429, 7} true;
  assume {:verifier.code 0} true;
  $i506 := $trunc.i64.i32($i505);
  call {:cexpr "a"} boogie_si_record_i32($i506);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 430, 5} true;
  assume {:verifier.code 0} true;
  $i507 := $add.i32($i506, $i506);
  call {:cexpr "a"} boogie_si_record_i32($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i508 := $sext.i32.i64($i496);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 9} true;
  assume {:verifier.code 0} true;
  $i509 := $srem.i64($i508, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 431, 7} true;
  assume {:verifier.code 0} true;
  $i510 := $trunc.i64.i32($i509);
  call {:cexpr "b"} boogie_si_record_i32($i510);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 432, 5} true;
  assume {:verifier.code 0} true;
  $i511 := $add.i32($i510, $i510);
  call {:cexpr "b"} boogie_si_record_i32($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 434, 5} true;
  assume {:verifier.code 0} true;
  $i512 := $add.i32($i499, $i499);
  call {:cexpr "c"} boogie_si_record_i32($i512);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 9} true;
  assume {:verifier.code 0} true;
  $i513 := $slt.i32($i507, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  $i514 := $i512;
  assume {:branchcond $i513} true;
  goto $bb307, $bb308;
$bb301:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 15} true;
  assume {:verifier.code 0} true;
  assume ($i500 == 1);
  goto $bb302;
$bb302:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 426, 9} true;
  assume {:verifier.code 0} true;
  $i503 := $add.i32($i497, 1);
  call {:cexpr "c"} boogie_si_record_i32($i503);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 427, 5} true;
  assume {:verifier.code 0} true;
  $i502 := $i503;
  goto $bb306;
$bb303:
  assume !(($i500 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 20} true;
  assume {:verifier.code 0} true;
  $i501 := $sgt.i32($i496, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  $i502 := $i497;
  assume {:branchcond $i501} true;
  goto $bb304, $bb305;
$bb304:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume ($i501 == 1);
  goto $bb302;
$bb305:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 425, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i501 == 1));
  goto $bb306;
$bb306:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 428, 3} true;
  assume {:verifier.code 0} true;
  $i499 := $i502;
  goto $bb300;
$bb307:
  assume ($i513 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 11} true;
  assume {:verifier.code 0} true;
  $i515 := $slt.i32($i511, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i515} true;
  goto $bb310, $bb312;
$bb308:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 435, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i513 == 1));
  goto $bb309;
$bb309:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i519 := $sext.i32.i64($i507);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 9} true;
  assume {:verifier.code 0} true;
  $i520 := $srem.i64($i519, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 440, 7} true;
  assume {:verifier.code 0} true;
  $i521 := $trunc.i64.i32($i520);
  call {:cexpr "a"} boogie_si_record_i32($i521);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 441, 5} true;
  assume {:verifier.code 0} true;
  $i522 := $add.i32($i521, $i521);
  call {:cexpr "a"} boogie_si_record_i32($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i523 := $sext.i32.i64($i511);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 9} true;
  assume {:verifier.code 0} true;
  $i524 := $srem.i64($i523, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 442, 7} true;
  assume {:verifier.code 0} true;
  $i525 := $trunc.i64.i32($i524);
  call {:cexpr "b"} boogie_si_record_i32($i525);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 443, 5} true;
  assume {:verifier.code 0} true;
  $i526 := $add.i32($i525, $i525);
  call {:cexpr "b"} boogie_si_record_i32($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 445, 5} true;
  assume {:verifier.code 0} true;
  $i527 := $add.i32($i514, $i514);
  call {:cexpr "c"} boogie_si_record_i32($i527);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 9} true;
  assume {:verifier.code 0} true;
  $i528 := $slt.i32($i522, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  $i529 := $i527;
  assume {:branchcond $i528} true;
  goto $bb316, $bb317;
$bb310:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 15} true;
  assume {:verifier.code 0} true;
  assume ($i515 == 1);
  goto $bb311;
$bb311:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 437, 9} true;
  assume {:verifier.code 0} true;
  $i518 := $add.i32($i512, 1);
  call {:cexpr "c"} boogie_si_record_i32($i518);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 438, 5} true;
  assume {:verifier.code 0} true;
  $i517 := $i518;
  goto $bb315;
$bb312:
  assume !(($i515 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 20} true;
  assume {:verifier.code 0} true;
  $i516 := $sgt.i32($i511, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  $i517 := $i512;
  assume {:branchcond $i516} true;
  goto $bb313, $bb314;
$bb313:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume ($i516 == 1);
  goto $bb311;
$bb314:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 436, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i516 == 1));
  goto $bb315;
$bb315:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 439, 3} true;
  assume {:verifier.code 0} true;
  $i514 := $i517;
  goto $bb309;
$bb316:
  assume ($i528 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 11} true;
  assume {:verifier.code 0} true;
  $i530 := $slt.i32($i526, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i530} true;
  goto $bb319, $bb321;
$bb317:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 446, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i528 == 1));
  goto $bb318;
$bb318:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i534 := $sext.i32.i64($i522);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 9} true;
  assume {:verifier.code 0} true;
  $i535 := $srem.i64($i534, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 451, 7} true;
  assume {:verifier.code 0} true;
  $i536 := $trunc.i64.i32($i535);
  call {:cexpr "a"} boogie_si_record_i32($i536);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 452, 5} true;
  assume {:verifier.code 0} true;
  $i537 := $add.i32($i536, $i536);
  call {:cexpr "a"} boogie_si_record_i32($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i538 := $sext.i32.i64($i526);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 9} true;
  assume {:verifier.code 0} true;
  $i539 := $srem.i64($i538, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 453, 7} true;
  assume {:verifier.code 0} true;
  $i540 := $trunc.i64.i32($i539);
  call {:cexpr "b"} boogie_si_record_i32($i540);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 454, 5} true;
  assume {:verifier.code 0} true;
  $i541 := $add.i32($i540, $i540);
  call {:cexpr "b"} boogie_si_record_i32($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 456, 5} true;
  assume {:verifier.code 0} true;
  $i542 := $add.i32($i529, $i529);
  call {:cexpr "c"} boogie_si_record_i32($i542);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 9} true;
  assume {:verifier.code 0} true;
  $i543 := $slt.i32($i537, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  $i544 := $i542;
  assume {:branchcond $i543} true;
  goto $bb325, $bb326;
$bb319:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 15} true;
  assume {:verifier.code 0} true;
  assume ($i530 == 1);
  goto $bb320;
$bb320:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 448, 9} true;
  assume {:verifier.code 0} true;
  $i533 := $add.i32($i527, 1);
  call {:cexpr "c"} boogie_si_record_i32($i533);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 449, 5} true;
  assume {:verifier.code 0} true;
  $i532 := $i533;
  goto $bb324;
$bb321:
  assume !(($i530 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 20} true;
  assume {:verifier.code 0} true;
  $i531 := $sgt.i32($i526, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  $i532 := $i527;
  assume {:branchcond $i531} true;
  goto $bb322, $bb323;
$bb322:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume ($i531 == 1);
  goto $bb320;
$bb323:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 447, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i531 == 1));
  goto $bb324;
$bb324:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 450, 3} true;
  assume {:verifier.code 0} true;
  $i529 := $i532;
  goto $bb318;
$bb325:
  assume ($i543 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 11} true;
  assume {:verifier.code 0} true;
  $i545 := $slt.i32($i541, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i545} true;
  goto $bb328, $bb330;
$bb326:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 457, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i543 == 1));
  goto $bb327;
$bb327:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i549 := $sext.i32.i64($i537);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 9} true;
  assume {:verifier.code 0} true;
  $i550 := $srem.i64($i549, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 462, 7} true;
  assume {:verifier.code 0} true;
  $i551 := $trunc.i64.i32($i550);
  call {:cexpr "a"} boogie_si_record_i32($i551);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 463, 5} true;
  assume {:verifier.code 0} true;
  $i552 := $add.i32($i551, $i551);
  call {:cexpr "a"} boogie_si_record_i32($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i553 := $sext.i32.i64($i541);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 9} true;
  assume {:verifier.code 0} true;
  $i554 := $srem.i64($i553, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 464, 7} true;
  assume {:verifier.code 0} true;
  $i555 := $trunc.i64.i32($i554);
  call {:cexpr "b"} boogie_si_record_i32($i555);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 465, 5} true;
  assume {:verifier.code 0} true;
  $i556 := $add.i32($i555, $i555);
  call {:cexpr "b"} boogie_si_record_i32($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 467, 5} true;
  assume {:verifier.code 0} true;
  $i557 := $add.i32($i544, $i544);
  call {:cexpr "c"} boogie_si_record_i32($i557);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 9} true;
  assume {:verifier.code 0} true;
  $i558 := $slt.i32($i552, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  $i559 := $i557;
  assume {:branchcond $i558} true;
  goto $bb334, $bb335;
$bb328:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 15} true;
  assume {:verifier.code 0} true;
  assume ($i545 == 1);
  goto $bb329;
$bb329:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 459, 9} true;
  assume {:verifier.code 0} true;
  $i548 := $add.i32($i542, 1);
  call {:cexpr "c"} boogie_si_record_i32($i548);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 460, 5} true;
  assume {:verifier.code 0} true;
  $i547 := $i548;
  goto $bb333;
$bb330:
  assume !(($i545 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 20} true;
  assume {:verifier.code 0} true;
  $i546 := $sgt.i32($i541, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  $i547 := $i542;
  assume {:branchcond $i546} true;
  goto $bb331, $bb332;
$bb331:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume ($i546 == 1);
  goto $bb329;
$bb332:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 458, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i546 == 1));
  goto $bb333;
$bb333:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 461, 3} true;
  assume {:verifier.code 0} true;
  $i544 := $i547;
  goto $bb327;
$bb334:
  assume ($i558 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 11} true;
  assume {:verifier.code 0} true;
  $i560 := $slt.i32($i556, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i560} true;
  goto $bb337, $bb339;
$bb335:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 468, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i558 == 1));
  goto $bb336;
$bb336:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i564 := $sext.i32.i64($i552);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 9} true;
  assume {:verifier.code 0} true;
  $i565 := $srem.i64($i564, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 473, 7} true;
  assume {:verifier.code 0} true;
  $i566 := $trunc.i64.i32($i565);
  call {:cexpr "a"} boogie_si_record_i32($i566);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 474, 5} true;
  assume {:verifier.code 0} true;
  $i567 := $add.i32($i566, $i566);
  call {:cexpr "a"} boogie_si_record_i32($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i568 := $sext.i32.i64($i556);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 9} true;
  assume {:verifier.code 0} true;
  $i569 := $srem.i64($i568, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 475, 7} true;
  assume {:verifier.code 0} true;
  $i570 := $trunc.i64.i32($i569);
  call {:cexpr "b"} boogie_si_record_i32($i570);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 476, 5} true;
  assume {:verifier.code 0} true;
  $i571 := $add.i32($i570, $i570);
  call {:cexpr "b"} boogie_si_record_i32($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 478, 5} true;
  assume {:verifier.code 0} true;
  $i572 := $add.i32($i559, $i559);
  call {:cexpr "c"} boogie_si_record_i32($i572);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 9} true;
  assume {:verifier.code 0} true;
  $i573 := $slt.i32($i567, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  $i574 := $i572;
  assume {:branchcond $i573} true;
  goto $bb343, $bb344;
$bb337:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 15} true;
  assume {:verifier.code 0} true;
  assume ($i560 == 1);
  goto $bb338;
$bb338:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 470, 9} true;
  assume {:verifier.code 0} true;
  $i563 := $add.i32($i557, 1);
  call {:cexpr "c"} boogie_si_record_i32($i563);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 471, 5} true;
  assume {:verifier.code 0} true;
  $i562 := $i563;
  goto $bb342;
$bb339:
  assume !(($i560 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 20} true;
  assume {:verifier.code 0} true;
  $i561 := $sgt.i32($i556, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  $i562 := $i557;
  assume {:branchcond $i561} true;
  goto $bb340, $bb341;
$bb340:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume ($i561 == 1);
  goto $bb338;
$bb341:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 469, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i561 == 1));
  goto $bb342;
$bb342:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 472, 3} true;
  assume {:verifier.code 0} true;
  $i559 := $i562;
  goto $bb336;
$bb343:
  assume ($i573 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 11} true;
  assume {:verifier.code 0} true;
  $i575 := $slt.i32($i571, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i575} true;
  goto $bb346, $bb348;
$bb344:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 479, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i573 == 1));
  goto $bb345;
$bb345:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i579 := $sext.i32.i64($i567);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 9} true;
  assume {:verifier.code 0} true;
  $i580 := $srem.i64($i579, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 484, 7} true;
  assume {:verifier.code 0} true;
  $i581 := $trunc.i64.i32($i580);
  call {:cexpr "a"} boogie_si_record_i32($i581);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 485, 5} true;
  assume {:verifier.code 0} true;
  $i582 := $add.i32($i581, $i581);
  call {:cexpr "a"} boogie_si_record_i32($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i583 := $sext.i32.i64($i571);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 9} true;
  assume {:verifier.code 0} true;
  $i584 := $srem.i64($i583, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 486, 7} true;
  assume {:verifier.code 0} true;
  $i585 := $trunc.i64.i32($i584);
  call {:cexpr "b"} boogie_si_record_i32($i585);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 487, 5} true;
  assume {:verifier.code 0} true;
  $i586 := $add.i32($i585, $i585);
  call {:cexpr "b"} boogie_si_record_i32($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 489, 5} true;
  assume {:verifier.code 0} true;
  $i587 := $add.i32($i574, $i574);
  call {:cexpr "c"} boogie_si_record_i32($i587);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 9} true;
  assume {:verifier.code 0} true;
  $i588 := $slt.i32($i582, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  $i589 := $i587;
  assume {:branchcond $i588} true;
  goto $bb352, $bb353;
$bb346:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 15} true;
  assume {:verifier.code 0} true;
  assume ($i575 == 1);
  goto $bb347;
$bb347:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 481, 9} true;
  assume {:verifier.code 0} true;
  $i578 := $add.i32($i572, 1);
  call {:cexpr "c"} boogie_si_record_i32($i578);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 482, 5} true;
  assume {:verifier.code 0} true;
  $i577 := $i578;
  goto $bb351;
$bb348:
  assume !(($i575 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 20} true;
  assume {:verifier.code 0} true;
  $i576 := $sgt.i32($i571, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  $i577 := $i572;
  assume {:branchcond $i576} true;
  goto $bb349, $bb350;
$bb349:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume ($i576 == 1);
  goto $bb347;
$bb350:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 480, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i576 == 1));
  goto $bb351;
$bb351:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 483, 3} true;
  assume {:verifier.code 0} true;
  $i574 := $i577;
  goto $bb345;
$bb352:
  assume ($i588 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 11} true;
  assume {:verifier.code 0} true;
  $i590 := $slt.i32($i586, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i590} true;
  goto $bb355, $bb357;
$bb353:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 490, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i588 == 1));
  goto $bb354;
$bb354:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i594 := $sext.i32.i64($i582);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 9} true;
  assume {:verifier.code 0} true;
  $i595 := $srem.i64($i594, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 495, 7} true;
  assume {:verifier.code 0} true;
  $i596 := $trunc.i64.i32($i595);
  call {:cexpr "a"} boogie_si_record_i32($i596);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 496, 5} true;
  assume {:verifier.code 0} true;
  $i597 := $add.i32($i596, $i596);
  call {:cexpr "a"} boogie_si_record_i32($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i598 := $sext.i32.i64($i586);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 9} true;
  assume {:verifier.code 0} true;
  $i599 := $srem.i64($i598, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 497, 7} true;
  assume {:verifier.code 0} true;
  $i600 := $trunc.i64.i32($i599);
  call {:cexpr "b"} boogie_si_record_i32($i600);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 498, 5} true;
  assume {:verifier.code 0} true;
  $i601 := $add.i32($i600, $i600);
  call {:cexpr "b"} boogie_si_record_i32($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 500, 5} true;
  assume {:verifier.code 0} true;
  $i602 := $add.i32($i589, $i589);
  call {:cexpr "c"} boogie_si_record_i32($i602);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 9} true;
  assume {:verifier.code 0} true;
  $i603 := $slt.i32($i597, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  $i604 := $i602;
  assume {:branchcond $i603} true;
  goto $bb361, $bb362;
$bb355:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 15} true;
  assume {:verifier.code 0} true;
  assume ($i590 == 1);
  goto $bb356;
$bb356:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 492, 9} true;
  assume {:verifier.code 0} true;
  $i593 := $add.i32($i587, 1);
  call {:cexpr "c"} boogie_si_record_i32($i593);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 493, 5} true;
  assume {:verifier.code 0} true;
  $i592 := $i593;
  goto $bb360;
$bb357:
  assume !(($i590 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 20} true;
  assume {:verifier.code 0} true;
  $i591 := $sgt.i32($i586, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  $i592 := $i587;
  assume {:branchcond $i591} true;
  goto $bb358, $bb359;
$bb358:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume ($i591 == 1);
  goto $bb356;
$bb359:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 491, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i591 == 1));
  goto $bb360;
$bb360:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 494, 3} true;
  assume {:verifier.code 0} true;
  $i589 := $i592;
  goto $bb354;
$bb361:
  assume ($i603 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 11} true;
  assume {:verifier.code 0} true;
  $i605 := $slt.i32($i601, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i605} true;
  goto $bb364, $bb366;
$bb362:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 501, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i603 == 1));
  goto $bb363;
$bb363:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i609 := $sext.i32.i64($i597);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 9} true;
  assume {:verifier.code 0} true;
  $i610 := $srem.i64($i609, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 506, 7} true;
  assume {:verifier.code 0} true;
  $i611 := $trunc.i64.i32($i610);
  call {:cexpr "a"} boogie_si_record_i32($i611);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 507, 5} true;
  assume {:verifier.code 0} true;
  $i612 := $add.i32($i611, $i611);
  call {:cexpr "a"} boogie_si_record_i32($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i613 := $sext.i32.i64($i601);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 9} true;
  assume {:verifier.code 0} true;
  $i614 := $srem.i64($i613, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 508, 7} true;
  assume {:verifier.code 0} true;
  $i615 := $trunc.i64.i32($i614);
  call {:cexpr "b"} boogie_si_record_i32($i615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 509, 5} true;
  assume {:verifier.code 0} true;
  $i616 := $add.i32($i615, $i615);
  call {:cexpr "b"} boogie_si_record_i32($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 511, 5} true;
  assume {:verifier.code 0} true;
  $i617 := $add.i32($i604, $i604);
  call {:cexpr "c"} boogie_si_record_i32($i617);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 9} true;
  assume {:verifier.code 0} true;
  $i618 := $slt.i32($i612, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  $i619 := $i617;
  assume {:branchcond $i618} true;
  goto $bb370, $bb371;
$bb364:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 15} true;
  assume {:verifier.code 0} true;
  assume ($i605 == 1);
  goto $bb365;
$bb365:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 503, 9} true;
  assume {:verifier.code 0} true;
  $i608 := $add.i32($i602, 1);
  call {:cexpr "c"} boogie_si_record_i32($i608);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 504, 5} true;
  assume {:verifier.code 0} true;
  $i607 := $i608;
  goto $bb369;
$bb366:
  assume !(($i605 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 20} true;
  assume {:verifier.code 0} true;
  $i606 := $sgt.i32($i601, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  $i607 := $i602;
  assume {:branchcond $i606} true;
  goto $bb367, $bb368;
$bb367:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume ($i606 == 1);
  goto $bb365;
$bb368:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 502, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i606 == 1));
  goto $bb369;
$bb369:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 505, 3} true;
  assume {:verifier.code 0} true;
  $i604 := $i607;
  goto $bb363;
$bb370:
  assume ($i618 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 11} true;
  assume {:verifier.code 0} true;
  $i620 := $slt.i32($i616, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i620} true;
  goto $bb373, $bb375;
$bb371:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 512, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i618 == 1));
  goto $bb372;
$bb372:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i624 := $sext.i32.i64($i612);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 9} true;
  assume {:verifier.code 0} true;
  $i625 := $srem.i64($i624, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 517, 7} true;
  assume {:verifier.code 0} true;
  $i626 := $trunc.i64.i32($i625);
  call {:cexpr "a"} boogie_si_record_i32($i626);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 518, 5} true;
  assume {:verifier.code 0} true;
  $i627 := $add.i32($i626, $i626);
  call {:cexpr "a"} boogie_si_record_i32($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i628 := $sext.i32.i64($i616);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 9} true;
  assume {:verifier.code 0} true;
  $i629 := $srem.i64($i628, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 519, 7} true;
  assume {:verifier.code 0} true;
  $i630 := $trunc.i64.i32($i629);
  call {:cexpr "b"} boogie_si_record_i32($i630);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 520, 5} true;
  assume {:verifier.code 0} true;
  $i631 := $add.i32($i630, $i630);
  call {:cexpr "b"} boogie_si_record_i32($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 522, 5} true;
  assume {:verifier.code 0} true;
  $i632 := $add.i32($i619, $i619);
  call {:cexpr "c"} boogie_si_record_i32($i632);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 9} true;
  assume {:verifier.code 0} true;
  $i633 := $slt.i32($i627, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  $i634 := $i632;
  assume {:branchcond $i633} true;
  goto $bb379, $bb380;
$bb373:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 15} true;
  assume {:verifier.code 0} true;
  assume ($i620 == 1);
  goto $bb374;
$bb374:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 514, 9} true;
  assume {:verifier.code 0} true;
  $i623 := $add.i32($i617, 1);
  call {:cexpr "c"} boogie_si_record_i32($i623);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 515, 5} true;
  assume {:verifier.code 0} true;
  $i622 := $i623;
  goto $bb378;
$bb375:
  assume !(($i620 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 20} true;
  assume {:verifier.code 0} true;
  $i621 := $sgt.i32($i616, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  $i622 := $i617;
  assume {:branchcond $i621} true;
  goto $bb376, $bb377;
$bb376:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume ($i621 == 1);
  goto $bb374;
$bb377:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 513, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i621 == 1));
  goto $bb378;
$bb378:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 516, 3} true;
  assume {:verifier.code 0} true;
  $i619 := $i622;
  goto $bb372;
$bb379:
  assume ($i633 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 11} true;
  assume {:verifier.code 0} true;
  $i635 := $slt.i32($i631, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i635} true;
  goto $bb382, $bb384;
$bb380:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 523, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i633 == 1));
  goto $bb381;
$bb381:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i639 := $sext.i32.i64($i627);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 9} true;
  assume {:verifier.code 0} true;
  $i640 := $srem.i64($i639, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 528, 7} true;
  assume {:verifier.code 0} true;
  $i641 := $trunc.i64.i32($i640);
  call {:cexpr "a"} boogie_si_record_i32($i641);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 529, 5} true;
  assume {:verifier.code 0} true;
  $i642 := $add.i32($i641, $i641);
  call {:cexpr "a"} boogie_si_record_i32($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i643 := $sext.i32.i64($i631);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 9} true;
  assume {:verifier.code 0} true;
  $i644 := $srem.i64($i643, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 530, 7} true;
  assume {:verifier.code 0} true;
  $i645 := $trunc.i64.i32($i644);
  call {:cexpr "b"} boogie_si_record_i32($i645);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 531, 5} true;
  assume {:verifier.code 0} true;
  $i646 := $add.i32($i645, $i645);
  call {:cexpr "b"} boogie_si_record_i32($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 533, 5} true;
  assume {:verifier.code 0} true;
  $i647 := $add.i32($i634, $i634);
  call {:cexpr "c"} boogie_si_record_i32($i647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 9} true;
  assume {:verifier.code 0} true;
  $i648 := $slt.i32($i642, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  $i649 := $i647;
  assume {:branchcond $i648} true;
  goto $bb388, $bb389;
$bb382:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 15} true;
  assume {:verifier.code 0} true;
  assume ($i635 == 1);
  goto $bb383;
$bb383:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 525, 9} true;
  assume {:verifier.code 0} true;
  $i638 := $add.i32($i632, 1);
  call {:cexpr "c"} boogie_si_record_i32($i638);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 526, 5} true;
  assume {:verifier.code 0} true;
  $i637 := $i638;
  goto $bb387;
$bb384:
  assume !(($i635 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 20} true;
  assume {:verifier.code 0} true;
  $i636 := $sgt.i32($i631, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  $i637 := $i632;
  assume {:branchcond $i636} true;
  goto $bb385, $bb386;
$bb385:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume ($i636 == 1);
  goto $bb383;
$bb386:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 524, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i636 == 1));
  goto $bb387;
$bb387:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 527, 3} true;
  assume {:verifier.code 0} true;
  $i634 := $i637;
  goto $bb381;
$bb388:
  assume ($i648 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 11} true;
  assume {:verifier.code 0} true;
  $i650 := $slt.i32($i646, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i650} true;
  goto $bb391, $bb393;
$bb389:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 534, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i648 == 1));
  goto $bb390;
$bb390:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i654 := $sext.i32.i64($i642);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 9} true;
  assume {:verifier.code 0} true;
  $i655 := $srem.i64($i654, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 7} true;
  assume {:verifier.code 0} true;
  $i656 := $trunc.i64.i32($i655);
  call {:cexpr "a"} boogie_si_record_i32($i656);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 540, 5} true;
  assume {:verifier.code 0} true;
  $i657 := $add.i32($i656, $i656);
  call {:cexpr "a"} boogie_si_record_i32($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i658 := $sext.i32.i64($i646);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 9} true;
  assume {:verifier.code 0} true;
  $i659 := $srem.i64($i658, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 541, 7} true;
  assume {:verifier.code 0} true;
  $i660 := $trunc.i64.i32($i659);
  call {:cexpr "b"} boogie_si_record_i32($i660);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 542, 5} true;
  assume {:verifier.code 0} true;
  $i661 := $add.i32($i660, $i660);
  call {:cexpr "b"} boogie_si_record_i32($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 5} true;
  assume {:verifier.code 0} true;
  $i662 := $add.i32($i649, $i649);
  call {:cexpr "c"} boogie_si_record_i32($i662);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 9} true;
  assume {:verifier.code 0} true;
  $i663 := $slt.i32($i657, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  $i664 := $i662;
  assume {:branchcond $i663} true;
  goto $bb397, $bb398;
$bb391:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 15} true;
  assume {:verifier.code 0} true;
  assume ($i650 == 1);
  goto $bb392;
$bb392:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 536, 9} true;
  assume {:verifier.code 0} true;
  $i653 := $add.i32($i647, 1);
  call {:cexpr "c"} boogie_si_record_i32($i653);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 537, 5} true;
  assume {:verifier.code 0} true;
  $i652 := $i653;
  goto $bb396;
$bb393:
  assume !(($i650 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 20} true;
  assume {:verifier.code 0} true;
  $i651 := $sgt.i32($i646, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  $i652 := $i647;
  assume {:branchcond $i651} true;
  goto $bb394, $bb395;
$bb394:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume ($i651 == 1);
  goto $bb392;
$bb395:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 535, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i651 == 1));
  goto $bb396;
$bb396:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 538, 3} true;
  assume {:verifier.code 0} true;
  $i649 := $i652;
  goto $bb390;
$bb397:
  assume ($i663 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 11} true;
  assume {:verifier.code 0} true;
  $i665 := $slt.i32($i661, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i665} true;
  goto $bb400, $bb402;
$bb398:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 545, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i663 == 1));
  goto $bb399;
$bb399:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i669 := $sext.i32.i64($i657);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 9} true;
  assume {:verifier.code 0} true;
  $i670 := $srem.i64($i669, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 550, 7} true;
  assume {:verifier.code 0} true;
  $i671 := $trunc.i64.i32($i670);
  call {:cexpr "a"} boogie_si_record_i32($i671);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 551, 5} true;
  assume {:verifier.code 0} true;
  $i672 := $add.i32($i671, $i671);
  call {:cexpr "a"} boogie_si_record_i32($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i673 := $sext.i32.i64($i661);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 9} true;
  assume {:verifier.code 0} true;
  $i674 := $srem.i64($i673, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 552, 7} true;
  assume {:verifier.code 0} true;
  $i675 := $trunc.i64.i32($i674);
  call {:cexpr "b"} boogie_si_record_i32($i675);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 553, 5} true;
  assume {:verifier.code 0} true;
  $i676 := $add.i32($i675, $i675);
  call {:cexpr "b"} boogie_si_record_i32($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 555, 5} true;
  assume {:verifier.code 0} true;
  $i677 := $add.i32($i664, $i664);
  call {:cexpr "c"} boogie_si_record_i32($i677);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 9} true;
  assume {:verifier.code 0} true;
  $i678 := $slt.i32($i672, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  $i679 := $i677;
  assume {:branchcond $i678} true;
  goto $bb406, $bb407;
$bb400:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 15} true;
  assume {:verifier.code 0} true;
  assume ($i665 == 1);
  goto $bb401;
$bb401:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 547, 9} true;
  assume {:verifier.code 0} true;
  $i668 := $add.i32($i662, 1);
  call {:cexpr "c"} boogie_si_record_i32($i668);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 5} true;
  assume {:verifier.code 0} true;
  $i667 := $i668;
  goto $bb405;
$bb402:
  assume !(($i665 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 20} true;
  assume {:verifier.code 0} true;
  $i666 := $sgt.i32($i661, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  $i667 := $i662;
  assume {:branchcond $i666} true;
  goto $bb403, $bb404;
$bb403:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume ($i666 == 1);
  goto $bb401;
$bb404:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i666 == 1));
  goto $bb405;
$bb405:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 549, 3} true;
  assume {:verifier.code 0} true;
  $i664 := $i667;
  goto $bb399;
$bb406:
  assume ($i678 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 11} true;
  assume {:verifier.code 0} true;
  $i680 := $slt.i32($i676, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i680} true;
  goto $bb409, $bb411;
$bb407:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 556, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i678 == 1));
  goto $bb408;
$bb408:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i684 := $sext.i32.i64($i672);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 9} true;
  assume {:verifier.code 0} true;
  $i685 := $srem.i64($i684, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 561, 7} true;
  assume {:verifier.code 0} true;
  $i686 := $trunc.i64.i32($i685);
  call {:cexpr "a"} boogie_si_record_i32($i686);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 562, 5} true;
  assume {:verifier.code 0} true;
  $i687 := $add.i32($i686, $i686);
  call {:cexpr "a"} boogie_si_record_i32($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i688 := $sext.i32.i64($i676);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 9} true;
  assume {:verifier.code 0} true;
  $i689 := $srem.i64($i688, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 563, 7} true;
  assume {:verifier.code 0} true;
  $i690 := $trunc.i64.i32($i689);
  call {:cexpr "b"} boogie_si_record_i32($i690);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 564, 5} true;
  assume {:verifier.code 0} true;
  $i691 := $add.i32($i690, $i690);
  call {:cexpr "b"} boogie_si_record_i32($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 566, 5} true;
  assume {:verifier.code 0} true;
  $i692 := $add.i32($i679, $i679);
  call {:cexpr "c"} boogie_si_record_i32($i692);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 9} true;
  assume {:verifier.code 0} true;
  $i693 := $slt.i32($i687, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  $i694 := $i692;
  assume {:branchcond $i693} true;
  goto $bb415, $bb416;
$bb409:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 15} true;
  assume {:verifier.code 0} true;
  assume ($i680 == 1);
  goto $bb410;
$bb410:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 558, 9} true;
  assume {:verifier.code 0} true;
  $i683 := $add.i32($i677, 1);
  call {:cexpr "c"} boogie_si_record_i32($i683);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 559, 5} true;
  assume {:verifier.code 0} true;
  $i682 := $i683;
  goto $bb414;
$bb411:
  assume !(($i680 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 20} true;
  assume {:verifier.code 0} true;
  $i681 := $sgt.i32($i676, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  $i682 := $i677;
  assume {:branchcond $i681} true;
  goto $bb412, $bb413;
$bb412:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume ($i681 == 1);
  goto $bb410;
$bb413:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 557, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i681 == 1));
  goto $bb414;
$bb414:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 560, 3} true;
  assume {:verifier.code 0} true;
  $i679 := $i682;
  goto $bb408;
$bb415:
  assume ($i693 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 11} true;
  assume {:verifier.code 0} true;
  $i695 := $slt.i32($i691, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i695} true;
  goto $bb418, $bb420;
$bb416:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 567, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i693 == 1));
  goto $bb417;
$bb417:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i699 := $sext.i32.i64($i687);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 9} true;
  assume {:verifier.code 0} true;
  $i700 := $srem.i64($i699, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 572, 7} true;
  assume {:verifier.code 0} true;
  $i701 := $trunc.i64.i32($i700);
  call {:cexpr "a"} boogie_si_record_i32($i701);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 573, 5} true;
  assume {:verifier.code 0} true;
  $i702 := $add.i32($i701, $i701);
  call {:cexpr "a"} boogie_si_record_i32($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i703 := $sext.i32.i64($i691);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 9} true;
  assume {:verifier.code 0} true;
  $i704 := $srem.i64($i703, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 574, 7} true;
  assume {:verifier.code 0} true;
  $i705 := $trunc.i64.i32($i704);
  call {:cexpr "b"} boogie_si_record_i32($i705);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 575, 5} true;
  assume {:verifier.code 0} true;
  $i706 := $add.i32($i705, $i705);
  call {:cexpr "b"} boogie_si_record_i32($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 577, 5} true;
  assume {:verifier.code 0} true;
  $i707 := $add.i32($i694, $i694);
  call {:cexpr "c"} boogie_si_record_i32($i707);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 9} true;
  assume {:verifier.code 0} true;
  $i708 := $slt.i32($i702, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  $i709 := $i707;
  assume {:branchcond $i708} true;
  goto $bb424, $bb425;
$bb418:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 15} true;
  assume {:verifier.code 0} true;
  assume ($i695 == 1);
  goto $bb419;
$bb419:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 569, 9} true;
  assume {:verifier.code 0} true;
  $i698 := $add.i32($i692, 1);
  call {:cexpr "c"} boogie_si_record_i32($i698);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 570, 5} true;
  assume {:verifier.code 0} true;
  $i697 := $i698;
  goto $bb423;
$bb420:
  assume !(($i695 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 20} true;
  assume {:verifier.code 0} true;
  $i696 := $sgt.i32($i691, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  $i697 := $i692;
  assume {:branchcond $i696} true;
  goto $bb421, $bb422;
$bb421:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume ($i696 == 1);
  goto $bb419;
$bb422:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 568, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i696 == 1));
  goto $bb423;
$bb423:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 571, 3} true;
  assume {:verifier.code 0} true;
  $i694 := $i697;
  goto $bb417;
$bb424:
  assume ($i708 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 11} true;
  assume {:verifier.code 0} true;
  $i710 := $slt.i32($i706, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i710} true;
  goto $bb427, $bb429;
$bb425:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 578, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i708 == 1));
  goto $bb426;
$bb426:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i714 := $sext.i32.i64($i702);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 9} true;
  assume {:verifier.code 0} true;
  $i715 := $srem.i64($i714, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 583, 7} true;
  assume {:verifier.code 0} true;
  $i716 := $trunc.i64.i32($i715);
  call {:cexpr "a"} boogie_si_record_i32($i716);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 584, 5} true;
  assume {:verifier.code 0} true;
  $i717 := $add.i32($i716, $i716);
  call {:cexpr "a"} boogie_si_record_i32($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i718 := $sext.i32.i64($i706);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 9} true;
  assume {:verifier.code 0} true;
  $i719 := $srem.i64($i718, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 585, 7} true;
  assume {:verifier.code 0} true;
  $i720 := $trunc.i64.i32($i719);
  call {:cexpr "b"} boogie_si_record_i32($i720);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 586, 5} true;
  assume {:verifier.code 0} true;
  $i721 := $add.i32($i720, $i720);
  call {:cexpr "b"} boogie_si_record_i32($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 588, 5} true;
  assume {:verifier.code 0} true;
  $i722 := $add.i32($i709, $i709);
  call {:cexpr "c"} boogie_si_record_i32($i722);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 9} true;
  assume {:verifier.code 0} true;
  $i723 := $slt.i32($i717, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  $i724 := $i722;
  assume {:branchcond $i723} true;
  goto $bb433, $bb434;
$bb427:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 15} true;
  assume {:verifier.code 0} true;
  assume ($i710 == 1);
  goto $bb428;
$bb428:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 580, 9} true;
  assume {:verifier.code 0} true;
  $i713 := $add.i32($i707, 1);
  call {:cexpr "c"} boogie_si_record_i32($i713);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 581, 5} true;
  assume {:verifier.code 0} true;
  $i712 := $i713;
  goto $bb432;
$bb429:
  assume !(($i710 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 20} true;
  assume {:verifier.code 0} true;
  $i711 := $sgt.i32($i706, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  $i712 := $i707;
  assume {:branchcond $i711} true;
  goto $bb430, $bb431;
$bb430:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume ($i711 == 1);
  goto $bb428;
$bb431:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 579, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i711 == 1));
  goto $bb432;
$bb432:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 582, 3} true;
  assume {:verifier.code 0} true;
  $i709 := $i712;
  goto $bb426;
$bb433:
  assume ($i723 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 11} true;
  assume {:verifier.code 0} true;
  $i725 := $slt.i32($i721, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i725} true;
  goto $bb436, $bb438;
$bb434:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 589, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i723 == 1));
  goto $bb435;
$bb435:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i729 := $sext.i32.i64($i717);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 9} true;
  assume {:verifier.code 0} true;
  $i730 := $srem.i64($i729, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 594, 7} true;
  assume {:verifier.code 0} true;
  $i731 := $trunc.i64.i32($i730);
  call {:cexpr "a"} boogie_si_record_i32($i731);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 595, 5} true;
  assume {:verifier.code 0} true;
  $i732 := $add.i32($i731, $i731);
  call {:cexpr "a"} boogie_si_record_i32($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i733 := $sext.i32.i64($i721);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 9} true;
  assume {:verifier.code 0} true;
  $i734 := $srem.i64($i733, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 596, 7} true;
  assume {:verifier.code 0} true;
  $i735 := $trunc.i64.i32($i734);
  call {:cexpr "b"} boogie_si_record_i32($i735);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 597, 5} true;
  assume {:verifier.code 0} true;
  $i736 := $add.i32($i735, $i735);
  call {:cexpr "b"} boogie_si_record_i32($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 599, 5} true;
  assume {:verifier.code 0} true;
  $i737 := $add.i32($i724, $i724);
  call {:cexpr "c"} boogie_si_record_i32($i737);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 9} true;
  assume {:verifier.code 0} true;
  $i738 := $slt.i32($i732, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  $i739 := $i737;
  assume {:branchcond $i738} true;
  goto $bb442, $bb443;
$bb436:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 15} true;
  assume {:verifier.code 0} true;
  assume ($i725 == 1);
  goto $bb437;
$bb437:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 591, 9} true;
  assume {:verifier.code 0} true;
  $i728 := $add.i32($i722, 1);
  call {:cexpr "c"} boogie_si_record_i32($i728);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 592, 5} true;
  assume {:verifier.code 0} true;
  $i727 := $i728;
  goto $bb441;
$bb438:
  assume !(($i725 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 20} true;
  assume {:verifier.code 0} true;
  $i726 := $sgt.i32($i721, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  $i727 := $i722;
  assume {:branchcond $i726} true;
  goto $bb439, $bb440;
$bb439:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume ($i726 == 1);
  goto $bb437;
$bb440:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 590, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i726 == 1));
  goto $bb441;
$bb441:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 593, 3} true;
  assume {:verifier.code 0} true;
  $i724 := $i727;
  goto $bb435;
$bb442:
  assume ($i738 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 11} true;
  assume {:verifier.code 0} true;
  $i740 := $slt.i32($i736, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i740} true;
  goto $bb445, $bb447;
$bb443:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 600, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i738 == 1));
  goto $bb444;
$bb444:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i744 := $sext.i32.i64($i732);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 9} true;
  assume {:verifier.code 0} true;
  $i745 := $srem.i64($i744, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 605, 7} true;
  assume {:verifier.code 0} true;
  $i746 := $trunc.i64.i32($i745);
  call {:cexpr "a"} boogie_si_record_i32($i746);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 606, 5} true;
  assume {:verifier.code 0} true;
  $i747 := $add.i32($i746, $i746);
  call {:cexpr "a"} boogie_si_record_i32($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i748 := $sext.i32.i64($i736);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 9} true;
  assume {:verifier.code 0} true;
  $i749 := $srem.i64($i748, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 607, 7} true;
  assume {:verifier.code 0} true;
  $i750 := $trunc.i64.i32($i749);
  call {:cexpr "b"} boogie_si_record_i32($i750);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 608, 5} true;
  assume {:verifier.code 0} true;
  $i751 := $add.i32($i750, $i750);
  call {:cexpr "b"} boogie_si_record_i32($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 610, 5} true;
  assume {:verifier.code 0} true;
  $i752 := $add.i32($i739, $i739);
  call {:cexpr "c"} boogie_si_record_i32($i752);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 9} true;
  assume {:verifier.code 0} true;
  $i753 := $slt.i32($i747, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  $i754 := $i752;
  assume {:branchcond $i753} true;
  goto $bb451, $bb452;
$bb445:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 15} true;
  assume {:verifier.code 0} true;
  assume ($i740 == 1);
  goto $bb446;
$bb446:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 602, 9} true;
  assume {:verifier.code 0} true;
  $i743 := $add.i32($i737, 1);
  call {:cexpr "c"} boogie_si_record_i32($i743);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 603, 5} true;
  assume {:verifier.code 0} true;
  $i742 := $i743;
  goto $bb450;
$bb447:
  assume !(($i740 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 20} true;
  assume {:verifier.code 0} true;
  $i741 := $sgt.i32($i736, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  $i742 := $i737;
  assume {:branchcond $i741} true;
  goto $bb448, $bb449;
$bb448:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume ($i741 == 1);
  goto $bb446;
$bb449:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 601, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i741 == 1));
  goto $bb450;
$bb450:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 604, 3} true;
  assume {:verifier.code 0} true;
  $i739 := $i742;
  goto $bb444;
$bb451:
  assume ($i753 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 11} true;
  assume {:verifier.code 0} true;
  $i755 := $slt.i32($i751, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i755} true;
  goto $bb454, $bb456;
$bb452:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 611, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i753 == 1));
  goto $bb453;
$bb453:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i759 := $sext.i32.i64($i747);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 9} true;
  assume {:verifier.code 0} true;
  $i760 := $srem.i64($i759, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 616, 7} true;
  assume {:verifier.code 0} true;
  $i761 := $trunc.i64.i32($i760);
  call {:cexpr "a"} boogie_si_record_i32($i761);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 617, 5} true;
  assume {:verifier.code 0} true;
  $i762 := $add.i32($i761, $i761);
  call {:cexpr "a"} boogie_si_record_i32($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i763 := $sext.i32.i64($i751);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 9} true;
  assume {:verifier.code 0} true;
  $i764 := $srem.i64($i763, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 618, 7} true;
  assume {:verifier.code 0} true;
  $i765 := $trunc.i64.i32($i764);
  call {:cexpr "b"} boogie_si_record_i32($i765);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 619, 5} true;
  assume {:verifier.code 0} true;
  $i766 := $add.i32($i765, $i765);
  call {:cexpr "b"} boogie_si_record_i32($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 621, 5} true;
  assume {:verifier.code 0} true;
  $i767 := $add.i32($i754, $i754);
  call {:cexpr "c"} boogie_si_record_i32($i767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 9} true;
  assume {:verifier.code 0} true;
  $i768 := $slt.i32($i762, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  $i769 := $i767;
  assume {:branchcond $i768} true;
  goto $bb460, $bb461;
$bb454:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 15} true;
  assume {:verifier.code 0} true;
  assume ($i755 == 1);
  goto $bb455;
$bb455:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 613, 9} true;
  assume {:verifier.code 0} true;
  $i758 := $add.i32($i752, 1);
  call {:cexpr "c"} boogie_si_record_i32($i758);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 614, 5} true;
  assume {:verifier.code 0} true;
  $i757 := $i758;
  goto $bb459;
$bb456:
  assume !(($i755 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 20} true;
  assume {:verifier.code 0} true;
  $i756 := $sgt.i32($i751, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  $i757 := $i752;
  assume {:branchcond $i756} true;
  goto $bb457, $bb458;
$bb457:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume ($i756 == 1);
  goto $bb455;
$bb458:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 612, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i756 == 1));
  goto $bb459;
$bb459:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 615, 3} true;
  assume {:verifier.code 0} true;
  $i754 := $i757;
  goto $bb453;
$bb460:
  assume ($i768 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 11} true;
  assume {:verifier.code 0} true;
  $i770 := $slt.i32($i766, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i770} true;
  goto $bb463, $bb465;
$bb461:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 622, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i768 == 1));
  goto $bb462;
$bb462:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i774 := $sext.i32.i64($i762);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 9} true;
  assume {:verifier.code 0} true;
  $i775 := $srem.i64($i774, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 627, 7} true;
  assume {:verifier.code 0} true;
  $i776 := $trunc.i64.i32($i775);
  call {:cexpr "a"} boogie_si_record_i32($i776);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 628, 5} true;
  assume {:verifier.code 0} true;
  $i777 := $add.i32($i776, $i776);
  call {:cexpr "a"} boogie_si_record_i32($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i778 := $sext.i32.i64($i766);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 9} true;
  assume {:verifier.code 0} true;
  $i779 := $srem.i64($i778, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 629, 7} true;
  assume {:verifier.code 0} true;
  $i780 := $trunc.i64.i32($i779);
  call {:cexpr "b"} boogie_si_record_i32($i780);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 630, 5} true;
  assume {:verifier.code 0} true;
  $i781 := $add.i32($i780, $i780);
  call {:cexpr "b"} boogie_si_record_i32($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 632, 5} true;
  assume {:verifier.code 0} true;
  $i782 := $add.i32($i769, $i769);
  call {:cexpr "c"} boogie_si_record_i32($i782);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 9} true;
  assume {:verifier.code 0} true;
  $i783 := $slt.i32($i777, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  $i784 := $i782;
  assume {:branchcond $i783} true;
  goto $bb469, $bb470;
$bb463:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 15} true;
  assume {:verifier.code 0} true;
  assume ($i770 == 1);
  goto $bb464;
$bb464:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 624, 9} true;
  assume {:verifier.code 0} true;
  $i773 := $add.i32($i767, 1);
  call {:cexpr "c"} boogie_si_record_i32($i773);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 625, 5} true;
  assume {:verifier.code 0} true;
  $i772 := $i773;
  goto $bb468;
$bb465:
  assume !(($i770 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 20} true;
  assume {:verifier.code 0} true;
  $i771 := $sgt.i32($i766, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  $i772 := $i767;
  assume {:branchcond $i771} true;
  goto $bb466, $bb467;
$bb466:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume ($i771 == 1);
  goto $bb464;
$bb467:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 623, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i771 == 1));
  goto $bb468;
$bb468:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 626, 3} true;
  assume {:verifier.code 0} true;
  $i769 := $i772;
  goto $bb462;
$bb469:
  assume ($i783 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 11} true;
  assume {:verifier.code 0} true;
  $i785 := $slt.i32($i781, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i785} true;
  goto $bb472, $bb474;
$bb470:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 633, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i783 == 1));
  goto $bb471;
$bb471:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i789 := $sext.i32.i64($i777);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 9} true;
  assume {:verifier.code 0} true;
  $i790 := $srem.i64($i789, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 638, 7} true;
  assume {:verifier.code 0} true;
  $i791 := $trunc.i64.i32($i790);
  call {:cexpr "a"} boogie_si_record_i32($i791);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 639, 5} true;
  assume {:verifier.code 0} true;
  $i792 := $add.i32($i791, $i791);
  call {:cexpr "a"} boogie_si_record_i32($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i793 := $sext.i32.i64($i781);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 9} true;
  assume {:verifier.code 0} true;
  $i794 := $srem.i64($i793, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 640, 7} true;
  assume {:verifier.code 0} true;
  $i795 := $trunc.i64.i32($i794);
  call {:cexpr "b"} boogie_si_record_i32($i795);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 641, 5} true;
  assume {:verifier.code 0} true;
  $i796 := $add.i32($i795, $i795);
  call {:cexpr "b"} boogie_si_record_i32($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 643, 5} true;
  assume {:verifier.code 0} true;
  $i797 := $add.i32($i784, $i784);
  call {:cexpr "c"} boogie_si_record_i32($i797);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 9} true;
  assume {:verifier.code 0} true;
  $i798 := $slt.i32($i792, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  $i799 := $i797;
  assume {:branchcond $i798} true;
  goto $bb478, $bb479;
$bb472:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 15} true;
  assume {:verifier.code 0} true;
  assume ($i785 == 1);
  goto $bb473;
$bb473:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 635, 9} true;
  assume {:verifier.code 0} true;
  $i788 := $add.i32($i782, 1);
  call {:cexpr "c"} boogie_si_record_i32($i788);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 636, 5} true;
  assume {:verifier.code 0} true;
  $i787 := $i788;
  goto $bb477;
$bb474:
  assume !(($i785 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 20} true;
  assume {:verifier.code 0} true;
  $i786 := $sgt.i32($i781, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  $i787 := $i782;
  assume {:branchcond $i786} true;
  goto $bb475, $bb476;
$bb475:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume ($i786 == 1);
  goto $bb473;
$bb476:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 634, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i786 == 1));
  goto $bb477;
$bb477:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 637, 3} true;
  assume {:verifier.code 0} true;
  $i784 := $i787;
  goto $bb471;
$bb478:
  assume ($i798 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 11} true;
  assume {:verifier.code 0} true;
  $i800 := $slt.i32($i796, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i800} true;
  goto $bb481, $bb483;
$bb479:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 644, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i798 == 1));
  goto $bb480;
$bb480:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i804 := $sext.i32.i64($i792);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 9} true;
  assume {:verifier.code 0} true;
  $i805 := $srem.i64($i804, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 649, 7} true;
  assume {:verifier.code 0} true;
  $i806 := $trunc.i64.i32($i805);
  call {:cexpr "a"} boogie_si_record_i32($i806);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 650, 5} true;
  assume {:verifier.code 0} true;
  $i807 := $add.i32($i806, $i806);
  call {:cexpr "a"} boogie_si_record_i32($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i808 := $sext.i32.i64($i796);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 9} true;
  assume {:verifier.code 0} true;
  $i809 := $srem.i64($i808, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 651, 7} true;
  assume {:verifier.code 0} true;
  $i810 := $trunc.i64.i32($i809);
  call {:cexpr "b"} boogie_si_record_i32($i810);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 652, 5} true;
  assume {:verifier.code 0} true;
  $i811 := $add.i32($i810, $i810);
  call {:cexpr "b"} boogie_si_record_i32($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 654, 5} true;
  assume {:verifier.code 0} true;
  $i812 := $add.i32($i799, $i799);
  call {:cexpr "c"} boogie_si_record_i32($i812);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 9} true;
  assume {:verifier.code 0} true;
  $i813 := $slt.i32($i807, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  $i814 := $i812;
  assume {:branchcond $i813} true;
  goto $bb487, $bb488;
$bb481:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 15} true;
  assume {:verifier.code 0} true;
  assume ($i800 == 1);
  goto $bb482;
$bb482:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 646, 9} true;
  assume {:verifier.code 0} true;
  $i803 := $add.i32($i797, 1);
  call {:cexpr "c"} boogie_si_record_i32($i803);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 647, 5} true;
  assume {:verifier.code 0} true;
  $i802 := $i803;
  goto $bb486;
$bb483:
  assume !(($i800 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 20} true;
  assume {:verifier.code 0} true;
  $i801 := $sgt.i32($i796, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  $i802 := $i797;
  assume {:branchcond $i801} true;
  goto $bb484, $bb485;
$bb484:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume ($i801 == 1);
  goto $bb482;
$bb485:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 645, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i801 == 1));
  goto $bb486;
$bb486:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 648, 3} true;
  assume {:verifier.code 0} true;
  $i799 := $i802;
  goto $bb480;
$bb487:
  assume ($i813 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 11} true;
  assume {:verifier.code 0} true;
  $i815 := $slt.i32($i811, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i815} true;
  goto $bb490, $bb492;
$bb488:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 655, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i813 == 1));
  goto $bb489;
$bb489:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i819 := $sext.i32.i64($i807);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 9} true;
  assume {:verifier.code 0} true;
  $i820 := $srem.i64($i819, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 660, 7} true;
  assume {:verifier.code 0} true;
  $i821 := $trunc.i64.i32($i820);
  call {:cexpr "a"} boogie_si_record_i32($i821);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 661, 5} true;
  assume {:verifier.code 0} true;
  $i822 := $add.i32($i821, $i821);
  call {:cexpr "a"} boogie_si_record_i32($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i823 := $sext.i32.i64($i811);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 9} true;
  assume {:verifier.code 0} true;
  $i824 := $srem.i64($i823, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 662, 7} true;
  assume {:verifier.code 0} true;
  $i825 := $trunc.i64.i32($i824);
  call {:cexpr "b"} boogie_si_record_i32($i825);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 663, 5} true;
  assume {:verifier.code 0} true;
  $i826 := $add.i32($i825, $i825);
  call {:cexpr "b"} boogie_si_record_i32($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 665, 5} true;
  assume {:verifier.code 0} true;
  $i827 := $add.i32($i814, $i814);
  call {:cexpr "c"} boogie_si_record_i32($i827);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 9} true;
  assume {:verifier.code 0} true;
  $i828 := $slt.i32($i822, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  $i829 := $i827;
  assume {:branchcond $i828} true;
  goto $bb496, $bb497;
$bb490:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 15} true;
  assume {:verifier.code 0} true;
  assume ($i815 == 1);
  goto $bb491;
$bb491:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 657, 9} true;
  assume {:verifier.code 0} true;
  $i818 := $add.i32($i812, 1);
  call {:cexpr "c"} boogie_si_record_i32($i818);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 658, 5} true;
  assume {:verifier.code 0} true;
  $i817 := $i818;
  goto $bb495;
$bb492:
  assume !(($i815 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 20} true;
  assume {:verifier.code 0} true;
  $i816 := $sgt.i32($i811, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  $i817 := $i812;
  assume {:branchcond $i816} true;
  goto $bb493, $bb494;
$bb493:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume ($i816 == 1);
  goto $bb491;
$bb494:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 656, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i816 == 1));
  goto $bb495;
$bb495:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 659, 3} true;
  assume {:verifier.code 0} true;
  $i814 := $i817;
  goto $bb489;
$bb496:
  assume ($i828 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 11} true;
  assume {:verifier.code 0} true;
  $i830 := $slt.i32($i826, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i830} true;
  goto $bb499, $bb501;
$bb497:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 666, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i828 == 1));
  goto $bb498;
$bb498:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i834 := $sext.i32.i64($i822);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 9} true;
  assume {:verifier.code 0} true;
  $i835 := $srem.i64($i834, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 671, 7} true;
  assume {:verifier.code 0} true;
  $i836 := $trunc.i64.i32($i835);
  call {:cexpr "a"} boogie_si_record_i32($i836);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 672, 5} true;
  assume {:verifier.code 0} true;
  $i837 := $add.i32($i836, $i836);
  call {:cexpr "a"} boogie_si_record_i32($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i838 := $sext.i32.i64($i826);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 9} true;
  assume {:verifier.code 0} true;
  $i839 := $srem.i64($i838, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 673, 7} true;
  assume {:verifier.code 0} true;
  $i840 := $trunc.i64.i32($i839);
  call {:cexpr "b"} boogie_si_record_i32($i840);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 674, 5} true;
  assume {:verifier.code 0} true;
  $i841 := $add.i32($i840, $i840);
  call {:cexpr "b"} boogie_si_record_i32($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 676, 5} true;
  assume {:verifier.code 0} true;
  $i842 := $add.i32($i829, $i829);
  call {:cexpr "c"} boogie_si_record_i32($i842);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 9} true;
  assume {:verifier.code 0} true;
  $i843 := $slt.i32($i837, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  $i844 := $i842;
  assume {:branchcond $i843} true;
  goto $bb505, $bb506;
$bb499:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 15} true;
  assume {:verifier.code 0} true;
  assume ($i830 == 1);
  goto $bb500;
$bb500:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 668, 9} true;
  assume {:verifier.code 0} true;
  $i833 := $add.i32($i827, 1);
  call {:cexpr "c"} boogie_si_record_i32($i833);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 669, 5} true;
  assume {:verifier.code 0} true;
  $i832 := $i833;
  goto $bb504;
$bb501:
  assume !(($i830 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 20} true;
  assume {:verifier.code 0} true;
  $i831 := $sgt.i32($i826, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  $i832 := $i827;
  assume {:branchcond $i831} true;
  goto $bb502, $bb503;
$bb502:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume ($i831 == 1);
  goto $bb500;
$bb503:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 667, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i831 == 1));
  goto $bb504;
$bb504:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 670, 3} true;
  assume {:verifier.code 0} true;
  $i829 := $i832;
  goto $bb498;
$bb505:
  assume ($i843 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 11} true;
  assume {:verifier.code 0} true;
  $i845 := $slt.i32($i841, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i845} true;
  goto $bb508, $bb510;
$bb506:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 677, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i843 == 1));
  goto $bb507;
$bb507:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i849 := $sext.i32.i64($i837);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 9} true;
  assume {:verifier.code 0} true;
  $i850 := $srem.i64($i849, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 682, 7} true;
  assume {:verifier.code 0} true;
  $i851 := $trunc.i64.i32($i850);
  call {:cexpr "a"} boogie_si_record_i32($i851);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 683, 5} true;
  assume {:verifier.code 0} true;
  $i852 := $add.i32($i851, $i851);
  call {:cexpr "a"} boogie_si_record_i32($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i853 := $sext.i32.i64($i841);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 9} true;
  assume {:verifier.code 0} true;
  $i854 := $srem.i64($i853, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 684, 7} true;
  assume {:verifier.code 0} true;
  $i855 := $trunc.i64.i32($i854);
  call {:cexpr "b"} boogie_si_record_i32($i855);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 685, 5} true;
  assume {:verifier.code 0} true;
  $i856 := $add.i32($i855, $i855);
  call {:cexpr "b"} boogie_si_record_i32($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 687, 5} true;
  assume {:verifier.code 0} true;
  $i857 := $add.i32($i844, $i844);
  call {:cexpr "c"} boogie_si_record_i32($i857);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 9} true;
  assume {:verifier.code 0} true;
  $i858 := $slt.i32($i852, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  $i859 := $i857;
  assume {:branchcond $i858} true;
  goto $bb514, $bb515;
$bb508:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 15} true;
  assume {:verifier.code 0} true;
  assume ($i845 == 1);
  goto $bb509;
$bb509:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 679, 9} true;
  assume {:verifier.code 0} true;
  $i848 := $add.i32($i842, 1);
  call {:cexpr "c"} boogie_si_record_i32($i848);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 680, 5} true;
  assume {:verifier.code 0} true;
  $i847 := $i848;
  goto $bb513;
$bb510:
  assume !(($i845 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 20} true;
  assume {:verifier.code 0} true;
  $i846 := $sgt.i32($i841, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  $i847 := $i842;
  assume {:branchcond $i846} true;
  goto $bb511, $bb512;
$bb511:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume ($i846 == 1);
  goto $bb509;
$bb512:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 678, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i846 == 1));
  goto $bb513;
$bb513:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 681, 3} true;
  assume {:verifier.code 0} true;
  $i844 := $i847;
  goto $bb507;
$bb514:
  assume ($i858 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 11} true;
  assume {:verifier.code 0} true;
  $i860 := $slt.i32($i856, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i860} true;
  goto $bb517, $bb519;
$bb515:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 688, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i858 == 1));
  goto $bb516;
$bb516:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i864 := $sext.i32.i64($i852);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 9} true;
  assume {:verifier.code 0} true;
  $i865 := $srem.i64($i864, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 693, 7} true;
  assume {:verifier.code 0} true;
  $i866 := $trunc.i64.i32($i865);
  call {:cexpr "a"} boogie_si_record_i32($i866);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 694, 5} true;
  assume {:verifier.code 0} true;
  $i867 := $add.i32($i866, $i866);
  call {:cexpr "a"} boogie_si_record_i32($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i868 := $sext.i32.i64($i856);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 9} true;
  assume {:verifier.code 0} true;
  $i869 := $srem.i64($i868, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 695, 7} true;
  assume {:verifier.code 0} true;
  $i870 := $trunc.i64.i32($i869);
  call {:cexpr "b"} boogie_si_record_i32($i870);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 696, 5} true;
  assume {:verifier.code 0} true;
  $i871 := $add.i32($i870, $i870);
  call {:cexpr "b"} boogie_si_record_i32($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 698, 5} true;
  assume {:verifier.code 0} true;
  $i872 := $add.i32($i859, $i859);
  call {:cexpr "c"} boogie_si_record_i32($i872);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 9} true;
  assume {:verifier.code 0} true;
  $i873 := $slt.i32($i867, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  $i874 := $i872;
  assume {:branchcond $i873} true;
  goto $bb523, $bb524;
$bb517:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 15} true;
  assume {:verifier.code 0} true;
  assume ($i860 == 1);
  goto $bb518;
$bb518:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 690, 9} true;
  assume {:verifier.code 0} true;
  $i863 := $add.i32($i857, 1);
  call {:cexpr "c"} boogie_si_record_i32($i863);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 691, 5} true;
  assume {:verifier.code 0} true;
  $i862 := $i863;
  goto $bb522;
$bb519:
  assume !(($i860 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 20} true;
  assume {:verifier.code 0} true;
  $i861 := $sgt.i32($i856, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  $i862 := $i857;
  assume {:branchcond $i861} true;
  goto $bb520, $bb521;
$bb520:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume ($i861 == 1);
  goto $bb518;
$bb521:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 689, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i861 == 1));
  goto $bb522;
$bb522:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 692, 3} true;
  assume {:verifier.code 0} true;
  $i859 := $i862;
  goto $bb516;
$bb523:
  assume ($i873 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 11} true;
  assume {:verifier.code 0} true;
  $i875 := $slt.i32($i871, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i875} true;
  goto $bb526, $bb528;
$bb524:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 699, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i873 == 1));
  goto $bb525;
$bb525:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i879 := $sext.i32.i64($i867);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 9} true;
  assume {:verifier.code 0} true;
  $i880 := $srem.i64($i879, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 704, 7} true;
  assume {:verifier.code 0} true;
  $i881 := $trunc.i64.i32($i880);
  call {:cexpr "a"} boogie_si_record_i32($i881);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 705, 5} true;
  assume {:verifier.code 0} true;
  $i882 := $add.i32($i881, $i881);
  call {:cexpr "a"} boogie_si_record_i32($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i883 := $sext.i32.i64($i871);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 9} true;
  assume {:verifier.code 0} true;
  $i884 := $srem.i64($i883, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 706, 7} true;
  assume {:verifier.code 0} true;
  $i885 := $trunc.i64.i32($i884);
  call {:cexpr "b"} boogie_si_record_i32($i885);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 707, 5} true;
  assume {:verifier.code 0} true;
  $i886 := $add.i32($i885, $i885);
  call {:cexpr "b"} boogie_si_record_i32($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 709, 5} true;
  assume {:verifier.code 0} true;
  $i887 := $add.i32($i874, $i874);
  call {:cexpr "c"} boogie_si_record_i32($i887);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 9} true;
  assume {:verifier.code 0} true;
  $i888 := $slt.i32($i882, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  $i889 := $i887;
  assume {:branchcond $i888} true;
  goto $bb532, $bb533;
$bb526:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 15} true;
  assume {:verifier.code 0} true;
  assume ($i875 == 1);
  goto $bb527;
$bb527:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 701, 9} true;
  assume {:verifier.code 0} true;
  $i878 := $add.i32($i872, 1);
  call {:cexpr "c"} boogie_si_record_i32($i878);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 702, 5} true;
  assume {:verifier.code 0} true;
  $i877 := $i878;
  goto $bb531;
$bb528:
  assume !(($i875 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 20} true;
  assume {:verifier.code 0} true;
  $i876 := $sgt.i32($i871, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  $i877 := $i872;
  assume {:branchcond $i876} true;
  goto $bb529, $bb530;
$bb529:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume ($i876 == 1);
  goto $bb527;
$bb530:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 700, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i876 == 1));
  goto $bb531;
$bb531:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 703, 3} true;
  assume {:verifier.code 0} true;
  $i874 := $i877;
  goto $bb525;
$bb532:
  assume ($i888 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 11} true;
  assume {:verifier.code 0} true;
  $i890 := $slt.i32($i886, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i890} true;
  goto $bb535, $bb537;
$bb533:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 710, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i888 == 1));
  goto $bb534;
$bb534:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i894 := $sext.i32.i64($i882);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 9} true;
  assume {:verifier.code 0} true;
  $i895 := $srem.i64($i894, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 715, 7} true;
  assume {:verifier.code 0} true;
  $i896 := $trunc.i64.i32($i895);
  call {:cexpr "a"} boogie_si_record_i32($i896);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 716, 5} true;
  assume {:verifier.code 0} true;
  $i897 := $add.i32($i896, $i896);
  call {:cexpr "a"} boogie_si_record_i32($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i898 := $sext.i32.i64($i886);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 9} true;
  assume {:verifier.code 0} true;
  $i899 := $srem.i64($i898, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 717, 7} true;
  assume {:verifier.code 0} true;
  $i900 := $trunc.i64.i32($i899);
  call {:cexpr "b"} boogie_si_record_i32($i900);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 718, 5} true;
  assume {:verifier.code 0} true;
  $i901 := $add.i32($i900, $i900);
  call {:cexpr "b"} boogie_si_record_i32($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 720, 5} true;
  assume {:verifier.code 0} true;
  $i902 := $add.i32($i889, $i889);
  call {:cexpr "c"} boogie_si_record_i32($i902);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 9} true;
  assume {:verifier.code 0} true;
  $i903 := $slt.i32($i897, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  $i904 := $i902;
  assume {:branchcond $i903} true;
  goto $bb541, $bb542;
$bb535:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 15} true;
  assume {:verifier.code 0} true;
  assume ($i890 == 1);
  goto $bb536;
$bb536:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 712, 9} true;
  assume {:verifier.code 0} true;
  $i893 := $add.i32($i887, 1);
  call {:cexpr "c"} boogie_si_record_i32($i893);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 713, 5} true;
  assume {:verifier.code 0} true;
  $i892 := $i893;
  goto $bb540;
$bb537:
  assume !(($i890 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 20} true;
  assume {:verifier.code 0} true;
  $i891 := $sgt.i32($i886, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  $i892 := $i887;
  assume {:branchcond $i891} true;
  goto $bb538, $bb539;
$bb538:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume ($i891 == 1);
  goto $bb536;
$bb539:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 711, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i891 == 1));
  goto $bb540;
$bb540:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 714, 3} true;
  assume {:verifier.code 0} true;
  $i889 := $i892;
  goto $bb534;
$bb541:
  assume ($i903 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 11} true;
  assume {:verifier.code 0} true;
  $i905 := $slt.i32($i901, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i905} true;
  goto $bb544, $bb546;
$bb542:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 721, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i903 == 1));
  goto $bb543;
$bb543:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i909 := $sext.i32.i64($i897);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 9} true;
  assume {:verifier.code 0} true;
  $i910 := $srem.i64($i909, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 726, 7} true;
  assume {:verifier.code 0} true;
  $i911 := $trunc.i64.i32($i910);
  call {:cexpr "a"} boogie_si_record_i32($i911);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 727, 5} true;
  assume {:verifier.code 0} true;
  $i912 := $add.i32($i911, $i911);
  call {:cexpr "a"} boogie_si_record_i32($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i913 := $sext.i32.i64($i901);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 9} true;
  assume {:verifier.code 0} true;
  $i914 := $srem.i64($i913, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 728, 7} true;
  assume {:verifier.code 0} true;
  $i915 := $trunc.i64.i32($i914);
  call {:cexpr "b"} boogie_si_record_i32($i915);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 729, 5} true;
  assume {:verifier.code 0} true;
  $i916 := $add.i32($i915, $i915);
  call {:cexpr "b"} boogie_si_record_i32($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 731, 5} true;
  assume {:verifier.code 0} true;
  $i917 := $add.i32($i904, $i904);
  call {:cexpr "c"} boogie_si_record_i32($i917);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 9} true;
  assume {:verifier.code 0} true;
  $i918 := $slt.i32($i912, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  $i919 := $i917;
  assume {:branchcond $i918} true;
  goto $bb550, $bb551;
$bb544:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 15} true;
  assume {:verifier.code 0} true;
  assume ($i905 == 1);
  goto $bb545;
$bb545:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 723, 9} true;
  assume {:verifier.code 0} true;
  $i908 := $add.i32($i902, 1);
  call {:cexpr "c"} boogie_si_record_i32($i908);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 724, 5} true;
  assume {:verifier.code 0} true;
  $i907 := $i908;
  goto $bb549;
$bb546:
  assume !(($i905 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 20} true;
  assume {:verifier.code 0} true;
  $i906 := $sgt.i32($i901, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  $i907 := $i902;
  assume {:branchcond $i906} true;
  goto $bb547, $bb548;
$bb547:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume ($i906 == 1);
  goto $bb545;
$bb548:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 722, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i906 == 1));
  goto $bb549;
$bb549:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 725, 3} true;
  assume {:verifier.code 0} true;
  $i904 := $i907;
  goto $bb543;
$bb550:
  assume ($i918 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 11} true;
  assume {:verifier.code 0} true;
  $i920 := $slt.i32($i916, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i920} true;
  goto $bb553, $bb555;
$bb551:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 732, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i918 == 1));
  goto $bb552;
$bb552:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i924 := $sext.i32.i64($i912);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 9} true;
  assume {:verifier.code 0} true;
  $i925 := $srem.i64($i924, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 737, 7} true;
  assume {:verifier.code 0} true;
  $i926 := $trunc.i64.i32($i925);
  call {:cexpr "a"} boogie_si_record_i32($i926);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 738, 5} true;
  assume {:verifier.code 0} true;
  $i927 := $add.i32($i926, $i926);
  call {:cexpr "a"} boogie_si_record_i32($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i928 := $sext.i32.i64($i916);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 9} true;
  assume {:verifier.code 0} true;
  $i929 := $srem.i64($i928, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 739, 7} true;
  assume {:verifier.code 0} true;
  $i930 := $trunc.i64.i32($i929);
  call {:cexpr "b"} boogie_si_record_i32($i930);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 740, 5} true;
  assume {:verifier.code 0} true;
  $i931 := $add.i32($i930, $i930);
  call {:cexpr "b"} boogie_si_record_i32($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 742, 5} true;
  assume {:verifier.code 0} true;
  $i932 := $add.i32($i919, $i919);
  call {:cexpr "c"} boogie_si_record_i32($i932);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 9} true;
  assume {:verifier.code 0} true;
  $i933 := $slt.i32($i927, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  $i934 := $i932;
  assume {:branchcond $i933} true;
  goto $bb559, $bb560;
$bb553:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 15} true;
  assume {:verifier.code 0} true;
  assume ($i920 == 1);
  goto $bb554;
$bb554:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 734, 9} true;
  assume {:verifier.code 0} true;
  $i923 := $add.i32($i917, 1);
  call {:cexpr "c"} boogie_si_record_i32($i923);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 735, 5} true;
  assume {:verifier.code 0} true;
  $i922 := $i923;
  goto $bb558;
$bb555:
  assume !(($i920 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 20} true;
  assume {:verifier.code 0} true;
  $i921 := $sgt.i32($i916, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  $i922 := $i917;
  assume {:branchcond $i921} true;
  goto $bb556, $bb557;
$bb556:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume ($i921 == 1);
  goto $bb554;
$bb557:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 733, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i921 == 1));
  goto $bb558;
$bb558:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 736, 3} true;
  assume {:verifier.code 0} true;
  $i919 := $i922;
  goto $bb552;
$bb559:
  assume ($i933 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 11} true;
  assume {:verifier.code 0} true;
  $i935 := $slt.i32($i931, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i935} true;
  goto $bb562, $bb564;
$bb560:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 743, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i933 == 1));
  goto $bb561;
$bb561:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i939 := $sext.i32.i64($i927);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 9} true;
  assume {:verifier.code 0} true;
  $i940 := $srem.i64($i939, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 748, 7} true;
  assume {:verifier.code 0} true;
  $i941 := $trunc.i64.i32($i940);
  call {:cexpr "a"} boogie_si_record_i32($i941);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 749, 5} true;
  assume {:verifier.code 0} true;
  $i942 := $add.i32($i941, $i941);
  call {:cexpr "a"} boogie_si_record_i32($i942);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i943 := $sext.i32.i64($i931);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 9} true;
  assume {:verifier.code 0} true;
  $i944 := $srem.i64($i943, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 750, 7} true;
  assume {:verifier.code 0} true;
  $i945 := $trunc.i64.i32($i944);
  call {:cexpr "b"} boogie_si_record_i32($i945);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 751, 5} true;
  assume {:verifier.code 0} true;
  $i946 := $add.i32($i945, $i945);
  call {:cexpr "b"} boogie_si_record_i32($i946);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 753, 5} true;
  assume {:verifier.code 0} true;
  $i947 := $add.i32($i934, $i934);
  call {:cexpr "c"} boogie_si_record_i32($i947);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 9} true;
  assume {:verifier.code 0} true;
  $i948 := $slt.i32($i942, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  $i949 := $i947;
  assume {:branchcond $i948} true;
  goto $bb568, $bb569;
$bb562:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 15} true;
  assume {:verifier.code 0} true;
  assume ($i935 == 1);
  goto $bb563;
$bb563:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 745, 9} true;
  assume {:verifier.code 0} true;
  $i938 := $add.i32($i932, 1);
  call {:cexpr "c"} boogie_si_record_i32($i938);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 746, 5} true;
  assume {:verifier.code 0} true;
  $i937 := $i938;
  goto $bb567;
$bb564:
  assume !(($i935 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 20} true;
  assume {:verifier.code 0} true;
  $i936 := $sgt.i32($i931, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  $i937 := $i932;
  assume {:branchcond $i936} true;
  goto $bb565, $bb566;
$bb565:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume ($i936 == 1);
  goto $bb563;
$bb566:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 744, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i936 == 1));
  goto $bb567;
$bb567:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 747, 3} true;
  assume {:verifier.code 0} true;
  $i934 := $i937;
  goto $bb561;
$bb568:
  assume ($i948 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 11} true;
  assume {:verifier.code 0} true;
  $i950 := $slt.i32($i946, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i950} true;
  goto $bb571, $bb573;
$bb569:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 754, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i948 == 1));
  goto $bb570;
$bb570:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 764, 3} true;
  assume {:verifier.code 0} true;
  $r := $i949;
  $exn := false;
  return;
$bb571:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 15} true;
  assume {:verifier.code 0} true;
  assume ($i950 == 1);
  goto $bb572;
$bb572:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 756, 9} true;
  assume {:verifier.code 0} true;
  $i953 := $add.i32($i947, 1);
  call {:cexpr "c"} boogie_si_record_i32($i953);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 757, 5} true;
  assume {:verifier.code 0} true;
  $i952 := $i953;
  goto $bb576;
$bb573:
  assume !(($i950 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 20} true;
  assume {:verifier.code 0} true;
  $i951 := $sgt.i32($i946, 2147483647);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  $i952 := $i947;
  assume {:branchcond $i951} true;
  goto $bb574, $bb575;
$bb574:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume ($i951 == 1);
  goto $bb572;
$bb575:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 755, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i951 == 1));
  goto $bb576;
$bb576:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 758, 3} true;
  assume {:verifier.code 0} true;
  $i949 := $i952;
  goto $bb570;
}
const __SMACK_and64: ref;
axiom (__SMACK_and64 == $sub.ref(0, 216704));
procedure {:inline 1} __SMACK_and64($i0: i64, $i1: i64)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_and64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_and64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 65} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 68} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 51} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_and32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_and32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 45} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 767, 38} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_and16: ref;
axiom (__SMACK_and16 == $sub.ref(0, 217736));
procedure {:inline 1} __SMACK_and16($i0: i16, $i1: i16)
  returns ($r: i16)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $i13: i16;
  var $i8: i16;
  var $i17: i32;
  var $i18: i32;
  var $i19: i16;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i16;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i16;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i16;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i42: i16;
  var $i37: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i16;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i16;
  var $i53: i32;
  var $i54: i32;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i16;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i16;
  var $i71: i16;
  var $i66: i16;
  var $i75: i32;
  var $i76: i32;
  var $i77: i16;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i16;
  var $i82: i32;
  var $i83: i32;
  var $i84: i16;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i16;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i16;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i16;
  var $i100: i16;
  var $i95: i16;
  var $i104: i32;
  var $i105: i32;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i16;
  var $i111: i32;
  var $i112: i32;
  var $i113: i16;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i16;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i16;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i16;
  var $i129: i16;
  var $i124: i16;
  var $i133: i32;
  var $i134: i32;
  var $i135: i16;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i16;
  var $i140: i32;
  var $i141: i32;
  var $i142: i16;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i16;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i16;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i16;
  var $i158: i16;
  var $i153: i16;
  var $i162: i32;
  var $i163: i32;
  var $i164: i16;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i16;
  var $i169: i32;
  var $i170: i32;
  var $i171: i16;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i16;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i16;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i16;
  var $i187: i16;
  var $i182: i16;
  var $i191: i32;
  var $i192: i32;
  var $i193: i16;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $i198: i32;
  var $i199: i32;
  var $i200: i16;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i16;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i16;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i16;
  var $i216: i16;
  var $i211: i16;
  var $i220: i32;
  var $i221: i32;
  var $i222: i16;
  var $i223: i32;
  var $i224: i32;
  var $i225: i32;
  var $i226: i16;
  var $i227: i32;
  var $i228: i32;
  var $i229: i16;
  var $i230: i32;
  var $i231: i32;
  var $i232: i32;
  var $i233: i16;
  var $i234: i32;
  var $i235: i32;
  var $i236: i32;
  var $i237: i16;
  var $i238: i32;
  var $i239: i1;
  var $i241: i32;
  var $i242: i1;
  var $i243: i32;
  var $i244: i1;
  var $i246: i32;
  var $i247: i32;
  var $i248: i16;
  var $i245: i16;
  var $i240: i16;
  var $i249: i32;
  var $i250: i32;
  var $i251: i16;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $i255: i16;
  var $i256: i32;
  var $i257: i32;
  var $i258: i16;
  var $i259: i32;
  var $i260: i32;
  var $i261: i32;
  var $i262: i16;
  var $i263: i32;
  var $i264: i32;
  var $i265: i32;
  var $i266: i16;
  var $i267: i32;
  var $i268: i1;
  var $i270: i32;
  var $i271: i1;
  var $i272: i32;
  var $i273: i1;
  var $i275: i32;
  var $i276: i32;
  var $i277: i16;
  var $i274: i16;
  var $i269: i16;
  var $i278: i32;
  var $i279: i32;
  var $i280: i16;
  var $i281: i32;
  var $i282: i32;
  var $i283: i32;
  var $i284: i16;
  var $i285: i32;
  var $i286: i32;
  var $i287: i16;
  var $i288: i32;
  var $i289: i32;
  var $i290: i32;
  var $i291: i16;
  var $i292: i32;
  var $i293: i32;
  var $i294: i32;
  var $i295: i16;
  var $i296: i32;
  var $i297: i1;
  var $i299: i32;
  var $i300: i1;
  var $i301: i32;
  var $i302: i1;
  var $i304: i32;
  var $i305: i32;
  var $i306: i16;
  var $i303: i16;
  var $i298: i16;
  var $i307: i32;
  var $i308: i32;
  var $i309: i16;
  var $i310: i32;
  var $i311: i32;
  var $i312: i32;
  var $i313: i16;
  var $i314: i32;
  var $i315: i32;
  var $i316: i16;
  var $i317: i32;
  var $i318: i32;
  var $i319: i32;
  var $i320: i16;
  var $i321: i32;
  var $i322: i32;
  var $i323: i32;
  var $i324: i16;
  var $i325: i32;
  var $i326: i1;
  var $i328: i32;
  var $i329: i1;
  var $i330: i32;
  var $i331: i1;
  var $i333: i32;
  var $i334: i32;
  var $i335: i16;
  var $i332: i16;
  var $i327: i16;
  var $i336: i32;
  var $i337: i32;
  var $i338: i16;
  var $i339: i32;
  var $i340: i32;
  var $i341: i32;
  var $i342: i16;
  var $i343: i32;
  var $i344: i32;
  var $i345: i16;
  var $i346: i32;
  var $i347: i32;
  var $i348: i32;
  var $i349: i16;
  var $i350: i32;
  var $i351: i32;
  var $i352: i32;
  var $i353: i16;
  var $i354: i32;
  var $i355: i1;
  var $i357: i32;
  var $i358: i1;
  var $i359: i32;
  var $i360: i1;
  var $i362: i32;
  var $i363: i32;
  var $i364: i16;
  var $i361: i16;
  var $i356: i16;
  var $i365: i32;
  var $i366: i32;
  var $i367: i16;
  var $i368: i32;
  var $i369: i32;
  var $i370: i32;
  var $i371: i16;
  var $i372: i32;
  var $i373: i32;
  var $i374: i16;
  var $i375: i32;
  var $i376: i32;
  var $i377: i32;
  var $i378: i16;
  var $i379: i32;
  var $i380: i32;
  var $i381: i32;
  var $i382: i16;
  var $i383: i32;
  var $i384: i1;
  var $i386: i32;
  var $i387: i1;
  var $i388: i32;
  var $i389: i1;
  var $i391: i32;
  var $i392: i32;
  var $i393: i16;
  var $i390: i16;
  var $i385: i16;
  var $i394: i32;
  var $i395: i32;
  var $i396: i16;
  var $i397: i32;
  var $i398: i32;
  var $i399: i32;
  var $i400: i16;
  var $i401: i32;
  var $i402: i32;
  var $i403: i16;
  var $i404: i32;
  var $i405: i32;
  var $i406: i32;
  var $i407: i16;
  var $i408: i32;
  var $i409: i32;
  var $i410: i32;
  var $i411: i16;
  var $i412: i32;
  var $i413: i1;
  var $i415: i32;
  var $i416: i1;
  var $i417: i32;
  var $i418: i1;
  var $i420: i32;
  var $i421: i32;
  var $i422: i16;
  var $i419: i16;
  var $i414: i16;
  var $i423: i32;
  var $i424: i32;
  var $i425: i16;
  var $i426: i32;
  var $i427: i32;
  var $i428: i32;
  var $i429: i16;
  var $i430: i32;
  var $i431: i32;
  var $i432: i16;
  var $i433: i32;
  var $i434: i32;
  var $i435: i32;
  var $i436: i16;
  var $i437: i32;
  var $i438: i32;
  var $i439: i32;
  var $i440: i16;
  var $i441: i32;
  var $i442: i1;
  var $i444: i32;
  var $i445: i1;
  var $i446: i32;
  var $i447: i1;
  var $i449: i32;
  var $i450: i32;
  var $i451: i16;
  var $i448: i16;
  var $i443: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_and16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i16.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3, $i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 772, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  call {:cexpr "c"} boogie_si_record_i16($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 773, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 778, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i16($i18);
  call {:cexpr "a"} boogie_si_record_i16($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i16.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21, $i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 779, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  call {:cexpr "a"} boogie_si_record_i16($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 780, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  call {:cexpr "b"} boogie_si_record_i16($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i16.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28, $i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 781, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  call {:cexpr "b"} boogie_si_record_i16($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i16.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32, $i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 783, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i16($i33);
  call {:cexpr "c"} boogie_si_record_i16($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i16.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 775, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  call {:cexpr "c"} boogie_si_record_i16($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 776, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !(($i10 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 774, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 777, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 784, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i16.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 789, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i16($i47);
  call {:cexpr "a"} boogie_si_record_i16($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i16.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50, $i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 790, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i16($i51);
  call {:cexpr "a"} boogie_si_record_i16($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 791, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  call {:cexpr "b"} boogie_si_record_i16($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i16.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57, $i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 792, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i16($i58);
  call {:cexpr "b"} boogie_si_record_i16($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i16.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61, $i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 794, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i16($i62);
  call {:cexpr "c"} boogie_si_record_i16($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i16.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 786, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i16($i44);
  call {:cexpr "c"} boogie_si_record_i16($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 787, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !(($i39 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i16.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 785, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i41 == 1));
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 788, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 795, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i16.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 800, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i16($i76);
  call {:cexpr "a"} boogie_si_record_i16($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i16.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, $i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 801, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  call {:cexpr "a"} boogie_si_record_i16($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 802, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i16($i83);
  call {:cexpr "b"} boogie_si_record_i16($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i16.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86, $i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 803, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i16($i87);
  call {:cexpr "b"} boogie_si_record_i16($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i16.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90, $i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 805, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i16($i91);
  call {:cexpr "c"} boogie_si_record_i16($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i16.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 797, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i16($i73);
  call {:cexpr "c"} boogie_si_record_i16($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 798, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !(($i68 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i16.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 796, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i70 == 1));
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 799, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 806, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i94 == 1));
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i16.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 811, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i16($i105);
  call {:cexpr "a"} boogie_si_record_i16($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i16.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108, $i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 812, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i16($i109);
  call {:cexpr "a"} boogie_si_record_i16($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 813, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i16($i112);
  call {:cexpr "b"} boogie_si_record_i16($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i16.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115, $i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 814, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i16($i116);
  call {:cexpr "b"} boogie_si_record_i16($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i16.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119, $i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 816, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i16($i120);
  call {:cexpr "c"} boogie_si_record_i16($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i16.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 808, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i16($i102);
  call {:cexpr "c"} boogie_si_record_i16($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 809, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !(($i97 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i16.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 807, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i99 == 1));
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 810, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 817, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i123 == 1));
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i16.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 822, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i16($i134);
  call {:cexpr "a"} boogie_si_record_i16($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i16.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137, $i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 823, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i16($i138);
  call {:cexpr "a"} boogie_si_record_i16($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 824, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i16($i141);
  call {:cexpr "b"} boogie_si_record_i16($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i16.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144, $i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 825, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i16($i145);
  call {:cexpr "b"} boogie_si_record_i16($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i16.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148, $i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 827, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i16($i149);
  call {:cexpr "c"} boogie_si_record_i16($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i16.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 819, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i16($i131);
  call {:cexpr "c"} boogie_si_record_i16($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 820, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !(($i126 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i16.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 818, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i128 == 1));
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 821, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 828, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i152 == 1));
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i16.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 833, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i16($i163);
  call {:cexpr "a"} boogie_si_record_i16($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i16.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166, $i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 834, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i16($i167);
  call {:cexpr "a"} boogie_si_record_i16($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 835, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i16($i170);
  call {:cexpr "b"} boogie_si_record_i16($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i16.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173, $i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 836, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i16($i174);
  call {:cexpr "b"} boogie_si_record_i16($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i16.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177, $i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 838, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i16($i178);
  call {:cexpr "c"} boogie_si_record_i16($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i16.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 830, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i16($i160);
  call {:cexpr "c"} boogie_si_record_i16($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 831, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !(($i155 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i16.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 829, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i157 == 1));
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 832, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 839, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i181 == 1));
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i16.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 844, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i16($i192);
  call {:cexpr "a"} boogie_si_record_i16($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i16.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195, $i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 845, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i16($i196);
  call {:cexpr "a"} boogie_si_record_i16($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 846, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i16($i199);
  call {:cexpr "b"} boogie_si_record_i16($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i16.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202, $i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 847, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i16($i203);
  call {:cexpr "b"} boogie_si_record_i16($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i16.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206, $i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 849, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i16($i207);
  call {:cexpr "c"} boogie_si_record_i16($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i16.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 841, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i16($i189);
  call {:cexpr "c"} boogie_si_record_i16($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 842, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !(($i184 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i16.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 840, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i186 == 1));
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 843, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 850, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i210 == 1));
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i16.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i32($i220, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 855, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i32.i16($i221);
  call {:cexpr "a"} boogie_si_record_i16($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 8} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i16.i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i225 := $add.i32($i224, $i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 856, 5} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i32.i16($i225);
  call {:cexpr "a"} boogie_si_record_i16($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i227 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $srem.i32($i227, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 857, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $trunc.i32.i16($i228);
  call {:cexpr "b"} boogie_si_record_i16($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 8} true;
  assume {:verifier.code 0} true;
  $i230 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i16.i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $add.i32($i231, $i230);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 858, 5} true;
  assume {:verifier.code 0} true;
  $i233 := $trunc.i32.i16($i232);
  call {:cexpr "b"} boogie_si_record_i16($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 8} true;
  assume {:verifier.code 0} true;
  $i234 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i16.i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i32($i235, $i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 860, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i32.i16($i236);
  call {:cexpr "c"} boogie_si_record_i16($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $slt.i32($i238, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $i237;
  assume {:branchcond $i239} true;
  goto $bb73, $bb74;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i16.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 852, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i16($i218);
  call {:cexpr "c"} boogie_si_record_i16($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 853, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !(($i213 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i16.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 851, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i215 == 1));
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 854, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
$bb73:
  assume ($i239 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i241 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 11} true;
  assume {:verifier.code 0} true;
  $i242 := $slt.i32($i241, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb76, $bb78;
$bb74:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 861, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i239 == 1));
  goto $bb75;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i16.i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 9} true;
  assume {:verifier.code 0} true;
  $i250 := $srem.i32($i249, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 866, 7} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i32.i16($i250);
  call {:cexpr "a"} boogie_si_record_i16($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 8} true;
  assume {:verifier.code 0} true;
  $i252 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i16.i32($i251);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $add.i32($i253, $i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 867, 5} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i32.i16($i254);
  call {:cexpr "a"} boogie_si_record_i16($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 9} true;
  assume {:verifier.code 0} true;
  $i257 := $srem.i32($i256, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 868, 7} true;
  assume {:verifier.code 0} true;
  $i258 := $trunc.i32.i16($i257);
  call {:cexpr "b"} boogie_si_record_i16($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 8} true;
  assume {:verifier.code 0} true;
  $i259 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i260 := $sext.i16.i32($i258);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i32($i260, $i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 869, 5} true;
  assume {:verifier.code 0} true;
  $i262 := $trunc.i32.i16($i261);
  call {:cexpr "b"} boogie_si_record_i16($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 8} true;
  assume {:verifier.code 0} true;
  $i263 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $sext.i16.i32($i240);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i265 := $add.i32($i264, $i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 871, 5} true;
  assume {:verifier.code 0} true;
  $i266 := $trunc.i32.i16($i265);
  call {:cexpr "c"} boogie_si_record_i16($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 9} true;
  assume {:verifier.code 0} true;
  $i268 := $slt.i32($i267, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $i266;
  assume {:branchcond $i268} true;
  goto $bb82, $bb83;
$bb76:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 15} true;
  assume {:verifier.code 0} true;
  assume ($i242 == 1);
  goto $bb77;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i246 := $sext.i16.i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i32($i246, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 863, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $trunc.i32.i16($i247);
  call {:cexpr "c"} boogie_si_record_i16($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 864, 5} true;
  assume {:verifier.code 0} true;
  $i245 := $i248;
  goto $bb81;
$bb78:
  assume !(($i242 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 18} true;
  assume {:verifier.code 0} true;
  $i243 := $sext.i16.i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 20} true;
  assume {:verifier.code 0} true;
  $i244 := $sgt.i32($i243, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  $i245 := $i237;
  assume {:branchcond $i244} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume ($i244 == 1);
  goto $bb77;
$bb80:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 862, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i244 == 1));
  goto $bb81;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 865, 3} true;
  assume {:verifier.code 0} true;
  $i240 := $i245;
  goto $bb75;
$bb82:
  assume ($i268 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 11} true;
  assume {:verifier.code 0} true;
  $i271 := $slt.i32($i270, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i271} true;
  goto $bb85, $bb87;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 872, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i268 == 1));
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $sext.i16.i32($i255);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 9} true;
  assume {:verifier.code 0} true;
  $i279 := $srem.i32($i278, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 877, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $trunc.i32.i16($i279);
  call {:cexpr "a"} boogie_si_record_i16($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 8} true;
  assume {:verifier.code 0} true;
  $i281 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i282 := $sext.i16.i32($i280);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i282, $i281);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 878, 5} true;
  assume {:verifier.code 0} true;
  $i284 := $trunc.i32.i16($i283);
  call {:cexpr "a"} boogie_si_record_i16($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 9} true;
  assume {:verifier.code 0} true;
  $i286 := $srem.i32($i285, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 879, 7} true;
  assume {:verifier.code 0} true;
  $i287 := $trunc.i32.i16($i286);
  call {:cexpr "b"} boogie_si_record_i16($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 8} true;
  assume {:verifier.code 0} true;
  $i288 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i289 := $sext.i16.i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i290 := $add.i32($i289, $i288);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 880, 5} true;
  assume {:verifier.code 0} true;
  $i291 := $trunc.i32.i16($i290);
  call {:cexpr "b"} boogie_si_record_i16($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 8} true;
  assume {:verifier.code 0} true;
  $i292 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i293 := $sext.i16.i32($i269);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i293, $i292);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 882, 5} true;
  assume {:verifier.code 0} true;
  $i295 := $trunc.i32.i16($i294);
  call {:cexpr "c"} boogie_si_record_i16($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 9} true;
  assume {:verifier.code 0} true;
  $i297 := $slt.i32($i296, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $i295;
  assume {:branchcond $i297} true;
  goto $bb91, $bb92;
$bb85:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 15} true;
  assume {:verifier.code 0} true;
  assume ($i271 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i275 := $sext.i16.i32($i266);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i276 := $add.i32($i275, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 874, 9} true;
  assume {:verifier.code 0} true;
  $i277 := $trunc.i32.i16($i276);
  call {:cexpr "c"} boogie_si_record_i16($i277);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 875, 5} true;
  assume {:verifier.code 0} true;
  $i274 := $i277;
  goto $bb90;
$bb87:
  assume !(($i271 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 18} true;
  assume {:verifier.code 0} true;
  $i272 := $sext.i16.i32($i262);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 20} true;
  assume {:verifier.code 0} true;
  $i273 := $sgt.i32($i272, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  $i274 := $i266;
  assume {:branchcond $i273} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume ($i273 == 1);
  goto $bb86;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 873, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i273 == 1));
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 876, 3} true;
  assume {:verifier.code 0} true;
  $i269 := $i274;
  goto $bb84;
$bb91:
  assume ($i297 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 11} true;
  assume {:verifier.code 0} true;
  $i300 := $slt.i32($i299, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb94, $bb96;
$bb92:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 883, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i297 == 1));
  goto $bb93;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i307 := $sext.i16.i32($i284);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 9} true;
  assume {:verifier.code 0} true;
  $i308 := $srem.i32($i307, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 888, 7} true;
  assume {:verifier.code 0} true;
  $i309 := $trunc.i32.i16($i308);
  call {:cexpr "a"} boogie_si_record_i16($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 8} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i311 := $sext.i16.i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311, $i310);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 889, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $trunc.i32.i16($i312);
  call {:cexpr "a"} boogie_si_record_i16($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i32($i314, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 890, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i16($i315);
  call {:cexpr "b"} boogie_si_record_i16($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 8} true;
  assume {:verifier.code 0} true;
  $i317 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i318 := $sext.i16.i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i318, $i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 891, 5} true;
  assume {:verifier.code 0} true;
  $i320 := $trunc.i32.i16($i319);
  call {:cexpr "b"} boogie_si_record_i16($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 8} true;
  assume {:verifier.code 0} true;
  $i321 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i322 := $sext.i16.i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i322, $i321);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 893, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $trunc.i32.i16($i323);
  call {:cexpr "c"} boogie_si_record_i16($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $slt.i32($i325, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $i324;
  assume {:branchcond $i326} true;
  goto $bb100, $bb101;
$bb94:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 15} true;
  assume {:verifier.code 0} true;
  assume ($i300 == 1);
  goto $bb95;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i304 := $sext.i16.i32($i295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i305 := $add.i32($i304, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 885, 9} true;
  assume {:verifier.code 0} true;
  $i306 := $trunc.i32.i16($i305);
  call {:cexpr "c"} boogie_si_record_i16($i306);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 886, 5} true;
  assume {:verifier.code 0} true;
  $i303 := $i306;
  goto $bb99;
$bb96:
  assume !(($i300 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 18} true;
  assume {:verifier.code 0} true;
  $i301 := $sext.i16.i32($i291);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 20} true;
  assume {:verifier.code 0} true;
  $i302 := $sgt.i32($i301, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $i295;
  assume {:branchcond $i302} true;
  goto $bb97, $bb98;
$bb97:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume ($i302 == 1);
  goto $bb95;
$bb98:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 884, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i302 == 1));
  goto $bb99;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 887, 3} true;
  assume {:verifier.code 0} true;
  $i298 := $i303;
  goto $bb93;
$bb100:
  assume ($i326 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i328 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 11} true;
  assume {:verifier.code 0} true;
  $i329 := $slt.i32($i328, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i329} true;
  goto $bb103, $bb105;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 894, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i326 == 1));
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i336 := $sext.i16.i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 9} true;
  assume {:verifier.code 0} true;
  $i337 := $srem.i32($i336, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 899, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $trunc.i32.i16($i337);
  call {:cexpr "a"} boogie_si_record_i16($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 8} true;
  assume {:verifier.code 0} true;
  $i339 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i16.i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i341 := $add.i32($i340, $i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 900, 5} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i32.i16($i341);
  call {:cexpr "a"} boogie_si_record_i16($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 9} true;
  assume {:verifier.code 0} true;
  $i344 := $srem.i32($i343, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 901, 7} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i32.i16($i344);
  call {:cexpr "b"} boogie_si_record_i16($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 8} true;
  assume {:verifier.code 0} true;
  $i346 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $sext.i16.i32($i345);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i348 := $add.i32($i347, $i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 902, 5} true;
  assume {:verifier.code 0} true;
  $i349 := $trunc.i32.i16($i348);
  call {:cexpr "b"} boogie_si_record_i16($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 8} true;
  assume {:verifier.code 0} true;
  $i350 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i351 := $sext.i16.i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i352 := $add.i32($i351, $i350);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 904, 5} true;
  assume {:verifier.code 0} true;
  $i353 := $trunc.i32.i16($i352);
  call {:cexpr "c"} boogie_si_record_i16($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i354 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 9} true;
  assume {:verifier.code 0} true;
  $i355 := $slt.i32($i354, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $i353;
  assume {:branchcond $i355} true;
  goto $bb109, $bb110;
$bb103:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 15} true;
  assume {:verifier.code 0} true;
  assume ($i329 == 1);
  goto $bb104;
$bb104:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $sext.i16.i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i333, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 896, 9} true;
  assume {:verifier.code 0} true;
  $i335 := $trunc.i32.i16($i334);
  call {:cexpr "c"} boogie_si_record_i16($i335);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 897, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $i335;
  goto $bb108;
$bb105:
  assume !(($i329 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 18} true;
  assume {:verifier.code 0} true;
  $i330 := $sext.i16.i32($i320);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 20} true;
  assume {:verifier.code 0} true;
  $i331 := $sgt.i32($i330, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  $i332 := $i324;
  assume {:branchcond $i331} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume ($i331 == 1);
  goto $bb104;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 895, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i331 == 1));
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 898, 3} true;
  assume {:verifier.code 0} true;
  $i327 := $i332;
  goto $bb102;
$bb109:
  assume ($i355 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i357 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 11} true;
  assume {:verifier.code 0} true;
  $i358 := $slt.i32($i357, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i358} true;
  goto $bb112, $bb114;
$bb110:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 905, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i355 == 1));
  goto $bb111;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i365 := $sext.i16.i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 9} true;
  assume {:verifier.code 0} true;
  $i366 := $srem.i32($i365, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 910, 7} true;
  assume {:verifier.code 0} true;
  $i367 := $trunc.i32.i16($i366);
  call {:cexpr "a"} boogie_si_record_i16($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 8} true;
  assume {:verifier.code 0} true;
  $i368 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $sext.i16.i32($i367);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i370 := $add.i32($i369, $i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 911, 5} true;
  assume {:verifier.code 0} true;
  $i371 := $trunc.i32.i16($i370);
  call {:cexpr "a"} boogie_si_record_i16($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 9} true;
  assume {:verifier.code 0} true;
  $i373 := $srem.i32($i372, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 912, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $trunc.i32.i16($i373);
  call {:cexpr "b"} boogie_si_record_i16($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 8} true;
  assume {:verifier.code 0} true;
  $i375 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i376 := $sext.i16.i32($i374);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i376, $i375);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 913, 5} true;
  assume {:verifier.code 0} true;
  $i378 := $trunc.i32.i16($i377);
  call {:cexpr "b"} boogie_si_record_i16($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 8} true;
  assume {:verifier.code 0} true;
  $i379 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i380 := $sext.i16.i32($i356);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i381 := $add.i32($i380, $i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 915, 5} true;
  assume {:verifier.code 0} true;
  $i382 := $trunc.i32.i16($i381);
  call {:cexpr "c"} boogie_si_record_i16($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 9} true;
  assume {:verifier.code 0} true;
  $i384 := $slt.i32($i383, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $i382;
  assume {:branchcond $i384} true;
  goto $bb118, $bb119;
$bb112:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 15} true;
  assume {:verifier.code 0} true;
  assume ($i358 == 1);
  goto $bb113;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i362 := $sext.i16.i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $add.i32($i362, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 907, 9} true;
  assume {:verifier.code 0} true;
  $i364 := $trunc.i32.i16($i363);
  call {:cexpr "c"} boogie_si_record_i16($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 908, 5} true;
  assume {:verifier.code 0} true;
  $i361 := $i364;
  goto $bb117;
$bb114:
  assume !(($i358 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 18} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i16.i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 20} true;
  assume {:verifier.code 0} true;
  $i360 := $sgt.i32($i359, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  $i361 := $i353;
  assume {:branchcond $i360} true;
  goto $bb115, $bb116;
$bb115:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume ($i360 == 1);
  goto $bb113;
$bb116:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 906, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i360 == 1));
  goto $bb117;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 909, 3} true;
  assume {:verifier.code 0} true;
  $i356 := $i361;
  goto $bb111;
$bb118:
  assume ($i384 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 11} true;
  assume {:verifier.code 0} true;
  $i387 := $slt.i32($i386, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i387} true;
  goto $bb121, $bb123;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 916, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i384 == 1));
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $sext.i16.i32($i371);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 9} true;
  assume {:verifier.code 0} true;
  $i395 := $srem.i32($i394, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 921, 7} true;
  assume {:verifier.code 0} true;
  $i396 := $trunc.i32.i16($i395);
  call {:cexpr "a"} boogie_si_record_i16($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 8} true;
  assume {:verifier.code 0} true;
  $i397 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i398 := $sext.i16.i32($i396);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i398, $i397);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 922, 5} true;
  assume {:verifier.code 0} true;
  $i400 := $trunc.i32.i16($i399);
  call {:cexpr "a"} boogie_si_record_i16($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i401 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 9} true;
  assume {:verifier.code 0} true;
  $i402 := $srem.i32($i401, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 923, 7} true;
  assume {:verifier.code 0} true;
  $i403 := $trunc.i32.i16($i402);
  call {:cexpr "b"} boogie_si_record_i16($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 8} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i405 := $sext.i16.i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i406 := $add.i32($i405, $i404);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 924, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $trunc.i32.i16($i406);
  call {:cexpr "b"} boogie_si_record_i16($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 8} true;
  assume {:verifier.code 0} true;
  $i408 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i409 := $sext.i16.i32($i385);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i32($i409, $i408);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 926, 5} true;
  assume {:verifier.code 0} true;
  $i411 := $trunc.i32.i16($i410);
  call {:cexpr "c"} boogie_si_record_i16($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i412 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 9} true;
  assume {:verifier.code 0} true;
  $i413 := $slt.i32($i412, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  $i414 := $i411;
  assume {:branchcond $i413} true;
  goto $bb127, $bb128;
$bb121:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 15} true;
  assume {:verifier.code 0} true;
  assume ($i387 == 1);
  goto $bb122;
$bb122:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i391 := $sext.i16.i32($i382);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i391, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 918, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $trunc.i32.i16($i392);
  call {:cexpr "c"} boogie_si_record_i16($i393);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 919, 5} true;
  assume {:verifier.code 0} true;
  $i390 := $i393;
  goto $bb126;
$bb123:
  assume !(($i387 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 18} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i16.i32($i378);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 20} true;
  assume {:verifier.code 0} true;
  $i389 := $sgt.i32($i388, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $i382;
  assume {:branchcond $i389} true;
  goto $bb124, $bb125;
$bb124:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume ($i389 == 1);
  goto $bb122;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 917, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i389 == 1));
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 920, 3} true;
  assume {:verifier.code 0} true;
  $i385 := $i390;
  goto $bb120;
$bb127:
  assume ($i413 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 11} true;
  assume {:verifier.code 0} true;
  $i416 := $slt.i32($i415, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i416} true;
  goto $bb130, $bb132;
$bb128:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 927, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i413 == 1));
  goto $bb129;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i423 := $sext.i16.i32($i400);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 9} true;
  assume {:verifier.code 0} true;
  $i424 := $srem.i32($i423, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 932, 7} true;
  assume {:verifier.code 0} true;
  $i425 := $trunc.i32.i16($i424);
  call {:cexpr "a"} boogie_si_record_i16($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 8} true;
  assume {:verifier.code 0} true;
  $i426 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i427 := $sext.i16.i32($i425);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i427, $i426);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 933, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $trunc.i32.i16($i428);
  call {:cexpr "a"} boogie_si_record_i16($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i32($i430, 32768);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 934, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i32.i16($i431);
  call {:cexpr "b"} boogie_si_record_i16($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 8} true;
  assume {:verifier.code 0} true;
  $i433 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i16.i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i435 := $add.i32($i434, $i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 935, 5} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i32.i16($i435);
  call {:cexpr "b"} boogie_si_record_i16($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 8} true;
  assume {:verifier.code 0} true;
  $i437 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i438 := $sext.i16.i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i438, $i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 937, 5} true;
  assume {:verifier.code 0} true;
  $i440 := $trunc.i32.i16($i439);
  call {:cexpr "c"} boogie_si_record_i16($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i441 := $sext.i16.i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 9} true;
  assume {:verifier.code 0} true;
  $i442 := $slt.i32($i441, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $i440;
  assume {:branchcond $i442} true;
  goto $bb136, $bb137;
$bb130:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 15} true;
  assume {:verifier.code 0} true;
  assume ($i416 == 1);
  goto $bb131;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $sext.i16.i32($i411);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i421 := $add.i32($i420, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 929, 9} true;
  assume {:verifier.code 0} true;
  $i422 := $trunc.i32.i16($i421);
  call {:cexpr "c"} boogie_si_record_i16($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 930, 5} true;
  assume {:verifier.code 0} true;
  $i419 := $i422;
  goto $bb135;
$bb132:
  assume !(($i416 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 18} true;
  assume {:verifier.code 0} true;
  $i417 := $sext.i16.i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 20} true;
  assume {:verifier.code 0} true;
  $i418 := $sgt.i32($i417, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $i411;
  assume {:branchcond $i418} true;
  goto $bb133, $bb134;
$bb133:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume ($i418 == 1);
  goto $bb131;
$bb134:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 928, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i418 == 1));
  goto $bb135;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 931, 3} true;
  assume {:verifier.code 0} true;
  $i414 := $i419;
  goto $bb129;
$bb136:
  assume ($i442 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i444 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 11} true;
  assume {:verifier.code 0} true;
  $i445 := $slt.i32($i444, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i445} true;
  goto $bb139, $bb141;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 938, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i442 == 1));
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 948, 3} true;
  assume {:verifier.code 0} true;
  $r := $i443;
  $exn := false;
  return;
$bb139:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 15} true;
  assume {:verifier.code 0} true;
  assume ($i445 == 1);
  goto $bb140;
$bb140:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i16.i32($i440);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $add.i32($i449, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 940, 9} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i32.i16($i450);
  call {:cexpr "c"} boogie_si_record_i16($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 941, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $i451;
  goto $bb144;
$bb141:
  assume !(($i445 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 18} true;
  assume {:verifier.code 0} true;
  $i446 := $sext.i16.i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 20} true;
  assume {:verifier.code 0} true;
  $i447 := $sgt.i32($i446, 32767);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  $i448 := $i440;
  assume {:branchcond $i447} true;
  goto $bb142, $bb143;
$bb142:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume ($i447 == 1);
  goto $bb140;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 939, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i447 == 1));
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 942, 3} true;
  assume {:verifier.code 0} true;
  $i443 := $i448;
  goto $bb138;
}
const __SMACK_and8: ref;
axiom (__SMACK_and8 == $sub.ref(0, 218768));
procedure {:inline 1} __SMACK_and8($i0: i8, $i1: i8)
  returns ($r: i8)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $i13: i8;
  var $i8: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $i42: i8;
  var $i37: i8;
  var $i46: i32;
  var $i47: i32;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i8;
  var $i53: i32;
  var $i54: i32;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i8;
  var $i64: i32;
  var $i65: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i8;
  var $i71: i8;
  var $i66: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i8;
  var $i82: i32;
  var $i83: i32;
  var $i84: i8;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i8;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i8;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i8;
  var $i100: i8;
  var $i95: i8;
  var $i104: i32;
  var $i105: i32;
  var $i106: i8;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i8;
  var $i111: i32;
  var $i112: i32;
  var $i113: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i8;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i8;
  var $i122: i32;
  var $i123: i1;
  var $i125: i32;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i130: i32;
  var $i131: i32;
  var $i132: i8;
  var $i129: i8;
  var $i124: i8;
  var $i133: i32;
  var $i134: i32;
  var $i135: i8;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i8;
  var $i140: i32;
  var $i141: i32;
  var $i142: i8;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i8;
  var $i151: i32;
  var $i152: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i8;
  var $i158: i8;
  var $i153: i8;
  var $i162: i32;
  var $i163: i32;
  var $i164: i8;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i8;
  var $i169: i32;
  var $i170: i32;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i8;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i8;
  var $i180: i32;
  var $i181: i1;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i8;
  var $i187: i8;
  var $i182: i8;
  var $i191: i32;
  var $i192: i32;
  var $i193: i8;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i8;
  var $i198: i32;
  var $i199: i32;
  var $i200: i8;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i8;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $i208: i8;
  var $i209: i32;
  var $i210: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i217: i32;
  var $i218: i32;
  var $i219: i8;
  var $i216: i8;
  var $i211: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_and8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_and8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i8.i32(0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3, $i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 954, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  call {:cexpr "c"} boogie_si_record_i8($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i5;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i9, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb6;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 955, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $srem.i32($i17, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 960, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  call {:cexpr "a"} boogie_si_record_i8($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i8.i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21, $i20);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 961, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  call {:cexpr "a"} boogie_si_record_i8($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $srem.i32($i24, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 962, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  call {:cexpr "b"} boogie_si_record_i8($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 8} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i8.i32($i26);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28, $i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 963, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  call {:cexpr "b"} boogie_si_record_i8($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 8} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i8.i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i32, $i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 965, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i8($i33);
  call {:cexpr "c"} boogie_si_record_i8($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i35, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i34;
  assume {:branchcond $i36} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 15} true;
  assume {:verifier.code 0} true;
  assume ($i10 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i8.i32($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i14, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 957, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  call {:cexpr "c"} boogie_si_record_i8($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 958, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb9;
$bb6:
  assume !(($i10 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $sgt.i32($i11, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb5;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 956, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb9;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 959, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb10:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb13, $bb15;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 966, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i8.i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $srem.i32($i46, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 971, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  call {:cexpr "a"} boogie_si_record_i8($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i8.i32($i48);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50, $i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 972, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  call {:cexpr "a"} boogie_si_record_i8($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $srem.i32($i53, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 973, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  call {:cexpr "b"} boogie_si_record_i8($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 8} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i8.i32($i55);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57, $i56);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 974, 5} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  call {:cexpr "b"} boogie_si_record_i8($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i8.i32($i37);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61, $i60);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 976, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  call {:cexpr "c"} boogie_si_record_i8($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i63;
  assume {:branchcond $i65} true;
  goto $bb19, $bb20;
$bb13:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 15} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i8.i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 968, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  call {:cexpr "c"} boogie_si_record_i8($i45);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 969, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $i45;
  goto $bb18;
$bb15:
  assume !(($i39 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i8.i32($i30);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 20} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i34;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb14;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 967, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i41 == 1));
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 970, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i42;
  goto $bb12;
$bb19:
  assume ($i65 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i67, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb24;
$bb20:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 977, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb21;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i8.i32($i52);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 9} true;
  assume {:verifier.code 0} true;
  $i76 := $srem.i32($i75, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 982, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  call {:cexpr "a"} boogie_si_record_i8($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i8.i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, $i78);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 983, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i8($i80);
  call {:cexpr "a"} boogie_si_record_i8($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $srem.i32($i82, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 984, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i32.i8($i83);
  call {:cexpr "b"} boogie_si_record_i8($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 8} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i8.i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86, $i85);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 985, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  call {:cexpr "b"} boogie_si_record_i8($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 8} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i8.i32($i66);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90, $i89);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 987, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i8($i91);
  call {:cexpr "c"} boogie_si_record_i8($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $slt.i32($i93, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $i92;
  assume {:branchcond $i94} true;
  goto $bb28, $bb29;
$bb22:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 15} true;
  assume {:verifier.code 0} true;
  assume ($i68 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i8.i32($i63);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 979, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i8($i73);
  call {:cexpr "c"} boogie_si_record_i8($i74);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 980, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i74;
  goto $bb27;
$bb24:
  assume !(($i68 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i8.i32($i59);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 978, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i70 == 1));
  goto $bb27;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 981, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i71;
  goto $bb21;
$bb28:
  assume ($i94 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb31, $bb33;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 988, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i94 == 1));
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i8.i32($i81);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i32($i104, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 993, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i8($i105);
  call {:cexpr "a"} boogie_si_record_i8($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i8.i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108, $i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 994, 5} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i8($i109);
  call {:cexpr "a"} boogie_si_record_i8($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $srem.i32($i111, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 995, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i8($i112);
  call {:cexpr "b"} boogie_si_record_i8($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i8.i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i115, $i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 996, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i32.i8($i116);
  call {:cexpr "b"} boogie_si_record_i8($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i8.i32($i95);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i119, $i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 998, 5} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  call {:cexpr "c"} boogie_si_record_i8($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i122 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i122, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $i121;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb31:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 15} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb32;
$bb32:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i8.i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 990, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i8($i102);
  call {:cexpr "c"} boogie_si_record_i8($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 991, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i103;
  goto $bb36;
$bb33:
  assume !(($i97 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 18} true;
  assume {:verifier.code 0} true;
  $i98 := $sext.i8.i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 20} true;
  assume {:verifier.code 0} true;
  $i99 := $sgt.i32($i98, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $i92;
  assume {:branchcond $i99} true;
  goto $bb34, $bb35;
$bb34:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb32;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 989, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i99 == 1));
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 992, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i100;
  goto $bb30;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i125, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb40, $bb42;
$bb38:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 999, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i123 == 1));
  goto $bb39;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i8.i32($i110);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $srem.i32($i133, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1004, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i8($i134);
  call {:cexpr "a"} boogie_si_record_i8($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 8} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i8.i32($i135);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137, $i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1005, 5} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i138);
  call {:cexpr "a"} boogie_si_record_i8($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $srem.i32($i140, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1006, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i8($i141);
  call {:cexpr "b"} boogie_si_record_i8($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 8} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i8.i32($i142);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i32($i144, $i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1007, 5} true;
  assume {:verifier.code 0} true;
  $i146 := $trunc.i32.i8($i145);
  call {:cexpr "b"} boogie_si_record_i8($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 8} true;
  assume {:verifier.code 0} true;
  $i147 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $sext.i8.i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $add.i32($i148, $i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1009, 5} true;
  assume {:verifier.code 0} true;
  $i150 := $trunc.i32.i8($i149);
  call {:cexpr "c"} boogie_si_record_i8($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i150;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb40:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 15} true;
  assume {:verifier.code 0} true;
  assume ($i126 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i8.i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $add.i32($i130, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1001, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i8($i131);
  call {:cexpr "c"} boogie_si_record_i8($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1002, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $i132;
  goto $bb45;
$bb42:
  assume !(($i126 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i8.i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i127, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  $i129 := $i121;
  assume {:branchcond $i128} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb41;
$bb44:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1000, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i128 == 1));
  goto $bb45;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1003, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i129;
  goto $bb39;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $slt.i32($i154, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb49, $bb51;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i152 == 1));
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i8.i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $srem.i32($i162, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1015, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $trunc.i32.i8($i163);
  call {:cexpr "a"} boogie_si_record_i8($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 8} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i8.i32($i164);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i166, $i165);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1016, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i8($i167);
  call {:cexpr "a"} boogie_si_record_i8($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $srem.i32($i169, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1017, 7} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i8($i170);
  call {:cexpr "b"} boogie_si_record_i8($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 8} true;
  assume {:verifier.code 0} true;
  $i172 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i8.i32($i171);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i173, $i172);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1018, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i8($i174);
  call {:cexpr "b"} boogie_si_record_i8($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 8} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i8.i32($i153);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i177, $i176);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1020, 5} true;
  assume {:verifier.code 0} true;
  $i179 := $trunc.i32.i8($i178);
  call {:cexpr "c"} boogie_si_record_i8($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 9} true;
  assume {:verifier.code 0} true;
  $i181 := $slt.i32($i180, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  $i182 := $i179;
  assume {:branchcond $i181} true;
  goto $bb55, $bb56;
$bb49:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 15} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb50;
$bb50:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i8.i32($i150);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $add.i32($i159, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1012, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i32.i8($i160);
  call {:cexpr "c"} boogie_si_record_i8($i161);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1013, 5} true;
  assume {:verifier.code 0} true;
  $i158 := $i161;
  goto $bb54;
$bb51:
  assume !(($i155 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i8.i32($i146);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 20} true;
  assume {:verifier.code 0} true;
  $i157 := $sgt.i32($i156, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  $i158 := $i150;
  assume {:branchcond $i157} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume ($i157 == 1);
  goto $bb50;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i157 == 1));
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1014, 3} true;
  assume {:verifier.code 0} true;
  $i153 := $i158;
  goto $bb48;
$bb55:
  assume ($i181 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 11} true;
  assume {:verifier.code 0} true;
  $i184 := $slt.i32($i183, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb58, $bb60;
$bb56:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1021, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i181 == 1));
  goto $bb57;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i8.i32($i168);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 9} true;
  assume {:verifier.code 0} true;
  $i192 := $srem.i32($i191, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1026, 7} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i8($i192);
  call {:cexpr "a"} boogie_si_record_i8($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 8} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i8.i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i195, $i194);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1027, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i8($i196);
  call {:cexpr "a"} boogie_si_record_i8($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i198 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $srem.i32($i198, 128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1028, 7} true;
  assume {:verifier.code 0} true;
  $i200 := $trunc.i32.i8($i199);
  call {:cexpr "b"} boogie_si_record_i8($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 8} true;
  assume {:verifier.code 0} true;
  $i201 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i8.i32($i200);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i202, $i201);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1029, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $trunc.i32.i8($i203);
  call {:cexpr "b"} boogie_si_record_i8($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 8} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i8.i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206, $i205);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1031, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i8($i207);
  call {:cexpr "c"} boogie_si_record_i8($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i8.i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $slt.i32($i209, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $i208;
  assume {:branchcond $i210} true;
  goto $bb64, $bb65;
$bb58:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 15} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $sext.i8.i32($i179);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1023, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i8($i189);
  call {:cexpr "c"} boogie_si_record_i8($i190);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1024, 5} true;
  assume {:verifier.code 0} true;
  $i187 := $i190;
  goto $bb63;
$bb60:
  assume !(($i184 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 18} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i8.i32($i175);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 20} true;
  assume {:verifier.code 0} true;
  $i186 := $sgt.i32($i185, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $i179;
  assume {:branchcond $i186} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume ($i186 == 1);
  goto $bb59;
$bb62:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1022, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i186 == 1));
  goto $bb63;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1025, 3} true;
  assume {:verifier.code 0} true;
  $i182 := $i187;
  goto $bb57;
$bb64:
  assume ($i210 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i212 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i212, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb67, $bb69;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1032, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i210 == 1));
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1042, 3} true;
  assume {:verifier.code 0} true;
  $r := $i211;
  $exn := false;
  return;
$bb67:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 15} true;
  assume {:verifier.code 0} true;
  assume ($i213 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i8.i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i217, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1034, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $trunc.i32.i8($i218);
  call {:cexpr "c"} boogie_si_record_i8($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1035, 5} true;
  assume {:verifier.code 0} true;
  $i216 := $i219;
  goto $bb72;
$bb69:
  assume !(($i213 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 18} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i8.i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $sgt.i32($i214, 127);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $i208;
  assume {:branchcond $i215} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb68;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1033, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i215 == 1));
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1036, 3} true;
  assume {:verifier.code 0} true;
  $i211 := $i216;
  goto $bb66;
}
const __SMACK_or32: ref;
axiom (__SMACK_or32 == $sub.ref(0, 219800));
procedure {:inline 1} __SMACK_or32($i0: i32, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i5: i32;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i1;
  var $i23: i32;
  var $i22: i32;
  var $i20: i32;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i36: i1;
  var $i38: i32;
  var $i37: i32;
  var $i35: i32;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $i42: i32;
  var $i43: i32;
  var $i44: i64;
  var $i45: i64;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i51: i1;
  var $i53: i32;
  var $i52: i32;
  var $i50: i32;
  var $i54: i32;
  var $i55: i64;
  var $i56: i64;
  var $i57: i32;
  var $i58: i32;
  var $i59: i64;
  var $i60: i64;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i66: i1;
  var $i68: i32;
  var $i67: i32;
  var $i65: i32;
  var $i69: i32;
  var $i70: i64;
  var $i71: i64;
  var $i72: i32;
  var $i73: i32;
  var $i74: i64;
  var $i75: i64;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i79: i32;
  var $i81: i1;
  var $i83: i32;
  var $i82: i32;
  var $i80: i32;
  var $i84: i32;
  var $i85: i64;
  var $i86: i64;
  var $i87: i32;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i96: i1;
  var $i98: i32;
  var $i97: i32;
  var $i95: i32;
  var $i99: i32;
  var $i100: i64;
  var $i101: i64;
  var $i102: i32;
  var $i103: i32;
  var $i104: i64;
  var $i105: i64;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i109: i32;
  var $i111: i1;
  var $i113: i32;
  var $i112: i32;
  var $i110: i32;
  var $i114: i32;
  var $i115: i64;
  var $i116: i64;
  var $i117: i32;
  var $i118: i32;
  var $i119: i64;
  var $i120: i64;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
  var $i124: i32;
  var $i126: i1;
  var $i128: i32;
  var $i127: i32;
  var $i125: i32;
  var $i129: i32;
  var $i130: i64;
  var $i131: i64;
  var $i132: i32;
  var $i133: i32;
  var $i134: i64;
  var $i135: i64;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i139: i32;
  var $i141: i1;
  var $i143: i32;
  var $i142: i32;
  var $i140: i32;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $i147: i32;
  var $i148: i32;
  var $i149: i64;
  var $i150: i64;
  var $i151: i32;
  var $i152: i32;
  var $i153: i1;
  var $i154: i32;
  var $i156: i1;
  var $i158: i32;
  var $i157: i32;
  var $i155: i32;
  var $i159: i32;
  var $i160: i64;
  var $i161: i64;
  var $i162: i32;
  var $i163: i32;
  var $i164: i64;
  var $i165: i64;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i169: i32;
  var $i171: i1;
  var $i173: i32;
  var $i172: i32;
  var $i170: i32;
  var $i174: i32;
  var $i175: i64;
  var $i176: i64;
  var $i177: i32;
  var $i178: i32;
  var $i179: i64;
  var $i180: i64;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i184: i32;
  var $i186: i1;
  var $i188: i32;
  var $i187: i32;
  var $i185: i32;
  var $i189: i32;
  var $i190: i64;
  var $i191: i64;
  var $i192: i32;
  var $i193: i32;
  var $i194: i64;
  var $i195: i64;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i199: i32;
  var $i201: i1;
  var $i203: i32;
  var $i202: i32;
  var $i200: i32;
  var $i204: i32;
  var $i205: i64;
  var $i206: i64;
  var $i207: i32;
  var $i208: i32;
  var $i209: i64;
  var $i210: i64;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i216: i1;
  var $i218: i32;
  var $i217: i32;
  var $i215: i32;
  var $i219: i32;
  var $i220: i64;
  var $i221: i64;
  var $i222: i32;
  var $i223: i32;
  var $i224: i64;
  var $i225: i64;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i229: i32;
  var $i231: i1;
  var $i233: i32;
  var $i232: i32;
  var $i230: i32;
  var $i234: i32;
  var $i235: i64;
  var $i236: i64;
  var $i237: i32;
  var $i238: i32;
  var $i239: i64;
  var $i240: i64;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i246: i1;
  var $i248: i32;
  var $i247: i32;
  var $i245: i32;
  var $i249: i32;
  var $i250: i64;
  var $i251: i64;
  var $i252: i32;
  var $i253: i32;
  var $i254: i64;
  var $i255: i64;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i259: i32;
  var $i261: i1;
  var $i263: i32;
  var $i262: i32;
  var $i260: i32;
  var $i264: i32;
  var $i265: i64;
  var $i266: i64;
  var $i267: i32;
  var $i268: i32;
  var $i269: i64;
  var $i270: i64;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i274: i32;
  var $i276: i1;
  var $i278: i32;
  var $i277: i32;
  var $i275: i32;
  var $i279: i32;
  var $i280: i64;
  var $i281: i64;
  var $i282: i32;
  var $i283: i32;
  var $i284: i64;
  var $i285: i64;
  var $i286: i32;
  var $i287: i32;
  var $i288: i1;
  var $i289: i32;
  var $i291: i1;
  var $i293: i32;
  var $i292: i32;
  var $i290: i32;
  var $i294: i32;
  var $i295: i64;
  var $i296: i64;
  var $i297: i32;
  var $i298: i32;
  var $i299: i64;
  var $i300: i64;
  var $i301: i32;
  var $i302: i32;
  var $i303: i1;
  var $i304: i32;
  var $i306: i1;
  var $i308: i32;
  var $i307: i32;
  var $i305: i32;
  var $i309: i32;
  var $i310: i64;
  var $i311: i64;
  var $i312: i32;
  var $i313: i32;
  var $i314: i64;
  var $i315: i64;
  var $i316: i32;
  var $i317: i32;
  var $i318: i1;
  var $i319: i32;
  var $i321: i1;
  var $i323: i32;
  var $i322: i32;
  var $i320: i32;
  var $i324: i32;
  var $i325: i64;
  var $i326: i64;
  var $i327: i32;
  var $i328: i32;
  var $i329: i64;
  var $i330: i64;
  var $i331: i32;
  var $i332: i32;
  var $i333: i1;
  var $i334: i32;
  var $i336: i1;
  var $i338: i32;
  var $i337: i32;
  var $i335: i32;
  var $i339: i32;
  var $i340: i64;
  var $i341: i64;
  var $i342: i32;
  var $i343: i32;
  var $i344: i64;
  var $i345: i64;
  var $i346: i32;
  var $i347: i32;
  var $i348: i1;
  var $i349: i32;
  var $i351: i1;
  var $i353: i32;
  var $i352: i32;
  var $i350: i32;
  var $i354: i32;
  var $i355: i64;
  var $i356: i64;
  var $i357: i32;
  var $i358: i32;
  var $i359: i64;
  var $i360: i64;
  var $i361: i32;
  var $i362: i32;
  var $i363: i1;
  var $i364: i32;
  var $i366: i1;
  var $i368: i32;
  var $i367: i32;
  var $i365: i32;
  var $i369: i32;
  var $i370: i64;
  var $i371: i64;
  var $i372: i32;
  var $i373: i32;
  var $i374: i64;
  var $i375: i64;
  var $i376: i32;
  var $i377: i32;
  var $i378: i1;
  var $i379: i32;
  var $i381: i1;
  var $i383: i32;
  var $i382: i32;
  var $i380: i32;
  var $i384: i32;
  var $i385: i64;
  var $i386: i64;
  var $i387: i32;
  var $i388: i32;
  var $i389: i64;
  var $i390: i64;
  var $i391: i32;
  var $i392: i32;
  var $i393: i1;
  var $i394: i32;
  var $i396: i1;
  var $i398: i32;
  var $i397: i32;
  var $i395: i32;
  var $i399: i32;
  var $i400: i64;
  var $i401: i64;
  var $i402: i32;
  var $i403: i32;
  var $i404: i64;
  var $i405: i64;
  var $i406: i32;
  var $i407: i32;
  var $i408: i1;
  var $i409: i32;
  var $i411: i1;
  var $i413: i32;
  var $i412: i32;
  var $i410: i32;
  var $i414: i32;
  var $i415: i64;
  var $i416: i64;
  var $i417: i32;
  var $i418: i32;
  var $i419: i64;
  var $i420: i64;
  var $i421: i32;
  var $i422: i32;
  var $i423: i1;
  var $i424: i32;
  var $i426: i1;
  var $i428: i32;
  var $i427: i32;
  var $i425: i32;
  var $i429: i32;
  var $i430: i64;
  var $i431: i64;
  var $i432: i32;
  var $i433: i32;
  var $i434: i64;
  var $i435: i64;
  var $i436: i32;
  var $i437: i32;
  var $i438: i1;
  var $i439: i32;
  var $i441: i1;
  var $i443: i32;
  var $i442: i32;
  var $i440: i32;
  var $i444: i32;
  var $i445: i64;
  var $i446: i64;
  var $i447: i32;
  var $i448: i32;
  var $i449: i64;
  var $i450: i64;
  var $i451: i32;
  var $i452: i32;
  var $i453: i1;
  var $i454: i32;
  var $i456: i1;
  var $i458: i32;
  var $i457: i32;
  var $i455: i32;
  var $i459: i32;
  var $i460: i64;
  var $i461: i64;
  var $i462: i32;
  var $i463: i32;
  var $i464: i64;
  var $i465: i64;
  var $i466: i32;
  var $i467: i32;
  var $i468: i1;
  var $i469: i32;
  var $i471: i1;
  var $i473: i32;
  var $i472: i32;
  var $i470: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__SMACK_or32:arg:a"} boogie_si_record_i32($i0);
  call {:cexpr "__SMACK_or32:arg:b"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1048, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32(0, 0);
  call {:cexpr "c"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i0, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1049, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1050, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i2, 1);
  call {:cexpr "c"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $i2;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1054, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i0, $i0);
  call {:cexpr "a"} boogie_si_record_i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $srem.i64($i10, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1055, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  call {:cexpr "a"} boogie_si_record_i32($i12);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1056, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i1, $i1);
  call {:cexpr "b"} boogie_si_record_i32($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $srem.i64($i14, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1057, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  call {:cexpr "b"} boogie_si_record_i32($i16);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1059, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i5, $i5);
  call {:cexpr "c"} boogie_si_record_i32($i17);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i12, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1060, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1052, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i2, 1);
  call {:cexpr "c"} boogie_si_record_i32($i8);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1053, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb6;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1051, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb6;
$bb6:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i5 := $i7;
  goto $bb3;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1061, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i17, 1);
  call {:cexpr "c"} boogie_si_record_i32($i19);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb9;
$bb8:
  assume !(($i18 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i16, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  $i22 := $i17;
  assume {:branchcond $i21} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1065, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i12, $i12);
  call {:cexpr "a"} boogie_si_record_i32($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $srem.i64($i25, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1066, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i64.i32($i26);
  call {:cexpr "a"} boogie_si_record_i32($i27);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1067, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i16, $i16);
  call {:cexpr "b"} boogie_si_record_i32($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $srem.i64($i29, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1068, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i64.i32($i30);
  call {:cexpr "b"} boogie_si_record_i32($i31);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1070, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i20, $i20);
  call {:cexpr "c"} boogie_si_record_i32($i32);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i27, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1071, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb13, $bb14;
$bb10:
  assume ($i21 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1063, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i17, 1);
  call {:cexpr "c"} boogie_si_record_i32($i23);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1064, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $i23;
  goto $bb12;
$bb11:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1062, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb12;
$bb12:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i20 := $i22;
  goto $bb9;
$bb13:
  assume ($i33 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1072, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i32, 1);
  call {:cexpr "c"} boogie_si_record_i32($i34);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $i34;
  goto $bb15;
$bb14:
  assume !(($i33 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 16} true;
  assume {:verifier.code 0} true;
  $i36 := $slt.i32($i31, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  $i37 := $i32;
  assume {:branchcond $i36} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1076, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i32($i27, $i27);
  call {:cexpr "a"} boogie_si_record_i32($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $srem.i64($i40, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1077, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i64.i32($i41);
  call {:cexpr "a"} boogie_si_record_i32($i42);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1078, 5} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i31, $i31);
  call {:cexpr "b"} boogie_si_record_i32($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i43);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $srem.i64($i44, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1079, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i64.i32($i45);
  call {:cexpr "b"} boogie_si_record_i32($i46);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1081, 5} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i35, $i35);
  call {:cexpr "c"} boogie_si_record_i32($i47);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i42, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb19, $bb20;
$bb16:
  assume ($i36 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1074, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i32, 1);
  call {:cexpr "c"} boogie_si_record_i32($i38);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1075, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i38;
  goto $bb18;
$bb17:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1073, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb18;
$bb18:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i35 := $i37;
  goto $bb15;
$bb19:
  assume ($i48 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1083, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i47, 1);
  call {:cexpr "c"} boogie_si_record_i32($i49);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $i49;
  goto $bb21;
$bb20:
  assume !(($i48 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $slt.i32($i46, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  $i52 := $i47;
  assume {:branchcond $i51} true;
  goto $bb22, $bb23;
$bb21:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1087, 5} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i42, $i42);
  call {:cexpr "a"} boogie_si_record_i32($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i54);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $srem.i64($i55, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1088, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i64.i32($i56);
  call {:cexpr "a"} boogie_si_record_i32($i57);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1089, 5} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i46, $i46);
  call {:cexpr "b"} boogie_si_record_i32($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i58);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $srem.i64($i59, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1090, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i64.i32($i60);
  call {:cexpr "b"} boogie_si_record_i32($i61);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1092, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i50, $i50);
  call {:cexpr "c"} boogie_si_record_i32($i62);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i57, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1093, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb25, $bb26;
$bb22:
  assume ($i51 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1085, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i47, 1);
  call {:cexpr "c"} boogie_si_record_i32($i53);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1086, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $i53;
  goto $bb24;
$bb23:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1084, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i51 == 1));
  goto $bb24;
$bb24:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i50 := $i52;
  goto $bb21;
$bb25:
  assume ($i63 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1094, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i62, 1);
  call {:cexpr "c"} boogie_si_record_i32($i64);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 3} true;
  assume {:verifier.code 0} true;
  $i65 := $i64;
  goto $bb27;
$bb26:
  assume !(($i63 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 16} true;
  assume {:verifier.code 0} true;
  $i66 := $slt.i32($i61, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  $i67 := $i62;
  assume {:branchcond $i66} true;
  goto $bb28, $bb29;
$bb27:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1098, 5} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i57, $i57);
  call {:cexpr "a"} boogie_si_record_i32($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i69);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $srem.i64($i70, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1099, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i64.i32($i71);
  call {:cexpr "a"} boogie_si_record_i32($i72);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1100, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i61, $i61);
  call {:cexpr "b"} boogie_si_record_i32($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i73);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $srem.i64($i74, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1101, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i64.i32($i75);
  call {:cexpr "b"} boogie_si_record_i32($i76);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1103, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i65, $i65);
  call {:cexpr "c"} boogie_si_record_i32($i77);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i72, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1104, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb31, $bb32;
$bb28:
  assume ($i66 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1096, 7} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i62, 1);
  call {:cexpr "c"} boogie_si_record_i32($i68);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1097, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $i68;
  goto $bb30;
$bb29:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1095, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb30;
$bb30:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i65 := $i67;
  goto $bb27;
$bb31:
  assume ($i78 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1105, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i77, 1);
  call {:cexpr "c"} boogie_si_record_i32($i79);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $i79;
  goto $bb33;
$bb32:
  assume !(($i78 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 16} true;
  assume {:verifier.code 0} true;
  $i81 := $slt.i32($i76, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  $i82 := $i77;
  assume {:branchcond $i81} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1109, 5} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i72, $i72);
  call {:cexpr "a"} boogie_si_record_i32($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i84);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $srem.i64($i85, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1110, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i64.i32($i86);
  call {:cexpr "a"} boogie_si_record_i32($i87);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1111, 5} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i76, $i76);
  call {:cexpr "b"} boogie_si_record_i32($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i88);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 9} true;
  assume {:verifier.code 0} true;
  $i90 := $srem.i64($i89, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1112, 7} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i64.i32($i90);
  call {:cexpr "b"} boogie_si_record_i32($i91);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1114, 5} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i80, $i80);
  call {:cexpr "c"} boogie_si_record_i32($i92);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i87, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb37, $bb38;
$bb34:
  assume ($i81 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1107, 7} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i32($i77, 1);
  call {:cexpr "c"} boogie_si_record_i32($i83);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1108, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $i83;
  goto $bb36;
$bb35:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1106, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1));
  goto $bb36;
$bb36:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i80 := $i82;
  goto $bb33;
$bb37:
  assume ($i93 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1116, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i32($i92, 1);
  call {:cexpr "c"} boogie_si_record_i32($i94);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $i94;
  goto $bb39;
$bb38:
  assume !(($i93 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 16} true;
  assume {:verifier.code 0} true;
  $i96 := $slt.i32($i91, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  $i97 := $i92;
  assume {:branchcond $i96} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1120, 5} true;
  assume {:verifier.code 0} true;
  $i99 := $add.i32($i87, $i87);
  call {:cexpr "a"} boogie_si_record_i32($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i99);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $srem.i64($i100, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1121, 7} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i64.i32($i101);
  call {:cexpr "a"} boogie_si_record_i32($i102);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1122, 5} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i32($i91, $i91);
  call {:cexpr "b"} boogie_si_record_i32($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $srem.i64($i104, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1123, 7} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i64.i32($i105);
  call {:cexpr "b"} boogie_si_record_i32($i106);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1125, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i95, $i95);
  call {:cexpr "c"} boogie_si_record_i32($i107);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 9} true;
  assume {:verifier.code 0} true;
  $i108 := $slt.i32($i102, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1126, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb43, $bb44;
$bb40:
  assume ($i96 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1118, 7} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i92, 1);
  call {:cexpr "c"} boogie_si_record_i32($i98);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1119, 3} true;
  assume {:verifier.code 0} true;
  $i97 := $i98;
  goto $bb42;
$bb41:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1117, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i96 == 1));
  goto $bb42;
$bb42:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i95 := $i97;
  goto $bb39;
$bb43:
  assume ($i108 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1127, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i107, 1);
  call {:cexpr "c"} boogie_si_record_i32($i109);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 3} true;
  assume {:verifier.code 0} true;
  $i110 := $i109;
  goto $bb45;
$bb44:
  assume !(($i108 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 16} true;
  assume {:verifier.code 0} true;
  $i111 := $slt.i32($i106, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  $i112 := $i107;
  assume {:branchcond $i111} true;
  goto $bb46, $bb47;
$bb45:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1131, 5} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i32($i102, $i102);
  call {:cexpr "a"} boogie_si_record_i32($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i114);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 9} true;
  assume {:verifier.code 0} true;
  $i116 := $srem.i64($i115, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1132, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $trunc.i64.i32($i116);
  call {:cexpr "a"} boogie_si_record_i32($i117);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1133, 5} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i32($i106, $i106);
  call {:cexpr "b"} boogie_si_record_i32($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i32.i64($i118);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 9} true;
  assume {:verifier.code 0} true;
  $i120 := $srem.i64($i119, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1134, 7} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i64.i32($i120);
  call {:cexpr "b"} boogie_si_record_i32($i121);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1136, 5} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i110, $i110);
  call {:cexpr "c"} boogie_si_record_i32($i122);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i117, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1137, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb49, $bb50;
$bb46:
  assume ($i111 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1129, 7} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i107, 1);
  call {:cexpr "c"} boogie_si_record_i32($i113);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1130, 3} true;
  assume {:verifier.code 0} true;
  $i112 := $i113;
  goto $bb48;
$bb47:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1128, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i111 == 1));
  goto $bb48;
$bb48:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i110 := $i112;
  goto $bb45;
$bb49:
  assume ($i123 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1138, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i32($i122, 1);
  call {:cexpr "c"} boogie_si_record_i32($i124);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 3} true;
  assume {:verifier.code 0} true;
  $i125 := $i124;
  goto $bb51;
$bb50:
  assume !(($i123 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 16} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i121, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  $i127 := $i122;
  assume {:branchcond $i126} true;
  goto $bb52, $bb53;
$bb51:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1142, 5} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i32($i117, $i117);
  call {:cexpr "a"} boogie_si_record_i32($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i130 := $sext.i32.i64($i129);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 9} true;
  assume {:verifier.code 0} true;
  $i131 := $srem.i64($i130, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1143, 7} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i64.i32($i131);
  call {:cexpr "a"} boogie_si_record_i32($i132);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1144, 5} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i121, $i121);
  call {:cexpr "b"} boogie_si_record_i32($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i134 := $sext.i32.i64($i133);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 9} true;
  assume {:verifier.code 0} true;
  $i135 := $srem.i64($i134, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1145, 7} true;
  assume {:verifier.code 0} true;
  $i136 := $trunc.i64.i32($i135);
  call {:cexpr "b"} boogie_si_record_i32($i136);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1147, 5} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i125, $i125);
  call {:cexpr "c"} boogie_si_record_i32($i137);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 9} true;
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i132, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1148, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb55, $bb56;
$bb52:
  assume ($i126 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1140, 7} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i122, 1);
  call {:cexpr "c"} boogie_si_record_i32($i128);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1141, 3} true;
  assume {:verifier.code 0} true;
  $i127 := $i128;
  goto $bb54;
$bb53:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1139, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i126 == 1));
  goto $bb54;
$bb54:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i125 := $i127;
  goto $bb51;
$bb55:
  assume ($i138 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1149, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $add.i32($i137, 1);
  call {:cexpr "c"} boogie_si_record_i32($i139);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 3} true;
  assume {:verifier.code 0} true;
  $i140 := $i139;
  goto $bb57;
$bb56:
  assume !(($i138 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 16} true;
  assume {:verifier.code 0} true;
  $i141 := $slt.i32($i136, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  $i142 := $i137;
  assume {:branchcond $i141} true;
  goto $bb58, $bb59;
$bb57:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1153, 5} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i32($i132, $i132);
  call {:cexpr "a"} boogie_si_record_i32($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i145 := $sext.i32.i64($i144);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 9} true;
  assume {:verifier.code 0} true;
  $i146 := $srem.i64($i145, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1154, 7} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i64.i32($i146);
  call {:cexpr "a"} boogie_si_record_i32($i147);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1155, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i32($i136, $i136);
  call {:cexpr "b"} boogie_si_record_i32($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i149 := $sext.i32.i64($i148);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 9} true;
  assume {:verifier.code 0} true;
  $i150 := $srem.i64($i149, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1156, 7} true;
  assume {:verifier.code 0} true;
  $i151 := $trunc.i64.i32($i150);
  call {:cexpr "b"} boogie_si_record_i32($i151);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1158, 5} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i140, $i140);
  call {:cexpr "c"} boogie_si_record_i32($i152);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i147, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb61, $bb62;
$bb58:
  assume ($i141 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1151, 7} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i137, 1);
  call {:cexpr "c"} boogie_si_record_i32($i143);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1152, 3} true;
  assume {:verifier.code 0} true;
  $i142 := $i143;
  goto $bb60;
$bb59:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1150, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i141 == 1));
  goto $bb60;
$bb60:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i140 := $i142;
  goto $bb57;
$bb61:
  assume ($i153 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1160, 7} true;
  assume {:verifier.code 0} true;
  $i154 := $add.i32($i152, 1);
  call {:cexpr "c"} boogie_si_record_i32($i154);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 3} true;
  assume {:verifier.code 0} true;
  $i155 := $i154;
  goto $bb63;
$bb62:
  assume !(($i153 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 16} true;
  assume {:verifier.code 0} true;
  $i156 := $slt.i32($i151, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  $i157 := $i152;
  assume {:branchcond $i156} true;
  goto $bb64, $bb65;
$bb63:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1164, 5} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i32($i147, $i147);
  call {:cexpr "a"} boogie_si_record_i32($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i160 := $sext.i32.i64($i159);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $srem.i64($i160, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1165, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i64.i32($i161);
  call {:cexpr "a"} boogie_si_record_i32($i162);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1166, 5} true;
  assume {:verifier.code 0} true;
  $i163 := $add.i32($i151, $i151);
  call {:cexpr "b"} boogie_si_record_i32($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i164 := $sext.i32.i64($i163);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 9} true;
  assume {:verifier.code 0} true;
  $i165 := $srem.i64($i164, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1167, 7} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.i64.i32($i165);
  call {:cexpr "b"} boogie_si_record_i32($i166);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1169, 5} true;
  assume {:verifier.code 0} true;
  $i167 := $add.i32($i155, $i155);
  call {:cexpr "c"} boogie_si_record_i32($i167);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i162, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1170, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb67, $bb68;
$bb64:
  assume ($i156 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1162, 7} true;
  assume {:verifier.code 0} true;
  $i158 := $add.i32($i152, 1);
  call {:cexpr "c"} boogie_si_record_i32($i158);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1163, 3} true;
  assume {:verifier.code 0} true;
  $i157 := $i158;
  goto $bb66;
$bb65:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1161, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i156 == 1));
  goto $bb66;
$bb66:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i155 := $i157;
  goto $bb63;
$bb67:
  assume ($i168 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1171, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $add.i32($i167, 1);
  call {:cexpr "c"} boogie_si_record_i32($i169);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 3} true;
  assume {:verifier.code 0} true;
  $i170 := $i169;
  goto $bb69;
$bb68:
  assume !(($i168 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 16} true;
  assume {:verifier.code 0} true;
  $i171 := $slt.i32($i166, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  $i172 := $i167;
  assume {:branchcond $i171} true;
  goto $bb70, $bb71;
$bb69:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1175, 5} true;
  assume {:verifier.code 0} true;
  $i174 := $add.i32($i162, $i162);
  call {:cexpr "a"} boogie_si_record_i32($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i175 := $sext.i32.i64($i174);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 9} true;
  assume {:verifier.code 0} true;
  $i176 := $srem.i64($i175, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1176, 7} true;
  assume {:verifier.code 0} true;
  $i177 := $trunc.i64.i32($i176);
  call {:cexpr "a"} boogie_si_record_i32($i177);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1177, 5} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i166, $i166);
  call {:cexpr "b"} boogie_si_record_i32($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i179 := $sext.i32.i64($i178);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 9} true;
  assume {:verifier.code 0} true;
  $i180 := $srem.i64($i179, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1178, 7} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.i64.i32($i180);
  call {:cexpr "b"} boogie_si_record_i32($i181);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1180, 5} true;
  assume {:verifier.code 0} true;
  $i182 := $add.i32($i170, $i170);
  call {:cexpr "c"} boogie_si_record_i32($i182);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $slt.i32($i177, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1181, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb73, $bb74;
$bb70:
  assume ($i171 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1173, 7} true;
  assume {:verifier.code 0} true;
  $i173 := $add.i32($i167, 1);
  call {:cexpr "c"} boogie_si_record_i32($i173);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1174, 3} true;
  assume {:verifier.code 0} true;
  $i172 := $i173;
  goto $bb72;
$bb71:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1172, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i171 == 1));
  goto $bb72;
$bb72:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i170 := $i172;
  goto $bb69;
$bb73:
  assume ($i183 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1182, 7} true;
  assume {:verifier.code 0} true;
  $i184 := $add.i32($i182, 1);
  call {:cexpr "c"} boogie_si_record_i32($i184);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 3} true;
  assume {:verifier.code 0} true;
  $i185 := $i184;
  goto $bb75;
$bb74:
  assume !(($i183 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 16} true;
  assume {:verifier.code 0} true;
  $i186 := $slt.i32($i181, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  $i187 := $i182;
  assume {:branchcond $i186} true;
  goto $bb76, $bb77;
$bb75:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1186, 5} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i177, $i177);
  call {:cexpr "a"} boogie_si_record_i32($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i190 := $sext.i32.i64($i189);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 9} true;
  assume {:verifier.code 0} true;
  $i191 := $srem.i64($i190, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1187, 7} true;
  assume {:verifier.code 0} true;
  $i192 := $trunc.i64.i32($i191);
  call {:cexpr "a"} boogie_si_record_i32($i192);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1188, 5} true;
  assume {:verifier.code 0} true;
  $i193 := $add.i32($i181, $i181);
  call {:cexpr "b"} boogie_si_record_i32($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i194 := $sext.i32.i64($i193);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 9} true;
  assume {:verifier.code 0} true;
  $i195 := $srem.i64($i194, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1189, 7} true;
  assume {:verifier.code 0} true;
  $i196 := $trunc.i64.i32($i195);
  call {:cexpr "b"} boogie_si_record_i32($i196);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1191, 5} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i185, $i185);
  call {:cexpr "c"} boogie_si_record_i32($i197);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i192, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb79, $bb80;
$bb76:
  assume ($i186 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1184, 7} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i182, 1);
  call {:cexpr "c"} boogie_si_record_i32($i188);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1185, 3} true;
  assume {:verifier.code 0} true;
  $i187 := $i188;
  goto $bb78;
$bb77:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1183, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i186 == 1));
  goto $bb78;
$bb78:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i185 := $i187;
  goto $bb75;
$bb79:
  assume ($i198 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1193, 7} true;
  assume {:verifier.code 0} true;
  $i199 := $add.i32($i197, 1);
  call {:cexpr "c"} boogie_si_record_i32($i199);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 3} true;
  assume {:verifier.code 0} true;
  $i200 := $i199;
  goto $bb81;
$bb80:
  assume !(($i198 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 16} true;
  assume {:verifier.code 0} true;
  $i201 := $slt.i32($i196, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  $i202 := $i197;
  assume {:branchcond $i201} true;
  goto $bb82, $bb83;
$bb81:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1197, 5} true;
  assume {:verifier.code 0} true;
  $i204 := $add.i32($i192, $i192);
  call {:cexpr "a"} boogie_si_record_i32($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i205 := $sext.i32.i64($i204);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 9} true;
  assume {:verifier.code 0} true;
  $i206 := $srem.i64($i205, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1198, 7} true;
  assume {:verifier.code 0} true;
  $i207 := $trunc.i64.i32($i206);
  call {:cexpr "a"} boogie_si_record_i32($i207);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1199, 5} true;
  assume {:verifier.code 0} true;
  $i208 := $add.i32($i196, $i196);
  call {:cexpr "b"} boogie_si_record_i32($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i32.i64($i208);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $srem.i64($i209, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1200, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $trunc.i64.i32($i210);
  call {:cexpr "b"} boogie_si_record_i32($i211);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1202, 5} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i200, $i200);
  call {:cexpr "c"} boogie_si_record_i32($i212);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i207, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1203, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb85, $bb86;
$bb82:
  assume ($i201 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1195, 7} true;
  assume {:verifier.code 0} true;
  $i203 := $add.i32($i197, 1);
  call {:cexpr "c"} boogie_si_record_i32($i203);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1196, 3} true;
  assume {:verifier.code 0} true;
  $i202 := $i203;
  goto $bb84;
$bb83:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1194, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i201 == 1));
  goto $bb84;
$bb84:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i200 := $i202;
  goto $bb81;
$bb85:
  assume ($i213 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1204, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $add.i32($i212, 1);
  call {:cexpr "c"} boogie_si_record_i32($i214);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 3} true;
  assume {:verifier.code 0} true;
  $i215 := $i214;
  goto $bb87;
$bb86:
  assume !(($i213 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 16} true;
  assume {:verifier.code 0} true;
  $i216 := $slt.i32($i211, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  $i217 := $i212;
  assume {:branchcond $i216} true;
  goto $bb88, $bb89;
$bb87:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1208, 5} true;
  assume {:verifier.code 0} true;
  $i219 := $add.i32($i207, $i207);
  call {:cexpr "a"} boogie_si_record_i32($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $sext.i32.i64($i219);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $srem.i64($i220, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1209, 7} true;
  assume {:verifier.code 0} true;
  $i222 := $trunc.i64.i32($i221);
  call {:cexpr "a"} boogie_si_record_i32($i222);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1210, 5} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i32($i211, $i211);
  call {:cexpr "b"} boogie_si_record_i32($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i32.i64($i223);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 9} true;
  assume {:verifier.code 0} true;
  $i225 := $srem.i64($i224, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1211, 7} true;
  assume {:verifier.code 0} true;
  $i226 := $trunc.i64.i32($i225);
  call {:cexpr "b"} boogie_si_record_i32($i226);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1213, 5} true;
  assume {:verifier.code 0} true;
  $i227 := $add.i32($i215, $i215);
  call {:cexpr "c"} boogie_si_record_i32($i227);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 9} true;
  assume {:verifier.code 0} true;
  $i228 := $slt.i32($i222, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1214, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb91, $bb92;
$bb88:
  assume ($i216 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1206, 7} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i32($i212, 1);
  call {:cexpr "c"} boogie_si_record_i32($i218);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1207, 3} true;
  assume {:verifier.code 0} true;
  $i217 := $i218;
  goto $bb90;
$bb89:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1205, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i216 == 1));
  goto $bb90;
$bb90:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i215 := $i217;
  goto $bb87;
$bb91:
  assume ($i228 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1215, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $add.i32($i227, 1);
  call {:cexpr "c"} boogie_si_record_i32($i229);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 3} true;
  assume {:verifier.code 0} true;
  $i230 := $i229;
  goto $bb93;
$bb92:
  assume !(($i228 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 16} true;
  assume {:verifier.code 0} true;
  $i231 := $slt.i32($i226, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  $i232 := $i227;
  assume {:branchcond $i231} true;
  goto $bb94, $bb95;
$bb93:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1219, 5} true;
  assume {:verifier.code 0} true;
  $i234 := $add.i32($i222, $i222);
  call {:cexpr "a"} boogie_si_record_i32($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i32.i64($i234);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 9} true;
  assume {:verifier.code 0} true;
  $i236 := $srem.i64($i235, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1220, 7} true;
  assume {:verifier.code 0} true;
  $i237 := $trunc.i64.i32($i236);
  call {:cexpr "a"} boogie_si_record_i32($i237);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1221, 5} true;
  assume {:verifier.code 0} true;
  $i238 := $add.i32($i226, $i226);
  call {:cexpr "b"} boogie_si_record_i32($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i239 := $sext.i32.i64($i238);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $srem.i64($i239, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1222, 7} true;
  assume {:verifier.code 0} true;
  $i241 := $trunc.i64.i32($i240);
  call {:cexpr "b"} boogie_si_record_i32($i241);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1224, 5} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i230, $i230);
  call {:cexpr "c"} boogie_si_record_i32($i242);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 9} true;
  assume {:verifier.code 0} true;
  $i243 := $slt.i32($i237, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1225, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb97, $bb98;
$bb94:
  assume ($i231 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1217, 7} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i227, 1);
  call {:cexpr "c"} boogie_si_record_i32($i233);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1218, 3} true;
  assume {:verifier.code 0} true;
  $i232 := $i233;
  goto $bb96;
$bb95:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1216, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i231 == 1));
  goto $bb96;
$bb96:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i230 := $i232;
  goto $bb93;
$bb97:
  assume ($i243 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1226, 7} true;
  assume {:verifier.code 0} true;
  $i244 := $add.i32($i242, 1);
  call {:cexpr "c"} boogie_si_record_i32($i244);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 3} true;
  assume {:verifier.code 0} true;
  $i245 := $i244;
  goto $bb99;
$bb98:
  assume !(($i243 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 16} true;
  assume {:verifier.code 0} true;
  $i246 := $slt.i32($i241, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  $i247 := $i242;
  assume {:branchcond $i246} true;
  goto $bb100, $bb101;
$bb99:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1230, 5} true;
  assume {:verifier.code 0} true;
  $i249 := $add.i32($i237, $i237);
  call {:cexpr "a"} boogie_si_record_i32($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i250 := $sext.i32.i64($i249);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 9} true;
  assume {:verifier.code 0} true;
  $i251 := $srem.i64($i250, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1231, 7} true;
  assume {:verifier.code 0} true;
  $i252 := $trunc.i64.i32($i251);
  call {:cexpr "a"} boogie_si_record_i32($i252);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1232, 5} true;
  assume {:verifier.code 0} true;
  $i253 := $add.i32($i241, $i241);
  call {:cexpr "b"} boogie_si_record_i32($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i254 := $sext.i32.i64($i253);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 9} true;
  assume {:verifier.code 0} true;
  $i255 := $srem.i64($i254, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1233, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $trunc.i64.i32($i255);
  call {:cexpr "b"} boogie_si_record_i32($i256);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1235, 5} true;
  assume {:verifier.code 0} true;
  $i257 := $add.i32($i245, $i245);
  call {:cexpr "c"} boogie_si_record_i32($i257);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 9} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i252, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1236, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb103, $bb104;
$bb100:
  assume ($i246 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1228, 7} true;
  assume {:verifier.code 0} true;
  $i248 := $add.i32($i242, 1);
  call {:cexpr "c"} boogie_si_record_i32($i248);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1229, 3} true;
  assume {:verifier.code 0} true;
  $i247 := $i248;
  goto $bb102;
$bb101:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1227, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i246 == 1));
  goto $bb102;
$bb102:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i245 := $i247;
  goto $bb99;
$bb103:
  assume ($i258 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1237, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i32($i257, 1);
  call {:cexpr "c"} boogie_si_record_i32($i259);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 3} true;
  assume {:verifier.code 0} true;
  $i260 := $i259;
  goto $bb105;
$bb104:
  assume !(($i258 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 16} true;
  assume {:verifier.code 0} true;
  $i261 := $slt.i32($i256, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  $i262 := $i257;
  assume {:branchcond $i261} true;
  goto $bb106, $bb107;
$bb105:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1241, 5} true;
  assume {:verifier.code 0} true;
  $i264 := $add.i32($i252, $i252);
  call {:cexpr "a"} boogie_si_record_i32($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i265 := $sext.i32.i64($i264);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 9} true;
  assume {:verifier.code 0} true;
  $i266 := $srem.i64($i265, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1242, 7} true;
  assume {:verifier.code 0} true;
  $i267 := $trunc.i64.i32($i266);
  call {:cexpr "a"} boogie_si_record_i32($i267);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1243, 5} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i32($i256, $i256);
  call {:cexpr "b"} boogie_si_record_i32($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i269 := $sext.i32.i64($i268);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 9} true;
  assume {:verifier.code 0} true;
  $i270 := $srem.i64($i269, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1244, 7} true;
  assume {:verifier.code 0} true;
  $i271 := $trunc.i64.i32($i270);
  call {:cexpr "b"} boogie_si_record_i32($i271);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1246, 5} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i260, $i260);
  call {:cexpr "c"} boogie_si_record_i32($i272);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 9} true;
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i267, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb109, $bb110;
$bb106:
  assume ($i261 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1239, 7} true;
  assume {:verifier.code 0} true;
  $i263 := $add.i32($i257, 1);
  call {:cexpr "c"} boogie_si_record_i32($i263);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1240, 3} true;
  assume {:verifier.code 0} true;
  $i262 := $i263;
  goto $bb108;
$bb107:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1238, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i261 == 1));
  goto $bb108;
$bb108:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i260 := $i262;
  goto $bb105;
$bb109:
  assume ($i273 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1248, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $add.i32($i272, 1);
  call {:cexpr "c"} boogie_si_record_i32($i274);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 3} true;
  assume {:verifier.code 0} true;
  $i275 := $i274;
  goto $bb111;
$bb110:
  assume !(($i273 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 16} true;
  assume {:verifier.code 0} true;
  $i276 := $slt.i32($i271, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  $i277 := $i272;
  assume {:branchcond $i276} true;
  goto $bb112, $bb113;
$bb111:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1252, 5} true;
  assume {:verifier.code 0} true;
  $i279 := $add.i32($i267, $i267);
  call {:cexpr "a"} boogie_si_record_i32($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i280 := $sext.i32.i64($i279);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 9} true;
  assume {:verifier.code 0} true;
  $i281 := $srem.i64($i280, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1253, 7} true;
  assume {:verifier.code 0} true;
  $i282 := $trunc.i64.i32($i281);
  call {:cexpr "a"} boogie_si_record_i32($i282);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1254, 5} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i271, $i271);
  call {:cexpr "b"} boogie_si_record_i32($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i284 := $sext.i32.i64($i283);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 9} true;
  assume {:verifier.code 0} true;
  $i285 := $srem.i64($i284, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1255, 7} true;
  assume {:verifier.code 0} true;
  $i286 := $trunc.i64.i32($i285);
  call {:cexpr "b"} boogie_si_record_i32($i286);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1257, 5} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i275, $i275);
  call {:cexpr "c"} boogie_si_record_i32($i287);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 9} true;
  assume {:verifier.code 0} true;
  $i288 := $slt.i32($i282, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i288} true;
  goto $bb115, $bb116;
$bb112:
  assume ($i276 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1250, 7} true;
  assume {:verifier.code 0} true;
  $i278 := $add.i32($i272, 1);
  call {:cexpr "c"} boogie_si_record_i32($i278);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1251, 3} true;
  assume {:verifier.code 0} true;
  $i277 := $i278;
  goto $bb114;
$bb113:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1249, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i276 == 1));
  goto $bb114;
$bb114:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i275 := $i277;
  goto $bb111;
$bb115:
  assume ($i288 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1259, 7} true;
  assume {:verifier.code 0} true;
  $i289 := $add.i32($i287, 1);
  call {:cexpr "c"} boogie_si_record_i32($i289);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 3} true;
  assume {:verifier.code 0} true;
  $i290 := $i289;
  goto $bb117;
$bb116:
  assume !(($i288 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 16} true;
  assume {:verifier.code 0} true;
  $i291 := $slt.i32($i286, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  $i292 := $i287;
  assume {:branchcond $i291} true;
  goto $bb118, $bb119;
$bb117:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1263, 5} true;
  assume {:verifier.code 0} true;
  $i294 := $add.i32($i282, $i282);
  call {:cexpr "a"} boogie_si_record_i32($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i295 := $sext.i32.i64($i294);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 9} true;
  assume {:verifier.code 0} true;
  $i296 := $srem.i64($i295, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1264, 7} true;
  assume {:verifier.code 0} true;
  $i297 := $trunc.i64.i32($i296);
  call {:cexpr "a"} boogie_si_record_i32($i297);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1265, 5} true;
  assume {:verifier.code 0} true;
  $i298 := $add.i32($i286, $i286);
  call {:cexpr "b"} boogie_si_record_i32($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i299 := $sext.i32.i64($i298);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 9} true;
  assume {:verifier.code 0} true;
  $i300 := $srem.i64($i299, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1266, 7} true;
  assume {:verifier.code 0} true;
  $i301 := $trunc.i64.i32($i300);
  call {:cexpr "b"} boogie_si_record_i32($i301);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1268, 5} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i290, $i290);
  call {:cexpr "c"} boogie_si_record_i32($i302);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 9} true;
  assume {:verifier.code 0} true;
  $i303 := $slt.i32($i297, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1269, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i303} true;
  goto $bb121, $bb122;
$bb118:
  assume ($i291 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1261, 7} true;
  assume {:verifier.code 0} true;
  $i293 := $add.i32($i287, 1);
  call {:cexpr "c"} boogie_si_record_i32($i293);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1262, 3} true;
  assume {:verifier.code 0} true;
  $i292 := $i293;
  goto $bb120;
$bb119:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1260, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i291 == 1));
  goto $bb120;
$bb120:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i290 := $i292;
  goto $bb117;
$bb121:
  assume ($i303 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1270, 7} true;
  assume {:verifier.code 0} true;
  $i304 := $add.i32($i302, 1);
  call {:cexpr "c"} boogie_si_record_i32($i304);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 3} true;
  assume {:verifier.code 0} true;
  $i305 := $i304;
  goto $bb123;
$bb122:
  assume !(($i303 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 16} true;
  assume {:verifier.code 0} true;
  $i306 := $slt.i32($i301, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  $i307 := $i302;
  assume {:branchcond $i306} true;
  goto $bb124, $bb125;
$bb123:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1274, 5} true;
  assume {:verifier.code 0} true;
  $i309 := $add.i32($i297, $i297);
  call {:cexpr "a"} boogie_si_record_i32($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i32.i64($i309);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 9} true;
  assume {:verifier.code 0} true;
  $i311 := $srem.i64($i310, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1275, 7} true;
  assume {:verifier.code 0} true;
  $i312 := $trunc.i64.i32($i311);
  call {:cexpr "a"} boogie_si_record_i32($i312);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1276, 5} true;
  assume {:verifier.code 0} true;
  $i313 := $add.i32($i301, $i301);
  call {:cexpr "b"} boogie_si_record_i32($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i314 := $sext.i32.i64($i313);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 9} true;
  assume {:verifier.code 0} true;
  $i315 := $srem.i64($i314, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1277, 7} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i64.i32($i315);
  call {:cexpr "b"} boogie_si_record_i32($i316);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1279, 5} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i305, $i305);
  call {:cexpr "c"} boogie_si_record_i32($i317);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 9} true;
  assume {:verifier.code 0} true;
  $i318 := $slt.i32($i312, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1280, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i318} true;
  goto $bb127, $bb128;
$bb124:
  assume ($i306 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1272, 7} true;
  assume {:verifier.code 0} true;
  $i308 := $add.i32($i302, 1);
  call {:cexpr "c"} boogie_si_record_i32($i308);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1273, 3} true;
  assume {:verifier.code 0} true;
  $i307 := $i308;
  goto $bb126;
$bb125:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1271, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i306 == 1));
  goto $bb126;
$bb126:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i305 := $i307;
  goto $bb123;
$bb127:
  assume ($i318 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1281, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i317, 1);
  call {:cexpr "c"} boogie_si_record_i32($i319);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 3} true;
  assume {:verifier.code 0} true;
  $i320 := $i319;
  goto $bb129;
$bb128:
  assume !(($i318 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 16} true;
  assume {:verifier.code 0} true;
  $i321 := $slt.i32($i316, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  $i322 := $i317;
  assume {:branchcond $i321} true;
  goto $bb130, $bb131;
$bb129:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1285, 5} true;
  assume {:verifier.code 0} true;
  $i324 := $add.i32($i312, $i312);
  call {:cexpr "a"} boogie_si_record_i32($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $sext.i32.i64($i324);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $srem.i64($i325, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1286, 7} true;
  assume {:verifier.code 0} true;
  $i327 := $trunc.i64.i32($i326);
  call {:cexpr "a"} boogie_si_record_i32($i327);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1287, 5} true;
  assume {:verifier.code 0} true;
  $i328 := $add.i32($i316, $i316);
  call {:cexpr "b"} boogie_si_record_i32($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i329 := $sext.i32.i64($i328);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 9} true;
  assume {:verifier.code 0} true;
  $i330 := $srem.i64($i329, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1288, 7} true;
  assume {:verifier.code 0} true;
  $i331 := $trunc.i64.i32($i330);
  call {:cexpr "b"} boogie_si_record_i32($i331);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1290, 5} true;
  assume {:verifier.code 0} true;
  $i332 := $add.i32($i320, $i320);
  call {:cexpr "c"} boogie_si_record_i32($i332);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 9} true;
  assume {:verifier.code 0} true;
  $i333 := $slt.i32($i327, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1291, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i333} true;
  goto $bb133, $bb134;
$bb130:
  assume ($i321 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1283, 7} true;
  assume {:verifier.code 0} true;
  $i323 := $add.i32($i317, 1);
  call {:cexpr "c"} boogie_si_record_i32($i323);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1284, 3} true;
  assume {:verifier.code 0} true;
  $i322 := $i323;
  goto $bb132;
$bb131:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1282, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i321 == 1));
  goto $bb132;
$bb132:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i320 := $i322;
  goto $bb129;
$bb133:
  assume ($i333 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1292, 7} true;
  assume {:verifier.code 0} true;
  $i334 := $add.i32($i332, 1);
  call {:cexpr "c"} boogie_si_record_i32($i334);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 3} true;
  assume {:verifier.code 0} true;
  $i335 := $i334;
  goto $bb135;
$bb134:
  assume !(($i333 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 16} true;
  assume {:verifier.code 0} true;
  $i336 := $slt.i32($i331, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  $i337 := $i332;
  assume {:branchcond $i336} true;
  goto $bb136, $bb137;
$bb135:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1296, 5} true;
  assume {:verifier.code 0} true;
  $i339 := $add.i32($i327, $i327);
  call {:cexpr "a"} boogie_si_record_i32($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i32.i64($i339);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 9} true;
  assume {:verifier.code 0} true;
  $i341 := $srem.i64($i340, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1297, 7} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i64.i32($i341);
  call {:cexpr "a"} boogie_si_record_i32($i342);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1298, 5} true;
  assume {:verifier.code 0} true;
  $i343 := $add.i32($i331, $i331);
  call {:cexpr "b"} boogie_si_record_i32($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i344 := $sext.i32.i64($i343);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 9} true;
  assume {:verifier.code 0} true;
  $i345 := $srem.i64($i344, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1299, 7} true;
  assume {:verifier.code 0} true;
  $i346 := $trunc.i64.i32($i345);
  call {:cexpr "b"} boogie_si_record_i32($i346);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1301, 5} true;
  assume {:verifier.code 0} true;
  $i347 := $add.i32($i335, $i335);
  call {:cexpr "c"} boogie_si_record_i32($i347);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 9} true;
  assume {:verifier.code 0} true;
  $i348 := $slt.i32($i342, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb139, $bb140;
$bb136:
  assume ($i336 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1294, 7} true;
  assume {:verifier.code 0} true;
  $i338 := $add.i32($i332, 1);
  call {:cexpr "c"} boogie_si_record_i32($i338);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1295, 3} true;
  assume {:verifier.code 0} true;
  $i337 := $i338;
  goto $bb138;
$bb137:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1293, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i336 == 1));
  goto $bb138;
$bb138:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i335 := $i337;
  goto $bb135;
$bb139:
  assume ($i348 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1303, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $add.i32($i347, 1);
  call {:cexpr "c"} boogie_si_record_i32($i349);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 3} true;
  assume {:verifier.code 0} true;
  $i350 := $i349;
  goto $bb141;
$bb140:
  assume !(($i348 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 16} true;
  assume {:verifier.code 0} true;
  $i351 := $slt.i32($i346, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  $i352 := $i347;
  assume {:branchcond $i351} true;
  goto $bb142, $bb143;
$bb141:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1307, 5} true;
  assume {:verifier.code 0} true;
  $i354 := $add.i32($i342, $i342);
  call {:cexpr "a"} boogie_si_record_i32($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i355 := $sext.i32.i64($i354);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 9} true;
  assume {:verifier.code 0} true;
  $i356 := $srem.i64($i355, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1308, 7} true;
  assume {:verifier.code 0} true;
  $i357 := $trunc.i64.i32($i356);
  call {:cexpr "a"} boogie_si_record_i32($i357);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1309, 5} true;
  assume {:verifier.code 0} true;
  $i358 := $add.i32($i346, $i346);
  call {:cexpr "b"} boogie_si_record_i32($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i359 := $sext.i32.i64($i358);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 9} true;
  assume {:verifier.code 0} true;
  $i360 := $srem.i64($i359, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1310, 7} true;
  assume {:verifier.code 0} true;
  $i361 := $trunc.i64.i32($i360);
  call {:cexpr "b"} boogie_si_record_i32($i361);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1312, 5} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i350, $i350);
  call {:cexpr "c"} boogie_si_record_i32($i362);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 9} true;
  assume {:verifier.code 0} true;
  $i363 := $slt.i32($i357, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb145, $bb146;
$bb142:
  assume ($i351 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1305, 7} true;
  assume {:verifier.code 0} true;
  $i353 := $add.i32($i347, 1);
  call {:cexpr "c"} boogie_si_record_i32($i353);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1306, 3} true;
  assume {:verifier.code 0} true;
  $i352 := $i353;
  goto $bb144;
$bb143:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1304, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i351 == 1));
  goto $bb144;
$bb144:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i350 := $i352;
  goto $bb141;
$bb145:
  assume ($i363 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1314, 7} true;
  assume {:verifier.code 0} true;
  $i364 := $add.i32($i362, 1);
  call {:cexpr "c"} boogie_si_record_i32($i364);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 3} true;
  assume {:verifier.code 0} true;
  $i365 := $i364;
  goto $bb147;
$bb146:
  assume !(($i363 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 16} true;
  assume {:verifier.code 0} true;
  $i366 := $slt.i32($i361, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  $i367 := $i362;
  assume {:branchcond $i366} true;
  goto $bb148, $bb149;
$bb147:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1318, 5} true;
  assume {:verifier.code 0} true;
  $i369 := $add.i32($i357, $i357);
  call {:cexpr "a"} boogie_si_record_i32($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i370 := $sext.i32.i64($i369);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 9} true;
  assume {:verifier.code 0} true;
  $i371 := $srem.i64($i370, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1319, 7} true;
  assume {:verifier.code 0} true;
  $i372 := $trunc.i64.i32($i371);
  call {:cexpr "a"} boogie_si_record_i32($i372);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1320, 5} true;
  assume {:verifier.code 0} true;
  $i373 := $add.i32($i361, $i361);
  call {:cexpr "b"} boogie_si_record_i32($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $sext.i32.i64($i373);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 9} true;
  assume {:verifier.code 0} true;
  $i375 := $srem.i64($i374, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1321, 7} true;
  assume {:verifier.code 0} true;
  $i376 := $trunc.i64.i32($i375);
  call {:cexpr "b"} boogie_si_record_i32($i376);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1323, 5} true;
  assume {:verifier.code 0} true;
  $i377 := $add.i32($i365, $i365);
  call {:cexpr "c"} boogie_si_record_i32($i377);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $slt.i32($i372, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1324, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i378} true;
  goto $bb151, $bb152;
$bb148:
  assume ($i366 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1316, 7} true;
  assume {:verifier.code 0} true;
  $i368 := $add.i32($i362, 1);
  call {:cexpr "c"} boogie_si_record_i32($i368);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1317, 3} true;
  assume {:verifier.code 0} true;
  $i367 := $i368;
  goto $bb150;
$bb149:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1315, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i366 == 1));
  goto $bb150;
$bb150:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i365 := $i367;
  goto $bb147;
$bb151:
  assume ($i378 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1325, 7} true;
  assume {:verifier.code 0} true;
  $i379 := $add.i32($i377, 1);
  call {:cexpr "c"} boogie_si_record_i32($i379);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 3} true;
  assume {:verifier.code 0} true;
  $i380 := $i379;
  goto $bb153;
$bb152:
  assume !(($i378 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 16} true;
  assume {:verifier.code 0} true;
  $i381 := $slt.i32($i376, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  $i382 := $i377;
  assume {:branchcond $i381} true;
  goto $bb154, $bb155;
$bb153:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1329, 5} true;
  assume {:verifier.code 0} true;
  $i384 := $add.i32($i372, $i372);
  call {:cexpr "a"} boogie_si_record_i32($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i385 := $sext.i32.i64($i384);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 9} true;
  assume {:verifier.code 0} true;
  $i386 := $srem.i64($i385, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1330, 7} true;
  assume {:verifier.code 0} true;
  $i387 := $trunc.i64.i32($i386);
  call {:cexpr "a"} boogie_si_record_i32($i387);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1331, 5} true;
  assume {:verifier.code 0} true;
  $i388 := $add.i32($i376, $i376);
  call {:cexpr "b"} boogie_si_record_i32($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i389 := $sext.i32.i64($i388);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 9} true;
  assume {:verifier.code 0} true;
  $i390 := $srem.i64($i389, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1332, 7} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.i64.i32($i390);
  call {:cexpr "b"} boogie_si_record_i32($i391);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1334, 5} true;
  assume {:verifier.code 0} true;
  $i392 := $add.i32($i380, $i380);
  call {:cexpr "c"} boogie_si_record_i32($i392);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 9} true;
  assume {:verifier.code 0} true;
  $i393 := $slt.i32($i387, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i393} true;
  goto $bb157, $bb158;
$bb154:
  assume ($i381 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1327, 7} true;
  assume {:verifier.code 0} true;
  $i383 := $add.i32($i377, 1);
  call {:cexpr "c"} boogie_si_record_i32($i383);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1328, 3} true;
  assume {:verifier.code 0} true;
  $i382 := $i383;
  goto $bb156;
$bb155:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1326, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i381 == 1));
  goto $bb156;
$bb156:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i380 := $i382;
  goto $bb153;
$bb157:
  assume ($i393 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1336, 7} true;
  assume {:verifier.code 0} true;
  $i394 := $add.i32($i392, 1);
  call {:cexpr "c"} boogie_si_record_i32($i394);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 3} true;
  assume {:verifier.code 0} true;
  $i395 := $i394;
  goto $bb159;
$bb158:
  assume !(($i393 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 16} true;
  assume {:verifier.code 0} true;
  $i396 := $slt.i32($i391, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  $i397 := $i392;
  assume {:branchcond $i396} true;
  goto $bb160, $bb161;
$bb159:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1340, 5} true;
  assume {:verifier.code 0} true;
  $i399 := $add.i32($i387, $i387);
  call {:cexpr "a"} boogie_si_record_i32($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i400 := $sext.i32.i64($i399);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 9} true;
  assume {:verifier.code 0} true;
  $i401 := $srem.i64($i400, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1341, 7} true;
  assume {:verifier.code 0} true;
  $i402 := $trunc.i64.i32($i401);
  call {:cexpr "a"} boogie_si_record_i32($i402);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1342, 5} true;
  assume {:verifier.code 0} true;
  $i403 := $add.i32($i391, $i391);
  call {:cexpr "b"} boogie_si_record_i32($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i404 := $sext.i32.i64($i403);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 9} true;
  assume {:verifier.code 0} true;
  $i405 := $srem.i64($i404, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1343, 7} true;
  assume {:verifier.code 0} true;
  $i406 := $trunc.i64.i32($i405);
  call {:cexpr "b"} boogie_si_record_i32($i406);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1345, 5} true;
  assume {:verifier.code 0} true;
  $i407 := $add.i32($i395, $i395);
  call {:cexpr "c"} boogie_si_record_i32($i407);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 9} true;
  assume {:verifier.code 0} true;
  $i408 := $slt.i32($i402, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1346, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i408} true;
  goto $bb163, $bb164;
$bb160:
  assume ($i396 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1338, 7} true;
  assume {:verifier.code 0} true;
  $i398 := $add.i32($i392, 1);
  call {:cexpr "c"} boogie_si_record_i32($i398);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1339, 3} true;
  assume {:verifier.code 0} true;
  $i397 := $i398;
  goto $bb162;
$bb161:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1337, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i396 == 1));
  goto $bb162;
$bb162:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i395 := $i397;
  goto $bb159;
$bb163:
  assume ($i408 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1347, 7} true;
  assume {:verifier.code 0} true;
  $i409 := $add.i32($i407, 1);
  call {:cexpr "c"} boogie_si_record_i32($i409);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 3} true;
  assume {:verifier.code 0} true;
  $i410 := $i409;
  goto $bb165;
$bb164:
  assume !(($i408 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 16} true;
  assume {:verifier.code 0} true;
  $i411 := $slt.i32($i406, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  $i412 := $i407;
  assume {:branchcond $i411} true;
  goto $bb166, $bb167;
$bb165:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1351, 5} true;
  assume {:verifier.code 0} true;
  $i414 := $add.i32($i402, $i402);
  call {:cexpr "a"} boogie_si_record_i32($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i415 := $sext.i32.i64($i414);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 9} true;
  assume {:verifier.code 0} true;
  $i416 := $srem.i64($i415, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1352, 7} true;
  assume {:verifier.code 0} true;
  $i417 := $trunc.i64.i32($i416);
  call {:cexpr "a"} boogie_si_record_i32($i417);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1353, 5} true;
  assume {:verifier.code 0} true;
  $i418 := $add.i32($i406, $i406);
  call {:cexpr "b"} boogie_si_record_i32($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i419 := $sext.i32.i64($i418);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 9} true;
  assume {:verifier.code 0} true;
  $i420 := $srem.i64($i419, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1354, 7} true;
  assume {:verifier.code 0} true;
  $i421 := $trunc.i64.i32($i420);
  call {:cexpr "b"} boogie_si_record_i32($i421);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1356, 5} true;
  assume {:verifier.code 0} true;
  $i422 := $add.i32($i410, $i410);
  call {:cexpr "c"} boogie_si_record_i32($i422);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 9} true;
  assume {:verifier.code 0} true;
  $i423 := $slt.i32($i417, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1357, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i423} true;
  goto $bb169, $bb170;
$bb166:
  assume ($i411 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1349, 7} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i407, 1);
  call {:cexpr "c"} boogie_si_record_i32($i413);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1350, 3} true;
  assume {:verifier.code 0} true;
  $i412 := $i413;
  goto $bb168;
$bb167:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1348, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i411 == 1));
  goto $bb168;
$bb168:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i410 := $i412;
  goto $bb165;
$bb169:
  assume ($i423 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1358, 7} true;
  assume {:verifier.code 0} true;
  $i424 := $add.i32($i422, 1);
  call {:cexpr "c"} boogie_si_record_i32($i424);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 3} true;
  assume {:verifier.code 0} true;
  $i425 := $i424;
  goto $bb171;
$bb170:
  assume !(($i423 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 16} true;
  assume {:verifier.code 0} true;
  $i426 := $slt.i32($i421, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  $i427 := $i422;
  assume {:branchcond $i426} true;
  goto $bb172, $bb173;
$bb171:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1362, 5} true;
  assume {:verifier.code 0} true;
  $i429 := $add.i32($i417, $i417);
  call {:cexpr "a"} boogie_si_record_i32($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i430 := $sext.i32.i64($i429);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 9} true;
  assume {:verifier.code 0} true;
  $i431 := $srem.i64($i430, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1363, 7} true;
  assume {:verifier.code 0} true;
  $i432 := $trunc.i64.i32($i431);
  call {:cexpr "a"} boogie_si_record_i32($i432);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1364, 5} true;
  assume {:verifier.code 0} true;
  $i433 := $add.i32($i421, $i421);
  call {:cexpr "b"} boogie_si_record_i32($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i32.i64($i433);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 9} true;
  assume {:verifier.code 0} true;
  $i435 := $srem.i64($i434, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1365, 7} true;
  assume {:verifier.code 0} true;
  $i436 := $trunc.i64.i32($i435);
  call {:cexpr "b"} boogie_si_record_i32($i436);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1367, 5} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i425, $i425);
  call {:cexpr "c"} boogie_si_record_i32($i437);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 9} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i432, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1368, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i438} true;
  goto $bb175, $bb176;
$bb172:
  assume ($i426 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1360, 7} true;
  assume {:verifier.code 0} true;
  $i428 := $add.i32($i422, 1);
  call {:cexpr "c"} boogie_si_record_i32($i428);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1361, 3} true;
  assume {:verifier.code 0} true;
  $i427 := $i428;
  goto $bb174;
$bb173:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1359, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i426 == 1));
  goto $bb174;
$bb174:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i425 := $i427;
  goto $bb171;
$bb175:
  assume ($i438 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1369, 7} true;
  assume {:verifier.code 0} true;
  $i439 := $add.i32($i437, 1);
  call {:cexpr "c"} boogie_si_record_i32($i439);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 3} true;
  assume {:verifier.code 0} true;
  $i440 := $i439;
  goto $bb177;
$bb176:
  assume !(($i438 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 16} true;
  assume {:verifier.code 0} true;
  $i441 := $slt.i32($i436, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  $i442 := $i437;
  assume {:branchcond $i441} true;
  goto $bb178, $bb179;
$bb177:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1373, 5} true;
  assume {:verifier.code 0} true;
  $i444 := $add.i32($i432, $i432);
  call {:cexpr "a"} boogie_si_record_i32($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i445 := $sext.i32.i64($i444);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 9} true;
  assume {:verifier.code 0} true;
  $i446 := $srem.i64($i445, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1374, 7} true;
  assume {:verifier.code 0} true;
  $i447 := $trunc.i64.i32($i446);
  call {:cexpr "a"} boogie_si_record_i32($i447);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1375, 5} true;
  assume {:verifier.code 0} true;
  $i448 := $add.i32($i436, $i436);
  call {:cexpr "b"} boogie_si_record_i32($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i449 := $sext.i32.i64($i448);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 9} true;
  assume {:verifier.code 0} true;
  $i450 := $srem.i64($i449, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1376, 7} true;
  assume {:verifier.code 0} true;
  $i451 := $trunc.i64.i32($i450);
  call {:cexpr "b"} boogie_si_record_i32($i451);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1378, 5} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i440, $i440);
  call {:cexpr "c"} boogie_si_record_i32($i452);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 9} true;
  assume {:verifier.code 0} true;
  $i453 := $slt.i32($i447, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i453} true;
  goto $bb181, $bb182;
$bb178:
  assume ($i441 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1371, 7} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i437, 1);
  call {:cexpr "c"} boogie_si_record_i32($i443);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1372, 3} true;
  assume {:verifier.code 0} true;
  $i442 := $i443;
  goto $bb180;
$bb179:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1370, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i441 == 1));
  goto $bb180;
$bb180:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i440 := $i442;
  goto $bb177;
$bb181:
  assume ($i453 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1380, 7} true;
  assume {:verifier.code 0} true;
  $i454 := $add.i32($i452, 1);
  call {:cexpr "c"} boogie_si_record_i32($i454);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 3} true;
  assume {:verifier.code 0} true;
  $i455 := $i454;
  goto $bb183;
$bb182:
  assume !(($i453 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 16} true;
  assume {:verifier.code 0} true;
  $i456 := $slt.i32($i451, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  $i457 := $i452;
  assume {:branchcond $i456} true;
  goto $bb184, $bb185;
$bb183:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1384, 5} true;
  assume {:verifier.code 0} true;
  $i459 := $add.i32($i447, $i447);
  call {:cexpr "a"} boogie_si_record_i32($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i460 := $sext.i32.i64($i459);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 9} true;
  assume {:verifier.code 0} true;
  $i461 := $srem.i64($i460, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1385, 7} true;
  assume {:verifier.code 0} true;
  $i462 := $trunc.i64.i32($i461);
  call {:cexpr "a"} boogie_si_record_i32($i462);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1386, 5} true;
  assume {:verifier.code 0} true;
  $i463 := $add.i32($i451, $i451);
  call {:cexpr "b"} boogie_si_record_i32($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i464 := $sext.i32.i64($i463);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 9} true;
  assume {:verifier.code 0} true;
  $i465 := $srem.i64($i464, 2147483648);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1387, 7} true;
  assume {:verifier.code 0} true;
  $i466 := $trunc.i64.i32($i465);
  call {:cexpr "b"} boogie_si_record_i32($i466);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1389, 5} true;
  assume {:verifier.code 0} true;
  $i467 := $add.i32($i455, $i455);
  call {:cexpr "c"} boogie_si_record_i32($i467);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 9} true;
  assume {:verifier.code 0} true;
  $i468 := $slt.i32($i462, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1390, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i468} true;
  goto $bb187, $bb188;
$bb184:
  assume ($i456 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1382, 7} true;
  assume {:verifier.code 0} true;
  $i458 := $add.i32($i452, 1);
  call {:cexpr "c"} boogie_si_record_i32($i458);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1383, 3} true;
  assume {:verifier.code 0} true;
  $i457 := $i458;
  goto $bb186;
$bb185:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1381, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i456 == 1));
  goto $bb186;
$bb186:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i455 := $i457;
  goto $bb183;
$bb187:
  assume ($i468 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1391, 7} true;
  assume {:verifier.code 0} true;
  $i469 := $add.i32($i467, 1);
  call {:cexpr "c"} boogie_si_record_i32($i469);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 3} true;
  assume {:verifier.code 0} true;
  $i470 := $i469;
  goto $bb189;
$bb188:
  assume !(($i468 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 16} true;
  assume {:verifier.code 0} true;
  $i471 := $slt.i32($i466, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  $i472 := $i467;
  assume {:branchcond $i471} true;
  goto $bb190, $bb191;
$bb189:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1400, 3} true;
  assume {:verifier.code 0} true;
  $r := $i470;
  $exn := false;
  return;
$bb190:
  assume ($i471 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1393, 7} true;
  assume {:verifier.code 0} true;
  $i473 := $add.i32($i467, 1);
  call {:cexpr "c"} boogie_si_record_i32($i473);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1394, 3} true;
  assume {:verifier.code 0} true;
  $i472 := $i473;
  goto $bb192;
$bb191:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1392, 14} true;
  assume {:verifier.code 0} true;
  assume !(($i471 == 1));
  goto $bb192;
$bb192:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i470 := $i472;
  goto $bb189;
}
const __SMACK_or64: ref;
axiom (__SMACK_or64 == $sub.ref(0, 220832));
procedure {:inline 1} __SMACK_or64($i0: i64, $i1: i64)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or64:arg:a"} boogie_si_record_i64($i0);
  call {:cexpr "__SMACK_or64:arg:b"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 63} true;
  assume {:verifier.code 1} true;
  $i2 := $trunc.i64.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 66} true;
  assume {:verifier.code 1} true;
  $i3 := $trunc.i64.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 50} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 44} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1403, 37} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or16: ref;
axiom (__SMACK_or16 == $sub.ref(0, 221864));
procedure {:inline 1} __SMACK_or16($i0: i16, $i1: i16)
  returns ($r: i16)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or16:arg:a"} boogie_si_record_i16($i0);
  call {:cexpr "__SMACK_or16:arg:b"} boogie_si_record_i16($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 67} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 70} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i16.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 54} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 47} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1404, 40} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_or8: ref;
axiom (__SMACK_or8 == $sub.ref(0, 222896));
procedure {:inline 1} __SMACK_or8($i0: i8, $i1: i8)
  returns ($r: i8)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_or8:arg:a"} boogie_si_record_i8($i0);
  call {:cexpr "__SMACK_or8:arg:b"} boogie_si_record_i8($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 62} true;
  assume {:verifier.code 1} true;
  $i2 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 65} true;
  assume {:verifier.code 1} true;
  $i3 := $sext.i8.i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 49} true;
  assume {:verifier.code 1} true;
  call $i4 := __SMACK_or32($i2, $i3);
  call {:cexpr "smack:ext:__SMACK_or32"} boogie_si_record_i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1405, 36} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0, 223928));
procedure {:inline 1} __SMACK_check_overflow($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1604, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1409, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} $i0 == $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1410, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_nondet_char: ref;
axiom (__VERIFIER_nondet_char == $sub.ref(0, 224960));
procedure {:inline 1} __VERIFIER_nondet_char()
  returns ($r: i8)
{
  var $i0: i8;
  var $i1: i32;
  var $i2: i1;
  var $i4: i32;
  var $i5: i1;
  var $i3: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1413, 12} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1413, 12} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_char();
  call {:cexpr "smack:ext:__SMACK_nondet_char"} boogie_si_record_i8($i0);
  call {:cexpr "x"} boogie_si_record_i8($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 21} true;
  assume {:verifier.code 0} true;
  $i1 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 23} true;
  assume {:verifier.code 0} true;
  $i2 := $sge.i32($i1, $sub.i32(0, 128));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 36} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 39} true;
  assume {:verifier.code 1} true;
  $i4 := $sext.i8.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 41} true;
  assume {:verifier.code 1} true;
  $i5 := $sle.i32($i4, 127);
  assume {:verifier.code 0} true;
  $i3 := $i5;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 36} true;
  assume {:verifier.code 1} true;
  $i6 := $zext.i1.i32($i3);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1414, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i6);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1415, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 225992));
procedure {:inline 1} __SMACK_nondet_char()
  returns ($r: i8);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 227024));
procedure {:inline 1} __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1461, 11} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1461, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1462, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1462, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1462, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1462, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1462, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1462, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1463, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 228056));
procedure {:inline 1} __SMACK_nondet_int()
  returns ($r: i32);
const __VERIFIER_nondet_long: ref;
axiom (__VERIFIER_nondet_long == $sub.ref(0, 229088));
procedure {:inline 1} __VERIFIER_nondet_long()
  returns ($r: i64)
{
  var $i0: i64;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1491, 12} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1491, 12} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_long();
  call {:cexpr "smack:ext:__SMACK_nondet_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1492, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i64($i0, $sub.i64(0, 9223372036854775808));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1492, 35} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1492, 40} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i64($i0, 9223372036854775807);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1492, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1492, 35} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1492, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1493, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 230120));
procedure {:inline 1} __SMACK_nondet_long()
  returns ($r: i64);
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 231152));
procedure {:inline 1} __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1602, 48} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1602, 48} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1602, 41} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 232184));
procedure {:inline 1} __VERIFIER_nondet()
  returns ($r: ref);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 233216));
type $mop;
procedure {:inline 1} boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exnv: int;
procedure {:inline 1} corral_atomic_begin();
procedure {:inline 1} corral_atomic_end();
procedure {:inline 1} $alloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

procedure {:inline 1} $malloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  }
}

procedure {:inline 1} $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 234248));
procedure {:inline 1} __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 235280));
procedure {:inline 1} __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1883, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1883, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1888, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 236312));
procedure {:inline 1} llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 237344));
procedure {:inline 1} __SMACK_static_init()
{
$bb0:
  $M.1 := 0;
  call {:cexpr "myStatus"} boogie_si_record_i32(0);
  $M.26 := $0.ref;
  $M.11 := 0;
  call {:cexpr "pended"} boogie_si_record_i32(0);
  $M.30 := 5;
  call {:cexpr "PptDot3Retries"} boogie_si_record_i8(5);
  $M.29 := 0;
  call {:cexpr "Extension_FilterMode"} boogie_si_record_i32(0);
  $M.56 := 0;
  $M.57 := 0;
  $M.2 := 0;
  call {:cexpr "s"} boogie_si_record_i32(0);
  $M.3 := 0;
  call {:cexpr "NP"} boogie_si_record_i32(0);
  $M.22 := 0;
  call {:cexpr "SKIP1"} boogie_si_record_i32(0);
  $M.18 := 0;
  call {:cexpr "compRegistered"} boogie_si_record_i32(0);
  $M.19 := $0.ref;
  $M.20 := 0;
  call {:cexpr "routine"} boogie_si_record_i32(0);
  $M.0 := $store.i64($M.0, PptWmiAllocFreeCountsGuid, 1270573546);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(8, 1)), 26707);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(10, 1)), 4562);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(0, 1)), $sub.i8(0, 114));
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(1, 1)), $sub.i8(0, 50));
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(3, 1)), $sub.i8(0, 64));
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(4, 1)), 79);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(5, 1)), $sub.i8(0, 114));
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(6, 1)), $sub.i8(0, 12));
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(PptWmiAllocFreeCountsGuid, $mul.ref(0, 24)), $mul.ref(12, 1)), $mul.ref(7, 1)), $sub.i8(0, 127));
  $M.0 := $store.ref($M.0, PptWmiGuidList, PptWmiAllocFreeCountsGuid);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(PptWmiGuidList, $mul.ref(0, 24)), $mul.ref(0, 24)), $mul.ref(8, 1)), 1);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(PptWmiGuidList, $mul.ref(0, 24)), $mul.ref(0, 24)), $mul.ref(16, 1)), 0);
  $M.4 := 0;
  call {:cexpr "DC"} boogie_si_record_i32(0);
  $M.102 := 0;
  call {:cexpr "UNLOADED"} boogie_si_record_i32(0);
  $M.47 := 0;
  call {:cexpr "SKIP2"} boogie_si_record_i32(0);
  $M.45 := 0;
  call {:cexpr "MPR1"} boogie_si_record_i32(0);
  $M.46 := 0;
  call {:cexpr "MPR3"} boogie_si_record_i32(0);
  $M.43 := 0;
  call {:cexpr "IPC"} boogie_si_record_i32(0);
  $M.44 := 0;
  call {:cexpr "lowerDriverReturn"} boogie_si_record_i32(0);
  $M.50 := 0;
  call {:cexpr "setEventCalled"} boogie_si_record_i32(0);
  $M.54 := 0;
  call {:cexpr "customIrp"} boogie_si_record_i32(0);
  $M.103 := $0.ref;
  $M.32 := $store.i8($M.32, ModeQualifier___6, $sub.i8(0, 86));
  $M.32 := $store.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(1, 1)), 85);
  $M.32 := $store.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(2, 1)), 0);
  $M.32 := $store.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(3, 1)), $sub.i8(0, 1));
  $M.32 := $store.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(4, 1)), $sub.i8(0, 121));
  $M.32 := $store.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(5, 1)), 120);
  $M.32 := $store.i8($M.32, $add.ref($add.ref(ModeQualifier___6, $mul.ref(0, 7)), $mul.ref(6, 1)), $sub.i8(0, 1));
  $M.31 := $store.i8($M.31, LegacyZipModeQualifier___11, 0);
  $M.31 := $store.i8($M.31, $add.ref($add.ref(LegacyZipModeQualifier___11, $mul.ref(0, 3)), $mul.ref(1, 1)), 60);
  $M.31 := $store.i8($M.31, $add.ref($add.ref(LegacyZipModeQualifier___11, $mul.ref(0, 3)), $mul.ref(2, 1)), 32);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 238376));
procedure {:inline 1} devirtbounce(funcPtr: ref, arg: ref, arg1: i8)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 239408));
procedure {:inline 1} devirtbounce.1(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $i1: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i1 := $eq.ref(PptFreePortFromInterruptLevel, $p0);
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  call PptFreePortFromInterruptLevel(arg);
  $exn := false;
  return;
$bb3:
  assume !(($i1 == 1));
  assume false;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 240440));
procedure {:inline 1} devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref)
  returns ($r: i8)
{
  var $p0: ref;
  var $i1: i8;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(PptInterruptService, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := PptInterruptService(arg, arg1);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
procedure {:inline 1} $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

const $u0: i64;
const $u1: i8;
const $u2: i32;
procedure {:inline 1} boogie_si_record_i16(x: i16);
procedure {:inline 1} boogie_si_record_i32(x: i32);
procedure {:inline 1} boogie_si_record_i64(x: i64);
procedure {:inline 1} boogie_si_record_i8(x: i8);
procedure {:inline 1} boogie_si_record_ref(x: ref);
procedure {:inline 1} $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
